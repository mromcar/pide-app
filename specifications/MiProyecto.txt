üßæ Nombre del Proyecto
Pide

Opci√≥n A (recomendada): API first-class multilenguaje. Los endpoints de create/update aceptan la entidad + translations[] y persisten todo en una transacci√≥n. Beneficios: atomicidad, menos round trips, validaci√≥n √∫nica con Zod, consistencia y escalabilidad.
Plan pr√°ctico

Mantener en UI un modelo unificado con translations: Record<LanguageCode, ...>.
A√±adir mappers UI ‚Üî DTO en una capa fina (adaptadores). Ahora pueden mapear ‚Äúsolo ES‚Äù si el backend a√∫n no acepta translations; cuando el backend est√© listo, solo cambias los mappers.
Siguiente paso: crear mappers y alinear onCreate de tablas


Contratos estables: los DTOs aceptan translations desde hoy, aunque temporalmente env√≠es solo ES. No cambias la firma luego.
Atomicidad: una transacci√≥n por operaci√≥n (crear/actualizar) mantiene coherencia.
Adaptadores finos: el frontend mapea su modelo UI a DTOs en un solo lugar src/services/mappers/menuMappers.ts. Cambios futuros no tocan componentes.
Reutilizaci√≥n: los servicios existentes siguen siendo la √∫nica fuente de verdad: category.api.ts, product.api.ts, variant.api.ts, allergen.api.ts


ran enfoque profesional: ‚ÄúMaster‚ÄìDetail‚Äù con 3 zonas y edici√≥n en caj√≥n (drawer)

Columna izquierda: categor√≠as (lista con orden, crear/renombrar/activar/eliminar, estados vac√≠os).
Panel central: tabla de productos de la categor√≠a seleccionada (CRUD, activar/desactivar, precio, al√©rgenos con checks).
Panel derecho o Drawer: variantes del producto seleccionado y formularios de edici√≥n/creaci√≥n.
Edici√≥n en Drawer con pesta√±as por idioma para capturar traducciones (categor√≠a/producto/variante). Las im√°genes no se muestran; solo bot√≥n ‚ÄúActualizar imagen‚Äù (stub para implementar luego).
Estados vac√≠os guiados: si no hay categor√≠as > CTA crear; si no hay productos > CTA crear; si no hay variantes > CTA crear.
Persistencia: cada operaci√≥n guarda entidad base + sus traducciones. Los al√©rgenos se gestionan por checkboxes con el cat√°logo completo.
Te dejo el scaffolding inicial (componentes y estructura). Es c√≥digo listo para ir conectando tus servicios reales sin romper la app.

P√°gina: usar el nuevo manager

üí° ¬øQu√© es Pide?
Pide es una plataforma web responsive (m√≥vil, tablet, PC) dise√±ada para digitalizar la experiencia de pedir en bares, restaurantes y otros establecimientos hosteleros.
 A trav√©s de un c√≥digo QR, los clientes pueden acceder a la carta de un establecimiento concreto, hacer pedidos desde su dispositivo m√≥vil sin esperar al camarero, y opcionalmente pagar.
Su funcionamiento es similar al kiosko de McDonald's, pero m√°s flexible: puede actuar como un sistema interactivo de pedidos o simplemente como una carta digital con categor√≠as, descripciones, precios, variantes, al√©rgenos, etc.

üßç Cliente (sin cuenta)
Acceso por QR: Escanea un QR √∫nico que incluye el identificador del establecimiento y datos opcionales como n√∫mero o zona de mesa.


Consulta del Men√∫: Visualiza la carta actualizada con categor√≠as, productos, variantes, precios, al√©rgenos y descripciones.


Realiza pedidos: Puede pedir desde su m√≥vil sin necesidad de esperar al camarero.


Pago opcional: Puede pagar en l√≠nea si el establecimiento lo permite.


Seguimiento del pedido: Consulta en tiempo real el estado del pedido ("pendiente", "en preparaci√≥n", "listo", "entregado", etc.).


Gesti√≥n de pedidos: Puede hacer varios pedidos o editar un pedido que a√∫n no haya sido tramitado.



üë®‚Äçüç≥ Empleado (con cuenta)
Inicio de sesi√≥n: Accede con sus credenciales.


Gesti√≥n de pedidos en tiempo real: Ve los pedidos entrantes con filtros por estado o categor√≠a.


Cambio de estado: Puede marcar pedidos como "en preparaci√≥n", "listo", "entregado", etc., seg√∫n su rol.


Visualizaci√≥n detallada: Accede a los detalles del pedido (productos, cantidades, notas, mesa, cliente).


Perfil personal: Edita informaci√≥n personal como nombre y foto de perfil.


Roles diferenciados:


Camarero: Atiende pedidos que requieren servicio en mesa.


Cocinero: Atiende pedidos que requieren preparaci√≥n en cocina.
 Los productos indican claramente qui√©n debe elaborarlos.



üßë‚Äçüíº Administrador de establecimiento
Inicio de sesi√≥n: Accede con su cuenta de administrador.


Gesti√≥n de carta: A√±ade, edita o elimina categor√≠as, productos y variantes.


Gesti√≥n de empleados: Crea cuentas para empleados, los asigna a roles y los vincula a establecimientos concretos.


Supervisi√≥n de pedidos: Visualiza el estado global de todos los pedidos.


Multiestablecimiento: Puede administrar varios restaurantes desde una misma cuenta.



üë®‚Äçüíº Administrador general (de la plataforma)
Inicio de sesi√≥n: Accede al dashboard de administraci√≥n global.


Gesti√≥n de establecimientos: Crea nuevos restaurantes y asigna administradores.


Supervisi√≥n global: Accede a estad√≠sticas, vistas generales, paneles de control y herramientas de auditor√≠a (opcional).


Control total: Tiene permisos para gestionar cualquier entidad del sistema.



üñ•Ô∏è Interfaz de empleados ‚Äì Pantalla de pedidos
Listado de pedidos: Muestra todos los pedidos asignados al establecimiento.


Filtro por estado: Pendientes, en preparaci√≥n, listos, entregados, etc.


Filtro por categor√≠a: Permite a empleados ver solo los pedidos de productos que les correspondan seg√∫n su rol (bebidas, cocina, etc.).


Cambio de estado: Posibilidad de actualizar el estado de un pedido en un solo clic.


Interfaz √°gil: Filtros accesibles desde pesta√±as o men√∫s desplegables para facilitar la navegaci√≥n y respuesta r√°pida.






