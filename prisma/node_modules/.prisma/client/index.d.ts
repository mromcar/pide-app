
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Usuario
 * 
 */
export type Usuario = $Result.DefaultSelection<Prisma.$UsuarioPayload>
/**
 * Model Establecimiento
 * 
 */
export type Establecimiento = $Result.DefaultSelection<Prisma.$EstablecimientoPayload>
/**
 * Model Categoria
 * 
 */
export type Categoria = $Result.DefaultSelection<Prisma.$CategoriaPayload>
/**
 * Model CategoriaTraduccion
 * 
 */
export type CategoriaTraduccion = $Result.DefaultSelection<Prisma.$CategoriaTraduccionPayload>
/**
 * Model Producto
 * 
 */
export type Producto = $Result.DefaultSelection<Prisma.$ProductoPayload>
/**
 * Model ProductoTraduccion
 * 
 */
export type ProductoTraduccion = $Result.DefaultSelection<Prisma.$ProductoTraduccionPayload>
/**
 * Model Pedido
 * 
 */
export type Pedido = $Result.DefaultSelection<Prisma.$PedidoPayload>
/**
 * Model DetallePedido
 * 
 */
export type DetallePedido = $Result.DefaultSelection<Prisma.$DetallePedidoPayload>
/**
 * Model EstadoPedido
 * 
 */
export type EstadoPedido = $Result.DefaultSelection<Prisma.$EstadoPedidoPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const RolUsuario: {
  cliente: 'cliente',
  camarero: 'camarero',
  cocinero: 'cocinero',
  establishment_admin: 'establishment_admin',
  general_admin: 'general_admin'
};

export type RolUsuario = (typeof RolUsuario)[keyof typeof RolUsuario]


export const EstadoPedidoGeneral: {
  PENDIENTE: 'PENDIENTE',
  EN_PREPARACION: 'EN_PREPARACION',
  LISTO: 'LISTO',
  ENTREGADO: 'ENTREGADO',
  COMPLETADO: 'COMPLETADO',
  CANCELADO: 'CANCELADO'
};

export type EstadoPedidoGeneral = (typeof EstadoPedidoGeneral)[keyof typeof EstadoPedidoGeneral]


export const EstadoItemPedido: {
  PENDIENTE: 'PENDIENTE',
  EN_PREPARACION: 'EN_PREPARACION',
  LISTO: 'LISTO',
  ENTREGADO: 'ENTREGADO',
  CANCELADO: 'CANCELADO'
};

export type EstadoItemPedido = (typeof EstadoItemPedido)[keyof typeof EstadoItemPedido]

}

export type RolUsuario = $Enums.RolUsuario

export const RolUsuario: typeof $Enums.RolUsuario

export type EstadoPedidoGeneral = $Enums.EstadoPedidoGeneral

export const EstadoPedidoGeneral: typeof $Enums.EstadoPedidoGeneral

export type EstadoItemPedido = $Enums.EstadoItemPedido

export const EstadoItemPedido: typeof $Enums.EstadoItemPedido

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Usuarios
 * const usuarios = await prisma.usuario.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Usuarios
   * const usuarios = await prisma.usuario.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.usuario`: Exposes CRUD operations for the **Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.UsuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.establecimiento`: Exposes CRUD operations for the **Establecimiento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Establecimientos
    * const establecimientos = await prisma.establecimiento.findMany()
    * ```
    */
  get establecimiento(): Prisma.EstablecimientoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.categoria`: Exposes CRUD operations for the **Categoria** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categorias
    * const categorias = await prisma.categoria.findMany()
    * ```
    */
  get categoria(): Prisma.CategoriaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.categoriaTraduccion`: Exposes CRUD operations for the **CategoriaTraduccion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CategoriaTraduccions
    * const categoriaTraduccions = await prisma.categoriaTraduccion.findMany()
    * ```
    */
  get categoriaTraduccion(): Prisma.CategoriaTraduccionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.producto`: Exposes CRUD operations for the **Producto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Productos
    * const productos = await prisma.producto.findMany()
    * ```
    */
  get producto(): Prisma.ProductoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productoTraduccion`: Exposes CRUD operations for the **ProductoTraduccion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductoTraduccions
    * const productoTraduccions = await prisma.productoTraduccion.findMany()
    * ```
    */
  get productoTraduccion(): Prisma.ProductoTraduccionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pedido`: Exposes CRUD operations for the **Pedido** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pedidos
    * const pedidos = await prisma.pedido.findMany()
    * ```
    */
  get pedido(): Prisma.PedidoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.detallePedido`: Exposes CRUD operations for the **DetallePedido** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DetallePedidos
    * const detallePedidos = await prisma.detallePedido.findMany()
    * ```
    */
  get detallePedido(): Prisma.DetallePedidoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.estadoPedido`: Exposes CRUD operations for the **EstadoPedido** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EstadoPedidos
    * const estadoPedidos = await prisma.estadoPedido.findMany()
    * ```
    */
  get estadoPedido(): Prisma.EstadoPedidoDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.7.0
   * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Usuario: 'Usuario',
    Establecimiento: 'Establecimiento',
    Categoria: 'Categoria',
    CategoriaTraduccion: 'CategoriaTraduccion',
    Producto: 'Producto',
    ProductoTraduccion: 'ProductoTraduccion',
    Pedido: 'Pedido',
    DetallePedido: 'DetallePedido',
    EstadoPedido: 'EstadoPedido'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "usuario" | "establecimiento" | "categoria" | "categoriaTraduccion" | "producto" | "productoTraduccion" | "pedido" | "detallePedido" | "estadoPedido"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Usuario: {
        payload: Prisma.$UsuarioPayload<ExtArgs>
        fields: Prisma.UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findFirst: {
            args: Prisma.UsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findMany: {
            args: Prisma.UsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          create: {
            args: Prisma.UsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          createMany: {
            args: Prisma.UsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          delete: {
            args: Prisma.UsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          update: {
            args: Prisma.UsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UsuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          upsert: {
            args: Prisma.UsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.UsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      Establecimiento: {
        payload: Prisma.$EstablecimientoPayload<ExtArgs>
        fields: Prisma.EstablecimientoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EstablecimientoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstablecimientoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EstablecimientoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstablecimientoPayload>
          }
          findFirst: {
            args: Prisma.EstablecimientoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstablecimientoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EstablecimientoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstablecimientoPayload>
          }
          findMany: {
            args: Prisma.EstablecimientoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstablecimientoPayload>[]
          }
          create: {
            args: Prisma.EstablecimientoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstablecimientoPayload>
          }
          createMany: {
            args: Prisma.EstablecimientoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EstablecimientoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstablecimientoPayload>[]
          }
          delete: {
            args: Prisma.EstablecimientoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstablecimientoPayload>
          }
          update: {
            args: Prisma.EstablecimientoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstablecimientoPayload>
          }
          deleteMany: {
            args: Prisma.EstablecimientoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EstablecimientoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EstablecimientoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstablecimientoPayload>[]
          }
          upsert: {
            args: Prisma.EstablecimientoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstablecimientoPayload>
          }
          aggregate: {
            args: Prisma.EstablecimientoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEstablecimiento>
          }
          groupBy: {
            args: Prisma.EstablecimientoGroupByArgs<ExtArgs>
            result: $Utils.Optional<EstablecimientoGroupByOutputType>[]
          }
          count: {
            args: Prisma.EstablecimientoCountArgs<ExtArgs>
            result: $Utils.Optional<EstablecimientoCountAggregateOutputType> | number
          }
        }
      }
      Categoria: {
        payload: Prisma.$CategoriaPayload<ExtArgs>
        fields: Prisma.CategoriaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoriaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoriaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          findFirst: {
            args: Prisma.CategoriaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoriaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          findMany: {
            args: Prisma.CategoriaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>[]
          }
          create: {
            args: Prisma.CategoriaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          createMany: {
            args: Prisma.CategoriaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CategoriaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>[]
          }
          delete: {
            args: Prisma.CategoriaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          update: {
            args: Prisma.CategoriaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          deleteMany: {
            args: Prisma.CategoriaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CategoriaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CategoriaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>[]
          }
          upsert: {
            args: Prisma.CategoriaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          aggregate: {
            args: Prisma.CategoriaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategoria>
          }
          groupBy: {
            args: Prisma.CategoriaGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoriaGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoriaCountArgs<ExtArgs>
            result: $Utils.Optional<CategoriaCountAggregateOutputType> | number
          }
        }
      }
      CategoriaTraduccion: {
        payload: Prisma.$CategoriaTraduccionPayload<ExtArgs>
        fields: Prisma.CategoriaTraduccionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoriaTraduccionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaTraduccionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoriaTraduccionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaTraduccionPayload>
          }
          findFirst: {
            args: Prisma.CategoriaTraduccionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaTraduccionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoriaTraduccionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaTraduccionPayload>
          }
          findMany: {
            args: Prisma.CategoriaTraduccionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaTraduccionPayload>[]
          }
          create: {
            args: Prisma.CategoriaTraduccionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaTraduccionPayload>
          }
          createMany: {
            args: Prisma.CategoriaTraduccionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CategoriaTraduccionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaTraduccionPayload>[]
          }
          delete: {
            args: Prisma.CategoriaTraduccionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaTraduccionPayload>
          }
          update: {
            args: Prisma.CategoriaTraduccionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaTraduccionPayload>
          }
          deleteMany: {
            args: Prisma.CategoriaTraduccionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CategoriaTraduccionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CategoriaTraduccionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaTraduccionPayload>[]
          }
          upsert: {
            args: Prisma.CategoriaTraduccionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaTraduccionPayload>
          }
          aggregate: {
            args: Prisma.CategoriaTraduccionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategoriaTraduccion>
          }
          groupBy: {
            args: Prisma.CategoriaTraduccionGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoriaTraduccionGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoriaTraduccionCountArgs<ExtArgs>
            result: $Utils.Optional<CategoriaTraduccionCountAggregateOutputType> | number
          }
        }
      }
      Producto: {
        payload: Prisma.$ProductoPayload<ExtArgs>
        fields: Prisma.ProductoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          findFirst: {
            args: Prisma.ProductoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          findMany: {
            args: Prisma.ProductoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>[]
          }
          create: {
            args: Prisma.ProductoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          createMany: {
            args: Prisma.ProductoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>[]
          }
          delete: {
            args: Prisma.ProductoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          update: {
            args: Prisma.ProductoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          deleteMany: {
            args: Prisma.ProductoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>[]
          }
          upsert: {
            args: Prisma.ProductoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          aggregate: {
            args: Prisma.ProductoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProducto>
          }
          groupBy: {
            args: Prisma.ProductoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductoCountArgs<ExtArgs>
            result: $Utils.Optional<ProductoCountAggregateOutputType> | number
          }
        }
      }
      ProductoTraduccion: {
        payload: Prisma.$ProductoTraduccionPayload<ExtArgs>
        fields: Prisma.ProductoTraduccionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductoTraduccionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoTraduccionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductoTraduccionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoTraduccionPayload>
          }
          findFirst: {
            args: Prisma.ProductoTraduccionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoTraduccionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductoTraduccionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoTraduccionPayload>
          }
          findMany: {
            args: Prisma.ProductoTraduccionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoTraduccionPayload>[]
          }
          create: {
            args: Prisma.ProductoTraduccionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoTraduccionPayload>
          }
          createMany: {
            args: Prisma.ProductoTraduccionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductoTraduccionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoTraduccionPayload>[]
          }
          delete: {
            args: Prisma.ProductoTraduccionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoTraduccionPayload>
          }
          update: {
            args: Prisma.ProductoTraduccionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoTraduccionPayload>
          }
          deleteMany: {
            args: Prisma.ProductoTraduccionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductoTraduccionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductoTraduccionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoTraduccionPayload>[]
          }
          upsert: {
            args: Prisma.ProductoTraduccionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoTraduccionPayload>
          }
          aggregate: {
            args: Prisma.ProductoTraduccionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductoTraduccion>
          }
          groupBy: {
            args: Prisma.ProductoTraduccionGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductoTraduccionGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductoTraduccionCountArgs<ExtArgs>
            result: $Utils.Optional<ProductoTraduccionCountAggregateOutputType> | number
          }
        }
      }
      Pedido: {
        payload: Prisma.$PedidoPayload<ExtArgs>
        fields: Prisma.PedidoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PedidoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PedidoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          findFirst: {
            args: Prisma.PedidoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PedidoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          findMany: {
            args: Prisma.PedidoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>[]
          }
          create: {
            args: Prisma.PedidoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          createMany: {
            args: Prisma.PedidoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PedidoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>[]
          }
          delete: {
            args: Prisma.PedidoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          update: {
            args: Prisma.PedidoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          deleteMany: {
            args: Prisma.PedidoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PedidoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PedidoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>[]
          }
          upsert: {
            args: Prisma.PedidoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          aggregate: {
            args: Prisma.PedidoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePedido>
          }
          groupBy: {
            args: Prisma.PedidoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PedidoGroupByOutputType>[]
          }
          count: {
            args: Prisma.PedidoCountArgs<ExtArgs>
            result: $Utils.Optional<PedidoCountAggregateOutputType> | number
          }
        }
      }
      DetallePedido: {
        payload: Prisma.$DetallePedidoPayload<ExtArgs>
        fields: Prisma.DetallePedidoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DetallePedidoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetallePedidoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DetallePedidoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetallePedidoPayload>
          }
          findFirst: {
            args: Prisma.DetallePedidoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetallePedidoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DetallePedidoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetallePedidoPayload>
          }
          findMany: {
            args: Prisma.DetallePedidoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetallePedidoPayload>[]
          }
          create: {
            args: Prisma.DetallePedidoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetallePedidoPayload>
          }
          createMany: {
            args: Prisma.DetallePedidoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DetallePedidoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetallePedidoPayload>[]
          }
          delete: {
            args: Prisma.DetallePedidoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetallePedidoPayload>
          }
          update: {
            args: Prisma.DetallePedidoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetallePedidoPayload>
          }
          deleteMany: {
            args: Prisma.DetallePedidoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DetallePedidoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DetallePedidoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetallePedidoPayload>[]
          }
          upsert: {
            args: Prisma.DetallePedidoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetallePedidoPayload>
          }
          aggregate: {
            args: Prisma.DetallePedidoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDetallePedido>
          }
          groupBy: {
            args: Prisma.DetallePedidoGroupByArgs<ExtArgs>
            result: $Utils.Optional<DetallePedidoGroupByOutputType>[]
          }
          count: {
            args: Prisma.DetallePedidoCountArgs<ExtArgs>
            result: $Utils.Optional<DetallePedidoCountAggregateOutputType> | number
          }
        }
      }
      EstadoPedido: {
        payload: Prisma.$EstadoPedidoPayload<ExtArgs>
        fields: Prisma.EstadoPedidoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EstadoPedidoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPedidoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EstadoPedidoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPedidoPayload>
          }
          findFirst: {
            args: Prisma.EstadoPedidoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPedidoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EstadoPedidoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPedidoPayload>
          }
          findMany: {
            args: Prisma.EstadoPedidoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPedidoPayload>[]
          }
          create: {
            args: Prisma.EstadoPedidoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPedidoPayload>
          }
          createMany: {
            args: Prisma.EstadoPedidoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EstadoPedidoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPedidoPayload>[]
          }
          delete: {
            args: Prisma.EstadoPedidoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPedidoPayload>
          }
          update: {
            args: Prisma.EstadoPedidoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPedidoPayload>
          }
          deleteMany: {
            args: Prisma.EstadoPedidoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EstadoPedidoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EstadoPedidoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPedidoPayload>[]
          }
          upsert: {
            args: Prisma.EstadoPedidoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPedidoPayload>
          }
          aggregate: {
            args: Prisma.EstadoPedidoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEstadoPedido>
          }
          groupBy: {
            args: Prisma.EstadoPedidoGroupByArgs<ExtArgs>
            result: $Utils.Optional<EstadoPedidoGroupByOutputType>[]
          }
          count: {
            args: Prisma.EstadoPedidoCountArgs<ExtArgs>
            result: $Utils.Optional<EstadoPedidoCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    usuario?: UsuarioOmit
    establecimiento?: EstablecimientoOmit
    categoria?: CategoriaOmit
    categoriaTraduccion?: CategoriaTraduccionOmit
    producto?: ProductoOmit
    productoTraduccion?: ProductoTraduccionOmit
    pedido?: PedidoOmit
    detallePedido?: DetallePedidoOmit
    estadoPedido?: EstadoPedidoOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsuarioCountOutputType
   */

  export type UsuarioCountOutputType = {
    estadosPedido: number
    pedidos: number
  }

  export type UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estadosPedido?: boolean | UsuarioCountOutputTypeCountEstadosPedidoArgs
    pedidos?: boolean | UsuarioCountOutputTypeCountPedidosArgs
  }

  // Custom InputTypes
  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioCountOutputType
     */
    select?: UsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountEstadosPedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EstadoPedidoWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountPedidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PedidoWhereInput
  }


  /**
   * Count Type EstablecimientoCountOutputType
   */

  export type EstablecimientoCountOutputType = {
    categorias: number
    pedidos: number
    productos: number
    empleados: number
  }

  export type EstablecimientoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categorias?: boolean | EstablecimientoCountOutputTypeCountCategoriasArgs
    pedidos?: boolean | EstablecimientoCountOutputTypeCountPedidosArgs
    productos?: boolean | EstablecimientoCountOutputTypeCountProductosArgs
    empleados?: boolean | EstablecimientoCountOutputTypeCountEmpleadosArgs
  }

  // Custom InputTypes
  /**
   * EstablecimientoCountOutputType without action
   */
  export type EstablecimientoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstablecimientoCountOutputType
     */
    select?: EstablecimientoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EstablecimientoCountOutputType without action
   */
  export type EstablecimientoCountOutputTypeCountCategoriasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoriaWhereInput
  }

  /**
   * EstablecimientoCountOutputType without action
   */
  export type EstablecimientoCountOutputTypeCountPedidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PedidoWhereInput
  }

  /**
   * EstablecimientoCountOutputType without action
   */
  export type EstablecimientoCountOutputTypeCountProductosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductoWhereInput
  }

  /**
   * EstablecimientoCountOutputType without action
   */
  export type EstablecimientoCountOutputTypeCountEmpleadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
  }


  /**
   * Count Type CategoriaCountOutputType
   */

  export type CategoriaCountOutputType = {
    CategoriaTraduccion: number
    productos: number
  }

  export type CategoriaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CategoriaTraduccion?: boolean | CategoriaCountOutputTypeCountCategoriaTraduccionArgs
    productos?: boolean | CategoriaCountOutputTypeCountProductosArgs
  }

  // Custom InputTypes
  /**
   * CategoriaCountOutputType without action
   */
  export type CategoriaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaCountOutputType
     */
    select?: CategoriaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoriaCountOutputType without action
   */
  export type CategoriaCountOutputTypeCountCategoriaTraduccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoriaTraduccionWhereInput
  }

  /**
   * CategoriaCountOutputType without action
   */
  export type CategoriaCountOutputTypeCountProductosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductoWhereInput
  }


  /**
   * Count Type ProductoCountOutputType
   */

  export type ProductoCountOutputType = {
    detallesPedido: number
    ProductoTraduccion: number
  }

  export type ProductoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detallesPedido?: boolean | ProductoCountOutputTypeCountDetallesPedidoArgs
    ProductoTraduccion?: boolean | ProductoCountOutputTypeCountProductoTraduccionArgs
  }

  // Custom InputTypes
  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductoCountOutputType
     */
    select?: ProductoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountDetallesPedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DetallePedidoWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountProductoTraduccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductoTraduccionWhereInput
  }


  /**
   * Count Type PedidoCountOutputType
   */

  export type PedidoCountOutputType = {
    detalles: number
    estadosPedido: number
  }

  export type PedidoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalles?: boolean | PedidoCountOutputTypeCountDetallesArgs
    estadosPedido?: boolean | PedidoCountOutputTypeCountEstadosPedidoArgs
  }

  // Custom InputTypes
  /**
   * PedidoCountOutputType without action
   */
  export type PedidoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoCountOutputType
     */
    select?: PedidoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PedidoCountOutputType without action
   */
  export type PedidoCountOutputTypeCountDetallesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DetallePedidoWhereInput
  }

  /**
   * PedidoCountOutputType without action
   */
  export type PedidoCountOutputTypeCountEstadosPedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EstadoPedidoWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    id_usuario: number | null
    id_establecimiento: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    id_usuario: number | null
    id_establecimiento: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    id_usuario: number | null
    rol: $Enums.RolUsuario | null
    nombre: string | null
    email: string | null
    contrasena: string | null
    id_establecimiento: number | null
  }

  export type UsuarioMaxAggregateOutputType = {
    id_usuario: number | null
    rol: $Enums.RolUsuario | null
    nombre: string | null
    email: string | null
    contrasena: string | null
    id_establecimiento: number | null
  }

  export type UsuarioCountAggregateOutputType = {
    id_usuario: number
    rol: number
    nombre: number
    email: number
    contrasena: number
    id_establecimiento: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    id_usuario?: true
    id_establecimiento?: true
  }

  export type UsuarioSumAggregateInputType = {
    id_usuario?: true
    id_establecimiento?: true
  }

  export type UsuarioMinAggregateInputType = {
    id_usuario?: true
    rol?: true
    nombre?: true
    email?: true
    contrasena?: true
    id_establecimiento?: true
  }

  export type UsuarioMaxAggregateInputType = {
    id_usuario?: true
    rol?: true
    nombre?: true
    email?: true
    contrasena?: true
    id_establecimiento?: true
  }

  export type UsuarioCountAggregateInputType = {
    id_usuario?: true
    rol?: true
    nombre?: true
    email?: true
    contrasena?: true
    id_establecimiento?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario to aggregate.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithAggregationInput | UsuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    id_usuario: number
    rol: $Enums.RolUsuario
    nombre: string | null
    email: string | null
    contrasena: string | null
    id_establecimiento: number | null
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    rol?: boolean
    nombre?: boolean
    email?: boolean
    contrasena?: boolean
    id_establecimiento?: boolean
    administra?: boolean | Usuario$administraArgs<ExtArgs>
    estadosPedido?: boolean | Usuario$estadosPedidoArgs<ExtArgs>
    pedidos?: boolean | Usuario$pedidosArgs<ExtArgs>
    establecimiento?: boolean | Usuario$establecimientoArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    rol?: boolean
    nombre?: boolean
    email?: boolean
    contrasena?: boolean
    id_establecimiento?: boolean
    establecimiento?: boolean | Usuario$establecimientoArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    rol?: boolean
    nombre?: boolean
    email?: boolean
    contrasena?: boolean
    id_establecimiento?: boolean
    establecimiento?: boolean | Usuario$establecimientoArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectScalar = {
    id_usuario?: boolean
    rol?: boolean
    nombre?: boolean
    email?: boolean
    contrasena?: boolean
    id_establecimiento?: boolean
  }

  export type UsuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_usuario" | "rol" | "nombre" | "email" | "contrasena" | "id_establecimiento", ExtArgs["result"]["usuario"]>
  export type UsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    administra?: boolean | Usuario$administraArgs<ExtArgs>
    estadosPedido?: boolean | Usuario$estadosPedidoArgs<ExtArgs>
    pedidos?: boolean | Usuario$pedidosArgs<ExtArgs>
    establecimiento?: boolean | Usuario$establecimientoArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    establecimiento?: boolean | Usuario$establecimientoArgs<ExtArgs>
  }
  export type UsuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    establecimiento?: boolean | Usuario$establecimientoArgs<ExtArgs>
  }

  export type $UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario"
    objects: {
      administra: Prisma.$EstablecimientoPayload<ExtArgs> | null
      estadosPedido: Prisma.$EstadoPedidoPayload<ExtArgs>[]
      pedidos: Prisma.$PedidoPayload<ExtArgs>[]
      establecimiento: Prisma.$EstablecimientoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_usuario: number
      rol: $Enums.RolUsuario
      nombre: string | null
      email: string | null
      contrasena: string | null
      id_establecimiento: number | null
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPayload, S>

  type UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioFindUniqueArgs>(args: SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioFindFirstArgs>(args?: SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `id_usuario`
     * const usuarioWithId_usuarioOnly = await prisma.usuario.findMany({ select: { id_usuario: true } })
     * 
     */
    findMany<T extends UsuarioFindManyArgs>(args?: SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuario.
     * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends UsuarioCreateArgs>(args: SelectSubset<T, UsuarioCreateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioCreateManyArgs>(args?: SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {UsuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `id_usuario`
     * const usuarioWithId_usuarioOnly = await prisma.usuario.createManyAndReturn({
     *   select: { id_usuario: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, UsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Usuario.
     * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends UsuarioDeleteArgs>(args: SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuario.
     * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioUpdateArgs>(args: SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioDeleteManyArgs>(args?: SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioUpdateManyArgs>(args: SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios and returns the data updated in the database.
     * @param {UsuarioUpdateManyAndReturnArgs} args - Arguments to update many Usuarios.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Usuarios and only return the `id_usuario`
     * const usuarioWithId_usuarioOnly = await prisma.usuario.updateManyAndReturn({
     *   select: { id_usuario: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UsuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, UsuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Usuario.
     * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioUpsertArgs>(args: SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuarioCountArgs>(
      args?: Subset<T, UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario model
   */
  readonly fields: UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    administra<T extends Usuario$administraArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$administraArgs<ExtArgs>>): Prisma__EstablecimientoClient<$Result.GetResult<Prisma.$EstablecimientoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    estadosPedido<T extends Usuario$estadosPedidoArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$estadosPedidoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadoPedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pedidos<T extends Usuario$pedidosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$pedidosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    establecimiento<T extends Usuario$establecimientoArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$establecimientoArgs<ExtArgs>>): Prisma__EstablecimientoClient<$Result.GetResult<Prisma.$EstablecimientoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Usuario model
   */
  interface UsuarioFieldRefs {
    readonly id_usuario: FieldRef<"Usuario", 'Int'>
    readonly rol: FieldRef<"Usuario", 'RolUsuario'>
    readonly nombre: FieldRef<"Usuario", 'String'>
    readonly email: FieldRef<"Usuario", 'String'>
    readonly contrasena: FieldRef<"Usuario", 'String'>
    readonly id_establecimiento: FieldRef<"Usuario", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Usuario findUnique
   */
  export type UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findUniqueOrThrow
   */
  export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findFirst
   */
  export type UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findFirstOrThrow
   */
  export type UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findMany
   */
  export type UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario create
   */
  export type UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuario.
     */
    data: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
  }

  /**
   * Usuario createMany
   */
  export type UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario createManyAndReturn
   */
  export type UsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Usuario update
   */
  export type UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuario.
     */
    data: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Usuario to update.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario updateMany
   */
  export type UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
  }

  /**
   * Usuario updateManyAndReturn
   */
  export type UsuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Usuario upsert
   */
  export type UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuario to update in case it exists.
     */
    where: UsuarioWhereUniqueInput
    /**
     * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
     */
    create: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
    /**
     * In case the Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
  }

  /**
   * Usuario delete
   */
  export type UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter which Usuario to delete.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario deleteMany
   */
  export type UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to delete.
     */
    limit?: number
  }

  /**
   * Usuario.administra
   */
  export type Usuario$administraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Establecimiento
     */
    select?: EstablecimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Establecimiento
     */
    omit?: EstablecimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstablecimientoInclude<ExtArgs> | null
    where?: EstablecimientoWhereInput
  }

  /**
   * Usuario.estadosPedido
   */
  export type Usuario$estadosPedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPedido
     */
    select?: EstadoPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPedido
     */
    omit?: EstadoPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPedidoInclude<ExtArgs> | null
    where?: EstadoPedidoWhereInput
    orderBy?: EstadoPedidoOrderByWithRelationInput | EstadoPedidoOrderByWithRelationInput[]
    cursor?: EstadoPedidoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EstadoPedidoScalarFieldEnum | EstadoPedidoScalarFieldEnum[]
  }

  /**
   * Usuario.pedidos
   */
  export type Usuario$pedidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    where?: PedidoWhereInput
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    cursor?: PedidoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * Usuario.establecimiento
   */
  export type Usuario$establecimientoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Establecimiento
     */
    select?: EstablecimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Establecimiento
     */
    omit?: EstablecimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstablecimientoInclude<ExtArgs> | null
    where?: EstablecimientoWhereInput
  }

  /**
   * Usuario without action
   */
  export type UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
  }


  /**
   * Model Establecimiento
   */

  export type AggregateEstablecimiento = {
    _count: EstablecimientoCountAggregateOutputType | null
    _avg: EstablecimientoAvgAggregateOutputType | null
    _sum: EstablecimientoSumAggregateOutputType | null
    _min: EstablecimientoMinAggregateOutputType | null
    _max: EstablecimientoMaxAggregateOutputType | null
  }

  export type EstablecimientoAvgAggregateOutputType = {
    id_establecimiento: number | null
    id_administrador_establecimiento: number | null
  }

  export type EstablecimientoSumAggregateOutputType = {
    id_establecimiento: number | null
    id_administrador_establecimiento: number | null
  }

  export type EstablecimientoMinAggregateOutputType = {
    id_establecimiento: number | null
    nombre: string | null
    cif: string | null
    direccion: string | null
    cp: string | null
    ciudad: string | null
    telefono1: string | null
    telefono2: string | null
    datos_bancarios_cobro: string | null
    datos_bancarios_pago: string | null
    contacto: string | null
    id_administrador_establecimiento: number | null
  }

  export type EstablecimientoMaxAggregateOutputType = {
    id_establecimiento: number | null
    nombre: string | null
    cif: string | null
    direccion: string | null
    cp: string | null
    ciudad: string | null
    telefono1: string | null
    telefono2: string | null
    datos_bancarios_cobro: string | null
    datos_bancarios_pago: string | null
    contacto: string | null
    id_administrador_establecimiento: number | null
  }

  export type EstablecimientoCountAggregateOutputType = {
    id_establecimiento: number
    nombre: number
    cif: number
    direccion: number
    cp: number
    ciudad: number
    telefono1: number
    telefono2: number
    datos_bancarios_cobro: number
    datos_bancarios_pago: number
    contacto: number
    id_administrador_establecimiento: number
    _all: number
  }


  export type EstablecimientoAvgAggregateInputType = {
    id_establecimiento?: true
    id_administrador_establecimiento?: true
  }

  export type EstablecimientoSumAggregateInputType = {
    id_establecimiento?: true
    id_administrador_establecimiento?: true
  }

  export type EstablecimientoMinAggregateInputType = {
    id_establecimiento?: true
    nombre?: true
    cif?: true
    direccion?: true
    cp?: true
    ciudad?: true
    telefono1?: true
    telefono2?: true
    datos_bancarios_cobro?: true
    datos_bancarios_pago?: true
    contacto?: true
    id_administrador_establecimiento?: true
  }

  export type EstablecimientoMaxAggregateInputType = {
    id_establecimiento?: true
    nombre?: true
    cif?: true
    direccion?: true
    cp?: true
    ciudad?: true
    telefono1?: true
    telefono2?: true
    datos_bancarios_cobro?: true
    datos_bancarios_pago?: true
    contacto?: true
    id_administrador_establecimiento?: true
  }

  export type EstablecimientoCountAggregateInputType = {
    id_establecimiento?: true
    nombre?: true
    cif?: true
    direccion?: true
    cp?: true
    ciudad?: true
    telefono1?: true
    telefono2?: true
    datos_bancarios_cobro?: true
    datos_bancarios_pago?: true
    contacto?: true
    id_administrador_establecimiento?: true
    _all?: true
  }

  export type EstablecimientoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Establecimiento to aggregate.
     */
    where?: EstablecimientoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Establecimientos to fetch.
     */
    orderBy?: EstablecimientoOrderByWithRelationInput | EstablecimientoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EstablecimientoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Establecimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Establecimientos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Establecimientos
    **/
    _count?: true | EstablecimientoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EstablecimientoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EstablecimientoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EstablecimientoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EstablecimientoMaxAggregateInputType
  }

  export type GetEstablecimientoAggregateType<T extends EstablecimientoAggregateArgs> = {
        [P in keyof T & keyof AggregateEstablecimiento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstablecimiento[P]>
      : GetScalarType<T[P], AggregateEstablecimiento[P]>
  }




  export type EstablecimientoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EstablecimientoWhereInput
    orderBy?: EstablecimientoOrderByWithAggregationInput | EstablecimientoOrderByWithAggregationInput[]
    by: EstablecimientoScalarFieldEnum[] | EstablecimientoScalarFieldEnum
    having?: EstablecimientoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EstablecimientoCountAggregateInputType | true
    _avg?: EstablecimientoAvgAggregateInputType
    _sum?: EstablecimientoSumAggregateInputType
    _min?: EstablecimientoMinAggregateInputType
    _max?: EstablecimientoMaxAggregateInputType
  }

  export type EstablecimientoGroupByOutputType = {
    id_establecimiento: number
    nombre: string
    cif: string | null
    direccion: string | null
    cp: string | null
    ciudad: string | null
    telefono1: string | null
    telefono2: string | null
    datos_bancarios_cobro: string | null
    datos_bancarios_pago: string | null
    contacto: string | null
    id_administrador_establecimiento: number | null
    _count: EstablecimientoCountAggregateOutputType | null
    _avg: EstablecimientoAvgAggregateOutputType | null
    _sum: EstablecimientoSumAggregateOutputType | null
    _min: EstablecimientoMinAggregateOutputType | null
    _max: EstablecimientoMaxAggregateOutputType | null
  }

  type GetEstablecimientoGroupByPayload<T extends EstablecimientoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EstablecimientoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EstablecimientoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EstablecimientoGroupByOutputType[P]>
            : GetScalarType<T[P], EstablecimientoGroupByOutputType[P]>
        }
      >
    >


  export type EstablecimientoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_establecimiento?: boolean
    nombre?: boolean
    cif?: boolean
    direccion?: boolean
    cp?: boolean
    ciudad?: boolean
    telefono1?: boolean
    telefono2?: boolean
    datos_bancarios_cobro?: boolean
    datos_bancarios_pago?: boolean
    contacto?: boolean
    id_administrador_establecimiento?: boolean
    categorias?: boolean | Establecimiento$categoriasArgs<ExtArgs>
    administrador?: boolean | Establecimiento$administradorArgs<ExtArgs>
    pedidos?: boolean | Establecimiento$pedidosArgs<ExtArgs>
    productos?: boolean | Establecimiento$productosArgs<ExtArgs>
    empleados?: boolean | Establecimiento$empleadosArgs<ExtArgs>
    _count?: boolean | EstablecimientoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["establecimiento"]>

  export type EstablecimientoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_establecimiento?: boolean
    nombre?: boolean
    cif?: boolean
    direccion?: boolean
    cp?: boolean
    ciudad?: boolean
    telefono1?: boolean
    telefono2?: boolean
    datos_bancarios_cobro?: boolean
    datos_bancarios_pago?: boolean
    contacto?: boolean
    id_administrador_establecimiento?: boolean
    administrador?: boolean | Establecimiento$administradorArgs<ExtArgs>
  }, ExtArgs["result"]["establecimiento"]>

  export type EstablecimientoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_establecimiento?: boolean
    nombre?: boolean
    cif?: boolean
    direccion?: boolean
    cp?: boolean
    ciudad?: boolean
    telefono1?: boolean
    telefono2?: boolean
    datos_bancarios_cobro?: boolean
    datos_bancarios_pago?: boolean
    contacto?: boolean
    id_administrador_establecimiento?: boolean
    administrador?: boolean | Establecimiento$administradorArgs<ExtArgs>
  }, ExtArgs["result"]["establecimiento"]>

  export type EstablecimientoSelectScalar = {
    id_establecimiento?: boolean
    nombre?: boolean
    cif?: boolean
    direccion?: boolean
    cp?: boolean
    ciudad?: boolean
    telefono1?: boolean
    telefono2?: boolean
    datos_bancarios_cobro?: boolean
    datos_bancarios_pago?: boolean
    contacto?: boolean
    id_administrador_establecimiento?: boolean
  }

  export type EstablecimientoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_establecimiento" | "nombre" | "cif" | "direccion" | "cp" | "ciudad" | "telefono1" | "telefono2" | "datos_bancarios_cobro" | "datos_bancarios_pago" | "contacto" | "id_administrador_establecimiento", ExtArgs["result"]["establecimiento"]>
  export type EstablecimientoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categorias?: boolean | Establecimiento$categoriasArgs<ExtArgs>
    administrador?: boolean | Establecimiento$administradorArgs<ExtArgs>
    pedidos?: boolean | Establecimiento$pedidosArgs<ExtArgs>
    productos?: boolean | Establecimiento$productosArgs<ExtArgs>
    empleados?: boolean | Establecimiento$empleadosArgs<ExtArgs>
    _count?: boolean | EstablecimientoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EstablecimientoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    administrador?: boolean | Establecimiento$administradorArgs<ExtArgs>
  }
  export type EstablecimientoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    administrador?: boolean | Establecimiento$administradorArgs<ExtArgs>
  }

  export type $EstablecimientoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Establecimiento"
    objects: {
      categorias: Prisma.$CategoriaPayload<ExtArgs>[]
      administrador: Prisma.$UsuarioPayload<ExtArgs> | null
      pedidos: Prisma.$PedidoPayload<ExtArgs>[]
      productos: Prisma.$ProductoPayload<ExtArgs>[]
      empleados: Prisma.$UsuarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_establecimiento: number
      nombre: string
      cif: string | null
      direccion: string | null
      cp: string | null
      ciudad: string | null
      telefono1: string | null
      telefono2: string | null
      datos_bancarios_cobro: string | null
      datos_bancarios_pago: string | null
      contacto: string | null
      id_administrador_establecimiento: number | null
    }, ExtArgs["result"]["establecimiento"]>
    composites: {}
  }

  type EstablecimientoGetPayload<S extends boolean | null | undefined | EstablecimientoDefaultArgs> = $Result.GetResult<Prisma.$EstablecimientoPayload, S>

  type EstablecimientoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EstablecimientoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EstablecimientoCountAggregateInputType | true
    }

  export interface EstablecimientoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Establecimiento'], meta: { name: 'Establecimiento' } }
    /**
     * Find zero or one Establecimiento that matches the filter.
     * @param {EstablecimientoFindUniqueArgs} args - Arguments to find a Establecimiento
     * @example
     * // Get one Establecimiento
     * const establecimiento = await prisma.establecimiento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EstablecimientoFindUniqueArgs>(args: SelectSubset<T, EstablecimientoFindUniqueArgs<ExtArgs>>): Prisma__EstablecimientoClient<$Result.GetResult<Prisma.$EstablecimientoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Establecimiento that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EstablecimientoFindUniqueOrThrowArgs} args - Arguments to find a Establecimiento
     * @example
     * // Get one Establecimiento
     * const establecimiento = await prisma.establecimiento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EstablecimientoFindUniqueOrThrowArgs>(args: SelectSubset<T, EstablecimientoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EstablecimientoClient<$Result.GetResult<Prisma.$EstablecimientoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Establecimiento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstablecimientoFindFirstArgs} args - Arguments to find a Establecimiento
     * @example
     * // Get one Establecimiento
     * const establecimiento = await prisma.establecimiento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EstablecimientoFindFirstArgs>(args?: SelectSubset<T, EstablecimientoFindFirstArgs<ExtArgs>>): Prisma__EstablecimientoClient<$Result.GetResult<Prisma.$EstablecimientoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Establecimiento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstablecimientoFindFirstOrThrowArgs} args - Arguments to find a Establecimiento
     * @example
     * // Get one Establecimiento
     * const establecimiento = await prisma.establecimiento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EstablecimientoFindFirstOrThrowArgs>(args?: SelectSubset<T, EstablecimientoFindFirstOrThrowArgs<ExtArgs>>): Prisma__EstablecimientoClient<$Result.GetResult<Prisma.$EstablecimientoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Establecimientos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstablecimientoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Establecimientos
     * const establecimientos = await prisma.establecimiento.findMany()
     * 
     * // Get first 10 Establecimientos
     * const establecimientos = await prisma.establecimiento.findMany({ take: 10 })
     * 
     * // Only select the `id_establecimiento`
     * const establecimientoWithId_establecimientoOnly = await prisma.establecimiento.findMany({ select: { id_establecimiento: true } })
     * 
     */
    findMany<T extends EstablecimientoFindManyArgs>(args?: SelectSubset<T, EstablecimientoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstablecimientoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Establecimiento.
     * @param {EstablecimientoCreateArgs} args - Arguments to create a Establecimiento.
     * @example
     * // Create one Establecimiento
     * const Establecimiento = await prisma.establecimiento.create({
     *   data: {
     *     // ... data to create a Establecimiento
     *   }
     * })
     * 
     */
    create<T extends EstablecimientoCreateArgs>(args: SelectSubset<T, EstablecimientoCreateArgs<ExtArgs>>): Prisma__EstablecimientoClient<$Result.GetResult<Prisma.$EstablecimientoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Establecimientos.
     * @param {EstablecimientoCreateManyArgs} args - Arguments to create many Establecimientos.
     * @example
     * // Create many Establecimientos
     * const establecimiento = await prisma.establecimiento.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EstablecimientoCreateManyArgs>(args?: SelectSubset<T, EstablecimientoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Establecimientos and returns the data saved in the database.
     * @param {EstablecimientoCreateManyAndReturnArgs} args - Arguments to create many Establecimientos.
     * @example
     * // Create many Establecimientos
     * const establecimiento = await prisma.establecimiento.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Establecimientos and only return the `id_establecimiento`
     * const establecimientoWithId_establecimientoOnly = await prisma.establecimiento.createManyAndReturn({
     *   select: { id_establecimiento: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EstablecimientoCreateManyAndReturnArgs>(args?: SelectSubset<T, EstablecimientoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstablecimientoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Establecimiento.
     * @param {EstablecimientoDeleteArgs} args - Arguments to delete one Establecimiento.
     * @example
     * // Delete one Establecimiento
     * const Establecimiento = await prisma.establecimiento.delete({
     *   where: {
     *     // ... filter to delete one Establecimiento
     *   }
     * })
     * 
     */
    delete<T extends EstablecimientoDeleteArgs>(args: SelectSubset<T, EstablecimientoDeleteArgs<ExtArgs>>): Prisma__EstablecimientoClient<$Result.GetResult<Prisma.$EstablecimientoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Establecimiento.
     * @param {EstablecimientoUpdateArgs} args - Arguments to update one Establecimiento.
     * @example
     * // Update one Establecimiento
     * const establecimiento = await prisma.establecimiento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EstablecimientoUpdateArgs>(args: SelectSubset<T, EstablecimientoUpdateArgs<ExtArgs>>): Prisma__EstablecimientoClient<$Result.GetResult<Prisma.$EstablecimientoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Establecimientos.
     * @param {EstablecimientoDeleteManyArgs} args - Arguments to filter Establecimientos to delete.
     * @example
     * // Delete a few Establecimientos
     * const { count } = await prisma.establecimiento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EstablecimientoDeleteManyArgs>(args?: SelectSubset<T, EstablecimientoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Establecimientos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstablecimientoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Establecimientos
     * const establecimiento = await prisma.establecimiento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EstablecimientoUpdateManyArgs>(args: SelectSubset<T, EstablecimientoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Establecimientos and returns the data updated in the database.
     * @param {EstablecimientoUpdateManyAndReturnArgs} args - Arguments to update many Establecimientos.
     * @example
     * // Update many Establecimientos
     * const establecimiento = await prisma.establecimiento.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Establecimientos and only return the `id_establecimiento`
     * const establecimientoWithId_establecimientoOnly = await prisma.establecimiento.updateManyAndReturn({
     *   select: { id_establecimiento: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EstablecimientoUpdateManyAndReturnArgs>(args: SelectSubset<T, EstablecimientoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstablecimientoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Establecimiento.
     * @param {EstablecimientoUpsertArgs} args - Arguments to update or create a Establecimiento.
     * @example
     * // Update or create a Establecimiento
     * const establecimiento = await prisma.establecimiento.upsert({
     *   create: {
     *     // ... data to create a Establecimiento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Establecimiento we want to update
     *   }
     * })
     */
    upsert<T extends EstablecimientoUpsertArgs>(args: SelectSubset<T, EstablecimientoUpsertArgs<ExtArgs>>): Prisma__EstablecimientoClient<$Result.GetResult<Prisma.$EstablecimientoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Establecimientos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstablecimientoCountArgs} args - Arguments to filter Establecimientos to count.
     * @example
     * // Count the number of Establecimientos
     * const count = await prisma.establecimiento.count({
     *   where: {
     *     // ... the filter for the Establecimientos we want to count
     *   }
     * })
    **/
    count<T extends EstablecimientoCountArgs>(
      args?: Subset<T, EstablecimientoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EstablecimientoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Establecimiento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstablecimientoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EstablecimientoAggregateArgs>(args: Subset<T, EstablecimientoAggregateArgs>): Prisma.PrismaPromise<GetEstablecimientoAggregateType<T>>

    /**
     * Group by Establecimiento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstablecimientoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EstablecimientoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EstablecimientoGroupByArgs['orderBy'] }
        : { orderBy?: EstablecimientoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EstablecimientoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstablecimientoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Establecimiento model
   */
  readonly fields: EstablecimientoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Establecimiento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EstablecimientoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    categorias<T extends Establecimiento$categoriasArgs<ExtArgs> = {}>(args?: Subset<T, Establecimiento$categoriasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    administrador<T extends Establecimiento$administradorArgs<ExtArgs> = {}>(args?: Subset<T, Establecimiento$administradorArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    pedidos<T extends Establecimiento$pedidosArgs<ExtArgs> = {}>(args?: Subset<T, Establecimiento$pedidosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    productos<T extends Establecimiento$productosArgs<ExtArgs> = {}>(args?: Subset<T, Establecimiento$productosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    empleados<T extends Establecimiento$empleadosArgs<ExtArgs> = {}>(args?: Subset<T, Establecimiento$empleadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Establecimiento model
   */
  interface EstablecimientoFieldRefs {
    readonly id_establecimiento: FieldRef<"Establecimiento", 'Int'>
    readonly nombre: FieldRef<"Establecimiento", 'String'>
    readonly cif: FieldRef<"Establecimiento", 'String'>
    readonly direccion: FieldRef<"Establecimiento", 'String'>
    readonly cp: FieldRef<"Establecimiento", 'String'>
    readonly ciudad: FieldRef<"Establecimiento", 'String'>
    readonly telefono1: FieldRef<"Establecimiento", 'String'>
    readonly telefono2: FieldRef<"Establecimiento", 'String'>
    readonly datos_bancarios_cobro: FieldRef<"Establecimiento", 'String'>
    readonly datos_bancarios_pago: FieldRef<"Establecimiento", 'String'>
    readonly contacto: FieldRef<"Establecimiento", 'String'>
    readonly id_administrador_establecimiento: FieldRef<"Establecimiento", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Establecimiento findUnique
   */
  export type EstablecimientoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Establecimiento
     */
    select?: EstablecimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Establecimiento
     */
    omit?: EstablecimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstablecimientoInclude<ExtArgs> | null
    /**
     * Filter, which Establecimiento to fetch.
     */
    where: EstablecimientoWhereUniqueInput
  }

  /**
   * Establecimiento findUniqueOrThrow
   */
  export type EstablecimientoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Establecimiento
     */
    select?: EstablecimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Establecimiento
     */
    omit?: EstablecimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstablecimientoInclude<ExtArgs> | null
    /**
     * Filter, which Establecimiento to fetch.
     */
    where: EstablecimientoWhereUniqueInput
  }

  /**
   * Establecimiento findFirst
   */
  export type EstablecimientoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Establecimiento
     */
    select?: EstablecimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Establecimiento
     */
    omit?: EstablecimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstablecimientoInclude<ExtArgs> | null
    /**
     * Filter, which Establecimiento to fetch.
     */
    where?: EstablecimientoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Establecimientos to fetch.
     */
    orderBy?: EstablecimientoOrderByWithRelationInput | EstablecimientoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Establecimientos.
     */
    cursor?: EstablecimientoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Establecimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Establecimientos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Establecimientos.
     */
    distinct?: EstablecimientoScalarFieldEnum | EstablecimientoScalarFieldEnum[]
  }

  /**
   * Establecimiento findFirstOrThrow
   */
  export type EstablecimientoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Establecimiento
     */
    select?: EstablecimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Establecimiento
     */
    omit?: EstablecimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstablecimientoInclude<ExtArgs> | null
    /**
     * Filter, which Establecimiento to fetch.
     */
    where?: EstablecimientoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Establecimientos to fetch.
     */
    orderBy?: EstablecimientoOrderByWithRelationInput | EstablecimientoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Establecimientos.
     */
    cursor?: EstablecimientoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Establecimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Establecimientos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Establecimientos.
     */
    distinct?: EstablecimientoScalarFieldEnum | EstablecimientoScalarFieldEnum[]
  }

  /**
   * Establecimiento findMany
   */
  export type EstablecimientoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Establecimiento
     */
    select?: EstablecimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Establecimiento
     */
    omit?: EstablecimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstablecimientoInclude<ExtArgs> | null
    /**
     * Filter, which Establecimientos to fetch.
     */
    where?: EstablecimientoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Establecimientos to fetch.
     */
    orderBy?: EstablecimientoOrderByWithRelationInput | EstablecimientoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Establecimientos.
     */
    cursor?: EstablecimientoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Establecimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Establecimientos.
     */
    skip?: number
    distinct?: EstablecimientoScalarFieldEnum | EstablecimientoScalarFieldEnum[]
  }

  /**
   * Establecimiento create
   */
  export type EstablecimientoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Establecimiento
     */
    select?: EstablecimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Establecimiento
     */
    omit?: EstablecimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstablecimientoInclude<ExtArgs> | null
    /**
     * The data needed to create a Establecimiento.
     */
    data: XOR<EstablecimientoCreateInput, EstablecimientoUncheckedCreateInput>
  }

  /**
   * Establecimiento createMany
   */
  export type EstablecimientoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Establecimientos.
     */
    data: EstablecimientoCreateManyInput | EstablecimientoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Establecimiento createManyAndReturn
   */
  export type EstablecimientoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Establecimiento
     */
    select?: EstablecimientoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Establecimiento
     */
    omit?: EstablecimientoOmit<ExtArgs> | null
    /**
     * The data used to create many Establecimientos.
     */
    data: EstablecimientoCreateManyInput | EstablecimientoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstablecimientoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Establecimiento update
   */
  export type EstablecimientoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Establecimiento
     */
    select?: EstablecimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Establecimiento
     */
    omit?: EstablecimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstablecimientoInclude<ExtArgs> | null
    /**
     * The data needed to update a Establecimiento.
     */
    data: XOR<EstablecimientoUpdateInput, EstablecimientoUncheckedUpdateInput>
    /**
     * Choose, which Establecimiento to update.
     */
    where: EstablecimientoWhereUniqueInput
  }

  /**
   * Establecimiento updateMany
   */
  export type EstablecimientoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Establecimientos.
     */
    data: XOR<EstablecimientoUpdateManyMutationInput, EstablecimientoUncheckedUpdateManyInput>
    /**
     * Filter which Establecimientos to update
     */
    where?: EstablecimientoWhereInput
    /**
     * Limit how many Establecimientos to update.
     */
    limit?: number
  }

  /**
   * Establecimiento updateManyAndReturn
   */
  export type EstablecimientoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Establecimiento
     */
    select?: EstablecimientoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Establecimiento
     */
    omit?: EstablecimientoOmit<ExtArgs> | null
    /**
     * The data used to update Establecimientos.
     */
    data: XOR<EstablecimientoUpdateManyMutationInput, EstablecimientoUncheckedUpdateManyInput>
    /**
     * Filter which Establecimientos to update
     */
    where?: EstablecimientoWhereInput
    /**
     * Limit how many Establecimientos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstablecimientoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Establecimiento upsert
   */
  export type EstablecimientoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Establecimiento
     */
    select?: EstablecimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Establecimiento
     */
    omit?: EstablecimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstablecimientoInclude<ExtArgs> | null
    /**
     * The filter to search for the Establecimiento to update in case it exists.
     */
    where: EstablecimientoWhereUniqueInput
    /**
     * In case the Establecimiento found by the `where` argument doesn't exist, create a new Establecimiento with this data.
     */
    create: XOR<EstablecimientoCreateInput, EstablecimientoUncheckedCreateInput>
    /**
     * In case the Establecimiento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EstablecimientoUpdateInput, EstablecimientoUncheckedUpdateInput>
  }

  /**
   * Establecimiento delete
   */
  export type EstablecimientoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Establecimiento
     */
    select?: EstablecimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Establecimiento
     */
    omit?: EstablecimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstablecimientoInclude<ExtArgs> | null
    /**
     * Filter which Establecimiento to delete.
     */
    where: EstablecimientoWhereUniqueInput
  }

  /**
   * Establecimiento deleteMany
   */
  export type EstablecimientoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Establecimientos to delete
     */
    where?: EstablecimientoWhereInput
    /**
     * Limit how many Establecimientos to delete.
     */
    limit?: number
  }

  /**
   * Establecimiento.categorias
   */
  export type Establecimiento$categoriasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    where?: CategoriaWhereInput
    orderBy?: CategoriaOrderByWithRelationInput | CategoriaOrderByWithRelationInput[]
    cursor?: CategoriaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoriaScalarFieldEnum | CategoriaScalarFieldEnum[]
  }

  /**
   * Establecimiento.administrador
   */
  export type Establecimiento$administradorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * Establecimiento.pedidos
   */
  export type Establecimiento$pedidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    where?: PedidoWhereInput
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    cursor?: PedidoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * Establecimiento.productos
   */
  export type Establecimiento$productosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    where?: ProductoWhereInput
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    cursor?: ProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Establecimiento.empleados
   */
  export type Establecimiento$empleadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    cursor?: UsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Establecimiento without action
   */
  export type EstablecimientoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Establecimiento
     */
    select?: EstablecimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Establecimiento
     */
    omit?: EstablecimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstablecimientoInclude<ExtArgs> | null
  }


  /**
   * Model Categoria
   */

  export type AggregateCategoria = {
    _count: CategoriaCountAggregateOutputType | null
    _avg: CategoriaAvgAggregateOutputType | null
    _sum: CategoriaSumAggregateOutputType | null
    _min: CategoriaMinAggregateOutputType | null
    _max: CategoriaMaxAggregateOutputType | null
  }

  export type CategoriaAvgAggregateOutputType = {
    id_categoria: number | null
    id_establecimiento: number | null
    orden: number | null
  }

  export type CategoriaSumAggregateOutputType = {
    id_categoria: number | null
    id_establecimiento: number | null
    orden: number | null
  }

  export type CategoriaMinAggregateOutputType = {
    id_categoria: number | null
    nombre: string | null
    imagen_url: string | null
    id_establecimiento: number | null
    orden: number | null
  }

  export type CategoriaMaxAggregateOutputType = {
    id_categoria: number | null
    nombre: string | null
    imagen_url: string | null
    id_establecimiento: number | null
    orden: number | null
  }

  export type CategoriaCountAggregateOutputType = {
    id_categoria: number
    nombre: number
    imagen_url: number
    id_establecimiento: number
    orden: number
    _all: number
  }


  export type CategoriaAvgAggregateInputType = {
    id_categoria?: true
    id_establecimiento?: true
    orden?: true
  }

  export type CategoriaSumAggregateInputType = {
    id_categoria?: true
    id_establecimiento?: true
    orden?: true
  }

  export type CategoriaMinAggregateInputType = {
    id_categoria?: true
    nombre?: true
    imagen_url?: true
    id_establecimiento?: true
    orden?: true
  }

  export type CategoriaMaxAggregateInputType = {
    id_categoria?: true
    nombre?: true
    imagen_url?: true
    id_establecimiento?: true
    orden?: true
  }

  export type CategoriaCountAggregateInputType = {
    id_categoria?: true
    nombre?: true
    imagen_url?: true
    id_establecimiento?: true
    orden?: true
    _all?: true
  }

  export type CategoriaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categoria to aggregate.
     */
    where?: CategoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categorias to fetch.
     */
    orderBy?: CategoriaOrderByWithRelationInput | CategoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Categorias
    **/
    _count?: true | CategoriaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoriaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategoriaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoriaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoriaMaxAggregateInputType
  }

  export type GetCategoriaAggregateType<T extends CategoriaAggregateArgs> = {
        [P in keyof T & keyof AggregateCategoria]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategoria[P]>
      : GetScalarType<T[P], AggregateCategoria[P]>
  }




  export type CategoriaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoriaWhereInput
    orderBy?: CategoriaOrderByWithAggregationInput | CategoriaOrderByWithAggregationInput[]
    by: CategoriaScalarFieldEnum[] | CategoriaScalarFieldEnum
    having?: CategoriaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoriaCountAggregateInputType | true
    _avg?: CategoriaAvgAggregateInputType
    _sum?: CategoriaSumAggregateInputType
    _min?: CategoriaMinAggregateInputType
    _max?: CategoriaMaxAggregateInputType
  }

  export type CategoriaGroupByOutputType = {
    id_categoria: number
    nombre: string
    imagen_url: string | null
    id_establecimiento: number
    orden: number | null
    _count: CategoriaCountAggregateOutputType | null
    _avg: CategoriaAvgAggregateOutputType | null
    _sum: CategoriaSumAggregateOutputType | null
    _min: CategoriaMinAggregateOutputType | null
    _max: CategoriaMaxAggregateOutputType | null
  }

  type GetCategoriaGroupByPayload<T extends CategoriaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoriaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoriaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoriaGroupByOutputType[P]>
            : GetScalarType<T[P], CategoriaGroupByOutputType[P]>
        }
      >
    >


  export type CategoriaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_categoria?: boolean
    nombre?: boolean
    imagen_url?: boolean
    id_establecimiento?: boolean
    orden?: boolean
    establecimiento?: boolean | EstablecimientoDefaultArgs<ExtArgs>
    CategoriaTraduccion?: boolean | Categoria$CategoriaTraduccionArgs<ExtArgs>
    productos?: boolean | Categoria$productosArgs<ExtArgs>
    _count?: boolean | CategoriaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categoria"]>

  export type CategoriaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_categoria?: boolean
    nombre?: boolean
    imagen_url?: boolean
    id_establecimiento?: boolean
    orden?: boolean
    establecimiento?: boolean | EstablecimientoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categoria"]>

  export type CategoriaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_categoria?: boolean
    nombre?: boolean
    imagen_url?: boolean
    id_establecimiento?: boolean
    orden?: boolean
    establecimiento?: boolean | EstablecimientoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categoria"]>

  export type CategoriaSelectScalar = {
    id_categoria?: boolean
    nombre?: boolean
    imagen_url?: boolean
    id_establecimiento?: boolean
    orden?: boolean
  }

  export type CategoriaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_categoria" | "nombre" | "imagen_url" | "id_establecimiento" | "orden", ExtArgs["result"]["categoria"]>
  export type CategoriaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    establecimiento?: boolean | EstablecimientoDefaultArgs<ExtArgs>
    CategoriaTraduccion?: boolean | Categoria$CategoriaTraduccionArgs<ExtArgs>
    productos?: boolean | Categoria$productosArgs<ExtArgs>
    _count?: boolean | CategoriaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CategoriaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    establecimiento?: boolean | EstablecimientoDefaultArgs<ExtArgs>
  }
  export type CategoriaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    establecimiento?: boolean | EstablecimientoDefaultArgs<ExtArgs>
  }

  export type $CategoriaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Categoria"
    objects: {
      establecimiento: Prisma.$EstablecimientoPayload<ExtArgs>
      CategoriaTraduccion: Prisma.$CategoriaTraduccionPayload<ExtArgs>[]
      productos: Prisma.$ProductoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_categoria: number
      nombre: string
      imagen_url: string | null
      id_establecimiento: number
      orden: number | null
    }, ExtArgs["result"]["categoria"]>
    composites: {}
  }

  type CategoriaGetPayload<S extends boolean | null | undefined | CategoriaDefaultArgs> = $Result.GetResult<Prisma.$CategoriaPayload, S>

  type CategoriaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CategoriaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CategoriaCountAggregateInputType | true
    }

  export interface CategoriaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Categoria'], meta: { name: 'Categoria' } }
    /**
     * Find zero or one Categoria that matches the filter.
     * @param {CategoriaFindUniqueArgs} args - Arguments to find a Categoria
     * @example
     * // Get one Categoria
     * const categoria = await prisma.categoria.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CategoriaFindUniqueArgs>(args: SelectSubset<T, CategoriaFindUniqueArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Categoria that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CategoriaFindUniqueOrThrowArgs} args - Arguments to find a Categoria
     * @example
     * // Get one Categoria
     * const categoria = await prisma.categoria.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CategoriaFindUniqueOrThrowArgs>(args: SelectSubset<T, CategoriaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Categoria that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaFindFirstArgs} args - Arguments to find a Categoria
     * @example
     * // Get one Categoria
     * const categoria = await prisma.categoria.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CategoriaFindFirstArgs>(args?: SelectSubset<T, CategoriaFindFirstArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Categoria that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaFindFirstOrThrowArgs} args - Arguments to find a Categoria
     * @example
     * // Get one Categoria
     * const categoria = await prisma.categoria.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CategoriaFindFirstOrThrowArgs>(args?: SelectSubset<T, CategoriaFindFirstOrThrowArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Categorias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categorias
     * const categorias = await prisma.categoria.findMany()
     * 
     * // Get first 10 Categorias
     * const categorias = await prisma.categoria.findMany({ take: 10 })
     * 
     * // Only select the `id_categoria`
     * const categoriaWithId_categoriaOnly = await prisma.categoria.findMany({ select: { id_categoria: true } })
     * 
     */
    findMany<T extends CategoriaFindManyArgs>(args?: SelectSubset<T, CategoriaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Categoria.
     * @param {CategoriaCreateArgs} args - Arguments to create a Categoria.
     * @example
     * // Create one Categoria
     * const Categoria = await prisma.categoria.create({
     *   data: {
     *     // ... data to create a Categoria
     *   }
     * })
     * 
     */
    create<T extends CategoriaCreateArgs>(args: SelectSubset<T, CategoriaCreateArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Categorias.
     * @param {CategoriaCreateManyArgs} args - Arguments to create many Categorias.
     * @example
     * // Create many Categorias
     * const categoria = await prisma.categoria.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CategoriaCreateManyArgs>(args?: SelectSubset<T, CategoriaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Categorias and returns the data saved in the database.
     * @param {CategoriaCreateManyAndReturnArgs} args - Arguments to create many Categorias.
     * @example
     * // Create many Categorias
     * const categoria = await prisma.categoria.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Categorias and only return the `id_categoria`
     * const categoriaWithId_categoriaOnly = await prisma.categoria.createManyAndReturn({
     *   select: { id_categoria: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CategoriaCreateManyAndReturnArgs>(args?: SelectSubset<T, CategoriaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Categoria.
     * @param {CategoriaDeleteArgs} args - Arguments to delete one Categoria.
     * @example
     * // Delete one Categoria
     * const Categoria = await prisma.categoria.delete({
     *   where: {
     *     // ... filter to delete one Categoria
     *   }
     * })
     * 
     */
    delete<T extends CategoriaDeleteArgs>(args: SelectSubset<T, CategoriaDeleteArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Categoria.
     * @param {CategoriaUpdateArgs} args - Arguments to update one Categoria.
     * @example
     * // Update one Categoria
     * const categoria = await prisma.categoria.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CategoriaUpdateArgs>(args: SelectSubset<T, CategoriaUpdateArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Categorias.
     * @param {CategoriaDeleteManyArgs} args - Arguments to filter Categorias to delete.
     * @example
     * // Delete a few Categorias
     * const { count } = await prisma.categoria.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CategoriaDeleteManyArgs>(args?: SelectSubset<T, CategoriaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categorias
     * const categoria = await prisma.categoria.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CategoriaUpdateManyArgs>(args: SelectSubset<T, CategoriaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categorias and returns the data updated in the database.
     * @param {CategoriaUpdateManyAndReturnArgs} args - Arguments to update many Categorias.
     * @example
     * // Update many Categorias
     * const categoria = await prisma.categoria.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Categorias and only return the `id_categoria`
     * const categoriaWithId_categoriaOnly = await prisma.categoria.updateManyAndReturn({
     *   select: { id_categoria: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CategoriaUpdateManyAndReturnArgs>(args: SelectSubset<T, CategoriaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Categoria.
     * @param {CategoriaUpsertArgs} args - Arguments to update or create a Categoria.
     * @example
     * // Update or create a Categoria
     * const categoria = await prisma.categoria.upsert({
     *   create: {
     *     // ... data to create a Categoria
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Categoria we want to update
     *   }
     * })
     */
    upsert<T extends CategoriaUpsertArgs>(args: SelectSubset<T, CategoriaUpsertArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaCountArgs} args - Arguments to filter Categorias to count.
     * @example
     * // Count the number of Categorias
     * const count = await prisma.categoria.count({
     *   where: {
     *     // ... the filter for the Categorias we want to count
     *   }
     * })
    **/
    count<T extends CategoriaCountArgs>(
      args?: Subset<T, CategoriaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoriaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Categoria.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoriaAggregateArgs>(args: Subset<T, CategoriaAggregateArgs>): Prisma.PrismaPromise<GetCategoriaAggregateType<T>>

    /**
     * Group by Categoria.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoriaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoriaGroupByArgs['orderBy'] }
        : { orderBy?: CategoriaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoriaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoriaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Categoria model
   */
  readonly fields: CategoriaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Categoria.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoriaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    establecimiento<T extends EstablecimientoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EstablecimientoDefaultArgs<ExtArgs>>): Prisma__EstablecimientoClient<$Result.GetResult<Prisma.$EstablecimientoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    CategoriaTraduccion<T extends Categoria$CategoriaTraduccionArgs<ExtArgs> = {}>(args?: Subset<T, Categoria$CategoriaTraduccionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaTraduccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    productos<T extends Categoria$productosArgs<ExtArgs> = {}>(args?: Subset<T, Categoria$productosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Categoria model
   */
  interface CategoriaFieldRefs {
    readonly id_categoria: FieldRef<"Categoria", 'Int'>
    readonly nombre: FieldRef<"Categoria", 'String'>
    readonly imagen_url: FieldRef<"Categoria", 'String'>
    readonly id_establecimiento: FieldRef<"Categoria", 'Int'>
    readonly orden: FieldRef<"Categoria", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Categoria findUnique
   */
  export type CategoriaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categoria to fetch.
     */
    where: CategoriaWhereUniqueInput
  }

  /**
   * Categoria findUniqueOrThrow
   */
  export type CategoriaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categoria to fetch.
     */
    where: CategoriaWhereUniqueInput
  }

  /**
   * Categoria findFirst
   */
  export type CategoriaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categoria to fetch.
     */
    where?: CategoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categorias to fetch.
     */
    orderBy?: CategoriaOrderByWithRelationInput | CategoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categorias.
     */
    cursor?: CategoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categorias.
     */
    distinct?: CategoriaScalarFieldEnum | CategoriaScalarFieldEnum[]
  }

  /**
   * Categoria findFirstOrThrow
   */
  export type CategoriaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categoria to fetch.
     */
    where?: CategoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categorias to fetch.
     */
    orderBy?: CategoriaOrderByWithRelationInput | CategoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categorias.
     */
    cursor?: CategoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categorias.
     */
    distinct?: CategoriaScalarFieldEnum | CategoriaScalarFieldEnum[]
  }

  /**
   * Categoria findMany
   */
  export type CategoriaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categorias to fetch.
     */
    where?: CategoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categorias to fetch.
     */
    orderBy?: CategoriaOrderByWithRelationInput | CategoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Categorias.
     */
    cursor?: CategoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categorias.
     */
    skip?: number
    distinct?: CategoriaScalarFieldEnum | CategoriaScalarFieldEnum[]
  }

  /**
   * Categoria create
   */
  export type CategoriaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * The data needed to create a Categoria.
     */
    data: XOR<CategoriaCreateInput, CategoriaUncheckedCreateInput>
  }

  /**
   * Categoria createMany
   */
  export type CategoriaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Categorias.
     */
    data: CategoriaCreateManyInput | CategoriaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Categoria createManyAndReturn
   */
  export type CategoriaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * The data used to create many Categorias.
     */
    data: CategoriaCreateManyInput | CategoriaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Categoria update
   */
  export type CategoriaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * The data needed to update a Categoria.
     */
    data: XOR<CategoriaUpdateInput, CategoriaUncheckedUpdateInput>
    /**
     * Choose, which Categoria to update.
     */
    where: CategoriaWhereUniqueInput
  }

  /**
   * Categoria updateMany
   */
  export type CategoriaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Categorias.
     */
    data: XOR<CategoriaUpdateManyMutationInput, CategoriaUncheckedUpdateManyInput>
    /**
     * Filter which Categorias to update
     */
    where?: CategoriaWhereInput
    /**
     * Limit how many Categorias to update.
     */
    limit?: number
  }

  /**
   * Categoria updateManyAndReturn
   */
  export type CategoriaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * The data used to update Categorias.
     */
    data: XOR<CategoriaUpdateManyMutationInput, CategoriaUncheckedUpdateManyInput>
    /**
     * Filter which Categorias to update
     */
    where?: CategoriaWhereInput
    /**
     * Limit how many Categorias to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Categoria upsert
   */
  export type CategoriaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * The filter to search for the Categoria to update in case it exists.
     */
    where: CategoriaWhereUniqueInput
    /**
     * In case the Categoria found by the `where` argument doesn't exist, create a new Categoria with this data.
     */
    create: XOR<CategoriaCreateInput, CategoriaUncheckedCreateInput>
    /**
     * In case the Categoria was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoriaUpdateInput, CategoriaUncheckedUpdateInput>
  }

  /**
   * Categoria delete
   */
  export type CategoriaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter which Categoria to delete.
     */
    where: CategoriaWhereUniqueInput
  }

  /**
   * Categoria deleteMany
   */
  export type CategoriaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categorias to delete
     */
    where?: CategoriaWhereInput
    /**
     * Limit how many Categorias to delete.
     */
    limit?: number
  }

  /**
   * Categoria.CategoriaTraduccion
   */
  export type Categoria$CategoriaTraduccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaTraduccion
     */
    select?: CategoriaTraduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaTraduccion
     */
    omit?: CategoriaTraduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaTraduccionInclude<ExtArgs> | null
    where?: CategoriaTraduccionWhereInput
    orderBy?: CategoriaTraduccionOrderByWithRelationInput | CategoriaTraduccionOrderByWithRelationInput[]
    cursor?: CategoriaTraduccionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoriaTraduccionScalarFieldEnum | CategoriaTraduccionScalarFieldEnum[]
  }

  /**
   * Categoria.productos
   */
  export type Categoria$productosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    where?: ProductoWhereInput
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    cursor?: ProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Categoria without action
   */
  export type CategoriaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
  }


  /**
   * Model CategoriaTraduccion
   */

  export type AggregateCategoriaTraduccion = {
    _count: CategoriaTraduccionCountAggregateOutputType | null
    _avg: CategoriaTraduccionAvgAggregateOutputType | null
    _sum: CategoriaTraduccionSumAggregateOutputType | null
    _min: CategoriaTraduccionMinAggregateOutputType | null
    _max: CategoriaTraduccionMaxAggregateOutputType | null
  }

  export type CategoriaTraduccionAvgAggregateOutputType = {
    id_traduccion: number | null
    id_categoria: number | null
  }

  export type CategoriaTraduccionSumAggregateOutputType = {
    id_traduccion: number | null
    id_categoria: number | null
  }

  export type CategoriaTraduccionMinAggregateOutputType = {
    id_traduccion: number | null
    id_categoria: number | null
    idioma: string | null
    nombre: string | null
  }

  export type CategoriaTraduccionMaxAggregateOutputType = {
    id_traduccion: number | null
    id_categoria: number | null
    idioma: string | null
    nombre: string | null
  }

  export type CategoriaTraduccionCountAggregateOutputType = {
    id_traduccion: number
    id_categoria: number
    idioma: number
    nombre: number
    _all: number
  }


  export type CategoriaTraduccionAvgAggregateInputType = {
    id_traduccion?: true
    id_categoria?: true
  }

  export type CategoriaTraduccionSumAggregateInputType = {
    id_traduccion?: true
    id_categoria?: true
  }

  export type CategoriaTraduccionMinAggregateInputType = {
    id_traduccion?: true
    id_categoria?: true
    idioma?: true
    nombre?: true
  }

  export type CategoriaTraduccionMaxAggregateInputType = {
    id_traduccion?: true
    id_categoria?: true
    idioma?: true
    nombre?: true
  }

  export type CategoriaTraduccionCountAggregateInputType = {
    id_traduccion?: true
    id_categoria?: true
    idioma?: true
    nombre?: true
    _all?: true
  }

  export type CategoriaTraduccionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CategoriaTraduccion to aggregate.
     */
    where?: CategoriaTraduccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoriaTraduccions to fetch.
     */
    orderBy?: CategoriaTraduccionOrderByWithRelationInput | CategoriaTraduccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoriaTraduccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoriaTraduccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoriaTraduccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CategoriaTraduccions
    **/
    _count?: true | CategoriaTraduccionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoriaTraduccionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategoriaTraduccionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoriaTraduccionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoriaTraduccionMaxAggregateInputType
  }

  export type GetCategoriaTraduccionAggregateType<T extends CategoriaTraduccionAggregateArgs> = {
        [P in keyof T & keyof AggregateCategoriaTraduccion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategoriaTraduccion[P]>
      : GetScalarType<T[P], AggregateCategoriaTraduccion[P]>
  }




  export type CategoriaTraduccionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoriaTraduccionWhereInput
    orderBy?: CategoriaTraduccionOrderByWithAggregationInput | CategoriaTraduccionOrderByWithAggregationInput[]
    by: CategoriaTraduccionScalarFieldEnum[] | CategoriaTraduccionScalarFieldEnum
    having?: CategoriaTraduccionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoriaTraduccionCountAggregateInputType | true
    _avg?: CategoriaTraduccionAvgAggregateInputType
    _sum?: CategoriaTraduccionSumAggregateInputType
    _min?: CategoriaTraduccionMinAggregateInputType
    _max?: CategoriaTraduccionMaxAggregateInputType
  }

  export type CategoriaTraduccionGroupByOutputType = {
    id_traduccion: number
    id_categoria: number
    idioma: string
    nombre: string
    _count: CategoriaTraduccionCountAggregateOutputType | null
    _avg: CategoriaTraduccionAvgAggregateOutputType | null
    _sum: CategoriaTraduccionSumAggregateOutputType | null
    _min: CategoriaTraduccionMinAggregateOutputType | null
    _max: CategoriaTraduccionMaxAggregateOutputType | null
  }

  type GetCategoriaTraduccionGroupByPayload<T extends CategoriaTraduccionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoriaTraduccionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoriaTraduccionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoriaTraduccionGroupByOutputType[P]>
            : GetScalarType<T[P], CategoriaTraduccionGroupByOutputType[P]>
        }
      >
    >


  export type CategoriaTraduccionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_traduccion?: boolean
    id_categoria?: boolean
    idioma?: boolean
    nombre?: boolean
    categoria?: boolean | CategoriaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categoriaTraduccion"]>

  export type CategoriaTraduccionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_traduccion?: boolean
    id_categoria?: boolean
    idioma?: boolean
    nombre?: boolean
    categoria?: boolean | CategoriaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categoriaTraduccion"]>

  export type CategoriaTraduccionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_traduccion?: boolean
    id_categoria?: boolean
    idioma?: boolean
    nombre?: boolean
    categoria?: boolean | CategoriaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categoriaTraduccion"]>

  export type CategoriaTraduccionSelectScalar = {
    id_traduccion?: boolean
    id_categoria?: boolean
    idioma?: boolean
    nombre?: boolean
  }

  export type CategoriaTraduccionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_traduccion" | "id_categoria" | "idioma" | "nombre", ExtArgs["result"]["categoriaTraduccion"]>
  export type CategoriaTraduccionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoria?: boolean | CategoriaDefaultArgs<ExtArgs>
  }
  export type CategoriaTraduccionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoria?: boolean | CategoriaDefaultArgs<ExtArgs>
  }
  export type CategoriaTraduccionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoria?: boolean | CategoriaDefaultArgs<ExtArgs>
  }

  export type $CategoriaTraduccionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CategoriaTraduccion"
    objects: {
      categoria: Prisma.$CategoriaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_traduccion: number
      id_categoria: number
      idioma: string
      nombre: string
    }, ExtArgs["result"]["categoriaTraduccion"]>
    composites: {}
  }

  type CategoriaTraduccionGetPayload<S extends boolean | null | undefined | CategoriaTraduccionDefaultArgs> = $Result.GetResult<Prisma.$CategoriaTraduccionPayload, S>

  type CategoriaTraduccionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CategoriaTraduccionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CategoriaTraduccionCountAggregateInputType | true
    }

  export interface CategoriaTraduccionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CategoriaTraduccion'], meta: { name: 'CategoriaTraduccion' } }
    /**
     * Find zero or one CategoriaTraduccion that matches the filter.
     * @param {CategoriaTraduccionFindUniqueArgs} args - Arguments to find a CategoriaTraduccion
     * @example
     * // Get one CategoriaTraduccion
     * const categoriaTraduccion = await prisma.categoriaTraduccion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CategoriaTraduccionFindUniqueArgs>(args: SelectSubset<T, CategoriaTraduccionFindUniqueArgs<ExtArgs>>): Prisma__CategoriaTraduccionClient<$Result.GetResult<Prisma.$CategoriaTraduccionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CategoriaTraduccion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CategoriaTraduccionFindUniqueOrThrowArgs} args - Arguments to find a CategoriaTraduccion
     * @example
     * // Get one CategoriaTraduccion
     * const categoriaTraduccion = await prisma.categoriaTraduccion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CategoriaTraduccionFindUniqueOrThrowArgs>(args: SelectSubset<T, CategoriaTraduccionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CategoriaTraduccionClient<$Result.GetResult<Prisma.$CategoriaTraduccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CategoriaTraduccion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaTraduccionFindFirstArgs} args - Arguments to find a CategoriaTraduccion
     * @example
     * // Get one CategoriaTraduccion
     * const categoriaTraduccion = await prisma.categoriaTraduccion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CategoriaTraduccionFindFirstArgs>(args?: SelectSubset<T, CategoriaTraduccionFindFirstArgs<ExtArgs>>): Prisma__CategoriaTraduccionClient<$Result.GetResult<Prisma.$CategoriaTraduccionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CategoriaTraduccion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaTraduccionFindFirstOrThrowArgs} args - Arguments to find a CategoriaTraduccion
     * @example
     * // Get one CategoriaTraduccion
     * const categoriaTraduccion = await prisma.categoriaTraduccion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CategoriaTraduccionFindFirstOrThrowArgs>(args?: SelectSubset<T, CategoriaTraduccionFindFirstOrThrowArgs<ExtArgs>>): Prisma__CategoriaTraduccionClient<$Result.GetResult<Prisma.$CategoriaTraduccionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CategoriaTraduccions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaTraduccionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CategoriaTraduccions
     * const categoriaTraduccions = await prisma.categoriaTraduccion.findMany()
     * 
     * // Get first 10 CategoriaTraduccions
     * const categoriaTraduccions = await prisma.categoriaTraduccion.findMany({ take: 10 })
     * 
     * // Only select the `id_traduccion`
     * const categoriaTraduccionWithId_traduccionOnly = await prisma.categoriaTraduccion.findMany({ select: { id_traduccion: true } })
     * 
     */
    findMany<T extends CategoriaTraduccionFindManyArgs>(args?: SelectSubset<T, CategoriaTraduccionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaTraduccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CategoriaTraduccion.
     * @param {CategoriaTraduccionCreateArgs} args - Arguments to create a CategoriaTraduccion.
     * @example
     * // Create one CategoriaTraduccion
     * const CategoriaTraduccion = await prisma.categoriaTraduccion.create({
     *   data: {
     *     // ... data to create a CategoriaTraduccion
     *   }
     * })
     * 
     */
    create<T extends CategoriaTraduccionCreateArgs>(args: SelectSubset<T, CategoriaTraduccionCreateArgs<ExtArgs>>): Prisma__CategoriaTraduccionClient<$Result.GetResult<Prisma.$CategoriaTraduccionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CategoriaTraduccions.
     * @param {CategoriaTraduccionCreateManyArgs} args - Arguments to create many CategoriaTraduccions.
     * @example
     * // Create many CategoriaTraduccions
     * const categoriaTraduccion = await prisma.categoriaTraduccion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CategoriaTraduccionCreateManyArgs>(args?: SelectSubset<T, CategoriaTraduccionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CategoriaTraduccions and returns the data saved in the database.
     * @param {CategoriaTraduccionCreateManyAndReturnArgs} args - Arguments to create many CategoriaTraduccions.
     * @example
     * // Create many CategoriaTraduccions
     * const categoriaTraduccion = await prisma.categoriaTraduccion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CategoriaTraduccions and only return the `id_traduccion`
     * const categoriaTraduccionWithId_traduccionOnly = await prisma.categoriaTraduccion.createManyAndReturn({
     *   select: { id_traduccion: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CategoriaTraduccionCreateManyAndReturnArgs>(args?: SelectSubset<T, CategoriaTraduccionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaTraduccionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CategoriaTraduccion.
     * @param {CategoriaTraduccionDeleteArgs} args - Arguments to delete one CategoriaTraduccion.
     * @example
     * // Delete one CategoriaTraduccion
     * const CategoriaTraduccion = await prisma.categoriaTraduccion.delete({
     *   where: {
     *     // ... filter to delete one CategoriaTraduccion
     *   }
     * })
     * 
     */
    delete<T extends CategoriaTraduccionDeleteArgs>(args: SelectSubset<T, CategoriaTraduccionDeleteArgs<ExtArgs>>): Prisma__CategoriaTraduccionClient<$Result.GetResult<Prisma.$CategoriaTraduccionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CategoriaTraduccion.
     * @param {CategoriaTraduccionUpdateArgs} args - Arguments to update one CategoriaTraduccion.
     * @example
     * // Update one CategoriaTraduccion
     * const categoriaTraduccion = await prisma.categoriaTraduccion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CategoriaTraduccionUpdateArgs>(args: SelectSubset<T, CategoriaTraduccionUpdateArgs<ExtArgs>>): Prisma__CategoriaTraduccionClient<$Result.GetResult<Prisma.$CategoriaTraduccionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CategoriaTraduccions.
     * @param {CategoriaTraduccionDeleteManyArgs} args - Arguments to filter CategoriaTraduccions to delete.
     * @example
     * // Delete a few CategoriaTraduccions
     * const { count } = await prisma.categoriaTraduccion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CategoriaTraduccionDeleteManyArgs>(args?: SelectSubset<T, CategoriaTraduccionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CategoriaTraduccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaTraduccionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CategoriaTraduccions
     * const categoriaTraduccion = await prisma.categoriaTraduccion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CategoriaTraduccionUpdateManyArgs>(args: SelectSubset<T, CategoriaTraduccionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CategoriaTraduccions and returns the data updated in the database.
     * @param {CategoriaTraduccionUpdateManyAndReturnArgs} args - Arguments to update many CategoriaTraduccions.
     * @example
     * // Update many CategoriaTraduccions
     * const categoriaTraduccion = await prisma.categoriaTraduccion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CategoriaTraduccions and only return the `id_traduccion`
     * const categoriaTraduccionWithId_traduccionOnly = await prisma.categoriaTraduccion.updateManyAndReturn({
     *   select: { id_traduccion: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CategoriaTraduccionUpdateManyAndReturnArgs>(args: SelectSubset<T, CategoriaTraduccionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaTraduccionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CategoriaTraduccion.
     * @param {CategoriaTraduccionUpsertArgs} args - Arguments to update or create a CategoriaTraduccion.
     * @example
     * // Update or create a CategoriaTraduccion
     * const categoriaTraduccion = await prisma.categoriaTraduccion.upsert({
     *   create: {
     *     // ... data to create a CategoriaTraduccion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CategoriaTraduccion we want to update
     *   }
     * })
     */
    upsert<T extends CategoriaTraduccionUpsertArgs>(args: SelectSubset<T, CategoriaTraduccionUpsertArgs<ExtArgs>>): Prisma__CategoriaTraduccionClient<$Result.GetResult<Prisma.$CategoriaTraduccionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CategoriaTraduccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaTraduccionCountArgs} args - Arguments to filter CategoriaTraduccions to count.
     * @example
     * // Count the number of CategoriaTraduccions
     * const count = await prisma.categoriaTraduccion.count({
     *   where: {
     *     // ... the filter for the CategoriaTraduccions we want to count
     *   }
     * })
    **/
    count<T extends CategoriaTraduccionCountArgs>(
      args?: Subset<T, CategoriaTraduccionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoriaTraduccionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CategoriaTraduccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaTraduccionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoriaTraduccionAggregateArgs>(args: Subset<T, CategoriaTraduccionAggregateArgs>): Prisma.PrismaPromise<GetCategoriaTraduccionAggregateType<T>>

    /**
     * Group by CategoriaTraduccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaTraduccionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoriaTraduccionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoriaTraduccionGroupByArgs['orderBy'] }
        : { orderBy?: CategoriaTraduccionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoriaTraduccionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoriaTraduccionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CategoriaTraduccion model
   */
  readonly fields: CategoriaTraduccionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CategoriaTraduccion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoriaTraduccionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    categoria<T extends CategoriaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoriaDefaultArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CategoriaTraduccion model
   */
  interface CategoriaTraduccionFieldRefs {
    readonly id_traduccion: FieldRef<"CategoriaTraduccion", 'Int'>
    readonly id_categoria: FieldRef<"CategoriaTraduccion", 'Int'>
    readonly idioma: FieldRef<"CategoriaTraduccion", 'String'>
    readonly nombre: FieldRef<"CategoriaTraduccion", 'String'>
  }
    

  // Custom InputTypes
  /**
   * CategoriaTraduccion findUnique
   */
  export type CategoriaTraduccionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaTraduccion
     */
    select?: CategoriaTraduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaTraduccion
     */
    omit?: CategoriaTraduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaTraduccionInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaTraduccion to fetch.
     */
    where: CategoriaTraduccionWhereUniqueInput
  }

  /**
   * CategoriaTraduccion findUniqueOrThrow
   */
  export type CategoriaTraduccionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaTraduccion
     */
    select?: CategoriaTraduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaTraduccion
     */
    omit?: CategoriaTraduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaTraduccionInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaTraduccion to fetch.
     */
    where: CategoriaTraduccionWhereUniqueInput
  }

  /**
   * CategoriaTraduccion findFirst
   */
  export type CategoriaTraduccionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaTraduccion
     */
    select?: CategoriaTraduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaTraduccion
     */
    omit?: CategoriaTraduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaTraduccionInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaTraduccion to fetch.
     */
    where?: CategoriaTraduccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoriaTraduccions to fetch.
     */
    orderBy?: CategoriaTraduccionOrderByWithRelationInput | CategoriaTraduccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CategoriaTraduccions.
     */
    cursor?: CategoriaTraduccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoriaTraduccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoriaTraduccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CategoriaTraduccions.
     */
    distinct?: CategoriaTraduccionScalarFieldEnum | CategoriaTraduccionScalarFieldEnum[]
  }

  /**
   * CategoriaTraduccion findFirstOrThrow
   */
  export type CategoriaTraduccionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaTraduccion
     */
    select?: CategoriaTraduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaTraduccion
     */
    omit?: CategoriaTraduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaTraduccionInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaTraduccion to fetch.
     */
    where?: CategoriaTraduccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoriaTraduccions to fetch.
     */
    orderBy?: CategoriaTraduccionOrderByWithRelationInput | CategoriaTraduccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CategoriaTraduccions.
     */
    cursor?: CategoriaTraduccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoriaTraduccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoriaTraduccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CategoriaTraduccions.
     */
    distinct?: CategoriaTraduccionScalarFieldEnum | CategoriaTraduccionScalarFieldEnum[]
  }

  /**
   * CategoriaTraduccion findMany
   */
  export type CategoriaTraduccionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaTraduccion
     */
    select?: CategoriaTraduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaTraduccion
     */
    omit?: CategoriaTraduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaTraduccionInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaTraduccions to fetch.
     */
    where?: CategoriaTraduccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoriaTraduccions to fetch.
     */
    orderBy?: CategoriaTraduccionOrderByWithRelationInput | CategoriaTraduccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CategoriaTraduccions.
     */
    cursor?: CategoriaTraduccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoriaTraduccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoriaTraduccions.
     */
    skip?: number
    distinct?: CategoriaTraduccionScalarFieldEnum | CategoriaTraduccionScalarFieldEnum[]
  }

  /**
   * CategoriaTraduccion create
   */
  export type CategoriaTraduccionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaTraduccion
     */
    select?: CategoriaTraduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaTraduccion
     */
    omit?: CategoriaTraduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaTraduccionInclude<ExtArgs> | null
    /**
     * The data needed to create a CategoriaTraduccion.
     */
    data: XOR<CategoriaTraduccionCreateInput, CategoriaTraduccionUncheckedCreateInput>
  }

  /**
   * CategoriaTraduccion createMany
   */
  export type CategoriaTraduccionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CategoriaTraduccions.
     */
    data: CategoriaTraduccionCreateManyInput | CategoriaTraduccionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CategoriaTraduccion createManyAndReturn
   */
  export type CategoriaTraduccionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaTraduccion
     */
    select?: CategoriaTraduccionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaTraduccion
     */
    omit?: CategoriaTraduccionOmit<ExtArgs> | null
    /**
     * The data used to create many CategoriaTraduccions.
     */
    data: CategoriaTraduccionCreateManyInput | CategoriaTraduccionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaTraduccionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CategoriaTraduccion update
   */
  export type CategoriaTraduccionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaTraduccion
     */
    select?: CategoriaTraduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaTraduccion
     */
    omit?: CategoriaTraduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaTraduccionInclude<ExtArgs> | null
    /**
     * The data needed to update a CategoriaTraduccion.
     */
    data: XOR<CategoriaTraduccionUpdateInput, CategoriaTraduccionUncheckedUpdateInput>
    /**
     * Choose, which CategoriaTraduccion to update.
     */
    where: CategoriaTraduccionWhereUniqueInput
  }

  /**
   * CategoriaTraduccion updateMany
   */
  export type CategoriaTraduccionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CategoriaTraduccions.
     */
    data: XOR<CategoriaTraduccionUpdateManyMutationInput, CategoriaTraduccionUncheckedUpdateManyInput>
    /**
     * Filter which CategoriaTraduccions to update
     */
    where?: CategoriaTraduccionWhereInput
    /**
     * Limit how many CategoriaTraduccions to update.
     */
    limit?: number
  }

  /**
   * CategoriaTraduccion updateManyAndReturn
   */
  export type CategoriaTraduccionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaTraduccion
     */
    select?: CategoriaTraduccionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaTraduccion
     */
    omit?: CategoriaTraduccionOmit<ExtArgs> | null
    /**
     * The data used to update CategoriaTraduccions.
     */
    data: XOR<CategoriaTraduccionUpdateManyMutationInput, CategoriaTraduccionUncheckedUpdateManyInput>
    /**
     * Filter which CategoriaTraduccions to update
     */
    where?: CategoriaTraduccionWhereInput
    /**
     * Limit how many CategoriaTraduccions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaTraduccionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CategoriaTraduccion upsert
   */
  export type CategoriaTraduccionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaTraduccion
     */
    select?: CategoriaTraduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaTraduccion
     */
    omit?: CategoriaTraduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaTraduccionInclude<ExtArgs> | null
    /**
     * The filter to search for the CategoriaTraduccion to update in case it exists.
     */
    where: CategoriaTraduccionWhereUniqueInput
    /**
     * In case the CategoriaTraduccion found by the `where` argument doesn't exist, create a new CategoriaTraduccion with this data.
     */
    create: XOR<CategoriaTraduccionCreateInput, CategoriaTraduccionUncheckedCreateInput>
    /**
     * In case the CategoriaTraduccion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoriaTraduccionUpdateInput, CategoriaTraduccionUncheckedUpdateInput>
  }

  /**
   * CategoriaTraduccion delete
   */
  export type CategoriaTraduccionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaTraduccion
     */
    select?: CategoriaTraduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaTraduccion
     */
    omit?: CategoriaTraduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaTraduccionInclude<ExtArgs> | null
    /**
     * Filter which CategoriaTraduccion to delete.
     */
    where: CategoriaTraduccionWhereUniqueInput
  }

  /**
   * CategoriaTraduccion deleteMany
   */
  export type CategoriaTraduccionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CategoriaTraduccions to delete
     */
    where?: CategoriaTraduccionWhereInput
    /**
     * Limit how many CategoriaTraduccions to delete.
     */
    limit?: number
  }

  /**
   * CategoriaTraduccion without action
   */
  export type CategoriaTraduccionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaTraduccion
     */
    select?: CategoriaTraduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaTraduccion
     */
    omit?: CategoriaTraduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaTraduccionInclude<ExtArgs> | null
  }


  /**
   * Model Producto
   */

  export type AggregateProducto = {
    _count: ProductoCountAggregateOutputType | null
    _avg: ProductoAvgAggregateOutputType | null
    _sum: ProductoSumAggregateOutputType | null
    _min: ProductoMinAggregateOutputType | null
    _max: ProductoMaxAggregateOutputType | null
  }

  export type ProductoAvgAggregateOutputType = {
    id_producto: number | null
    precio: Decimal | null
    id_categoria: number | null
    id_establecimiento: number | null
    orden: number | null
  }

  export type ProductoSumAggregateOutputType = {
    id_producto: number | null
    precio: Decimal | null
    id_categoria: number | null
    id_establecimiento: number | null
    orden: number | null
  }

  export type ProductoMinAggregateOutputType = {
    id_producto: number | null
    nombre: string | null
    descripcion: string | null
    precio: Decimal | null
    imagen_url: string | null
    id_categoria: number | null
    id_establecimiento: number | null
    orden: number | null
  }

  export type ProductoMaxAggregateOutputType = {
    id_producto: number | null
    nombre: string | null
    descripcion: string | null
    precio: Decimal | null
    imagen_url: string | null
    id_categoria: number | null
    id_establecimiento: number | null
    orden: number | null
  }

  export type ProductoCountAggregateOutputType = {
    id_producto: number
    nombre: number
    descripcion: number
    precio: number
    imagen_url: number
    id_categoria: number
    id_establecimiento: number
    orden: number
    _all: number
  }


  export type ProductoAvgAggregateInputType = {
    id_producto?: true
    precio?: true
    id_categoria?: true
    id_establecimiento?: true
    orden?: true
  }

  export type ProductoSumAggregateInputType = {
    id_producto?: true
    precio?: true
    id_categoria?: true
    id_establecimiento?: true
    orden?: true
  }

  export type ProductoMinAggregateInputType = {
    id_producto?: true
    nombre?: true
    descripcion?: true
    precio?: true
    imagen_url?: true
    id_categoria?: true
    id_establecimiento?: true
    orden?: true
  }

  export type ProductoMaxAggregateInputType = {
    id_producto?: true
    nombre?: true
    descripcion?: true
    precio?: true
    imagen_url?: true
    id_categoria?: true
    id_establecimiento?: true
    orden?: true
  }

  export type ProductoCountAggregateInputType = {
    id_producto?: true
    nombre?: true
    descripcion?: true
    precio?: true
    imagen_url?: true
    id_categoria?: true
    id_establecimiento?: true
    orden?: true
    _all?: true
  }

  export type ProductoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Producto to aggregate.
     */
    where?: ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Productos
    **/
    _count?: true | ProductoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductoMaxAggregateInputType
  }

  export type GetProductoAggregateType<T extends ProductoAggregateArgs> = {
        [P in keyof T & keyof AggregateProducto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProducto[P]>
      : GetScalarType<T[P], AggregateProducto[P]>
  }




  export type ProductoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductoWhereInput
    orderBy?: ProductoOrderByWithAggregationInput | ProductoOrderByWithAggregationInput[]
    by: ProductoScalarFieldEnum[] | ProductoScalarFieldEnum
    having?: ProductoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductoCountAggregateInputType | true
    _avg?: ProductoAvgAggregateInputType
    _sum?: ProductoSumAggregateInputType
    _min?: ProductoMinAggregateInputType
    _max?: ProductoMaxAggregateInputType
  }

  export type ProductoGroupByOutputType = {
    id_producto: number
    nombre: string
    descripcion: string | null
    precio: Decimal
    imagen_url: string | null
    id_categoria: number
    id_establecimiento: number
    orden: number | null
    _count: ProductoCountAggregateOutputType | null
    _avg: ProductoAvgAggregateOutputType | null
    _sum: ProductoSumAggregateOutputType | null
    _min: ProductoMinAggregateOutputType | null
    _max: ProductoMaxAggregateOutputType | null
  }

  type GetProductoGroupByPayload<T extends ProductoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductoGroupByOutputType[P]>
            : GetScalarType<T[P], ProductoGroupByOutputType[P]>
        }
      >
    >


  export type ProductoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_producto?: boolean
    nombre?: boolean
    descripcion?: boolean
    precio?: boolean
    imagen_url?: boolean
    id_categoria?: boolean
    id_establecimiento?: boolean
    orden?: boolean
    detallesPedido?: boolean | Producto$detallesPedidoArgs<ExtArgs>
    categoria?: boolean | CategoriaDefaultArgs<ExtArgs>
    establecimiento?: boolean | EstablecimientoDefaultArgs<ExtArgs>
    ProductoTraduccion?: boolean | Producto$ProductoTraduccionArgs<ExtArgs>
    _count?: boolean | ProductoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["producto"]>

  export type ProductoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_producto?: boolean
    nombre?: boolean
    descripcion?: boolean
    precio?: boolean
    imagen_url?: boolean
    id_categoria?: boolean
    id_establecimiento?: boolean
    orden?: boolean
    categoria?: boolean | CategoriaDefaultArgs<ExtArgs>
    establecimiento?: boolean | EstablecimientoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["producto"]>

  export type ProductoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_producto?: boolean
    nombre?: boolean
    descripcion?: boolean
    precio?: boolean
    imagen_url?: boolean
    id_categoria?: boolean
    id_establecimiento?: boolean
    orden?: boolean
    categoria?: boolean | CategoriaDefaultArgs<ExtArgs>
    establecimiento?: boolean | EstablecimientoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["producto"]>

  export type ProductoSelectScalar = {
    id_producto?: boolean
    nombre?: boolean
    descripcion?: boolean
    precio?: boolean
    imagen_url?: boolean
    id_categoria?: boolean
    id_establecimiento?: boolean
    orden?: boolean
  }

  export type ProductoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_producto" | "nombre" | "descripcion" | "precio" | "imagen_url" | "id_categoria" | "id_establecimiento" | "orden", ExtArgs["result"]["producto"]>
  export type ProductoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detallesPedido?: boolean | Producto$detallesPedidoArgs<ExtArgs>
    categoria?: boolean | CategoriaDefaultArgs<ExtArgs>
    establecimiento?: boolean | EstablecimientoDefaultArgs<ExtArgs>
    ProductoTraduccion?: boolean | Producto$ProductoTraduccionArgs<ExtArgs>
    _count?: boolean | ProductoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoria?: boolean | CategoriaDefaultArgs<ExtArgs>
    establecimiento?: boolean | EstablecimientoDefaultArgs<ExtArgs>
  }
  export type ProductoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoria?: boolean | CategoriaDefaultArgs<ExtArgs>
    establecimiento?: boolean | EstablecimientoDefaultArgs<ExtArgs>
  }

  export type $ProductoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Producto"
    objects: {
      detallesPedido: Prisma.$DetallePedidoPayload<ExtArgs>[]
      categoria: Prisma.$CategoriaPayload<ExtArgs>
      establecimiento: Prisma.$EstablecimientoPayload<ExtArgs>
      ProductoTraduccion: Prisma.$ProductoTraduccionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_producto: number
      nombre: string
      descripcion: string | null
      precio: Prisma.Decimal
      imagen_url: string | null
      id_categoria: number
      id_establecimiento: number
      orden: number | null
    }, ExtArgs["result"]["producto"]>
    composites: {}
  }

  type ProductoGetPayload<S extends boolean | null | undefined | ProductoDefaultArgs> = $Result.GetResult<Prisma.$ProductoPayload, S>

  type ProductoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductoCountAggregateInputType | true
    }

  export interface ProductoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Producto'], meta: { name: 'Producto' } }
    /**
     * Find zero or one Producto that matches the filter.
     * @param {ProductoFindUniqueArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductoFindUniqueArgs>(args: SelectSubset<T, ProductoFindUniqueArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Producto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductoFindUniqueOrThrowArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductoFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Producto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoFindFirstArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductoFindFirstArgs>(args?: SelectSubset<T, ProductoFindFirstArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Producto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoFindFirstOrThrowArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductoFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Productos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Productos
     * const productos = await prisma.producto.findMany()
     * 
     * // Get first 10 Productos
     * const productos = await prisma.producto.findMany({ take: 10 })
     * 
     * // Only select the `id_producto`
     * const productoWithId_productoOnly = await prisma.producto.findMany({ select: { id_producto: true } })
     * 
     */
    findMany<T extends ProductoFindManyArgs>(args?: SelectSubset<T, ProductoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Producto.
     * @param {ProductoCreateArgs} args - Arguments to create a Producto.
     * @example
     * // Create one Producto
     * const Producto = await prisma.producto.create({
     *   data: {
     *     // ... data to create a Producto
     *   }
     * })
     * 
     */
    create<T extends ProductoCreateArgs>(args: SelectSubset<T, ProductoCreateArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Productos.
     * @param {ProductoCreateManyArgs} args - Arguments to create many Productos.
     * @example
     * // Create many Productos
     * const producto = await prisma.producto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductoCreateManyArgs>(args?: SelectSubset<T, ProductoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Productos and returns the data saved in the database.
     * @param {ProductoCreateManyAndReturnArgs} args - Arguments to create many Productos.
     * @example
     * // Create many Productos
     * const producto = await prisma.producto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Productos and only return the `id_producto`
     * const productoWithId_productoOnly = await prisma.producto.createManyAndReturn({
     *   select: { id_producto: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductoCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Producto.
     * @param {ProductoDeleteArgs} args - Arguments to delete one Producto.
     * @example
     * // Delete one Producto
     * const Producto = await prisma.producto.delete({
     *   where: {
     *     // ... filter to delete one Producto
     *   }
     * })
     * 
     */
    delete<T extends ProductoDeleteArgs>(args: SelectSubset<T, ProductoDeleteArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Producto.
     * @param {ProductoUpdateArgs} args - Arguments to update one Producto.
     * @example
     * // Update one Producto
     * const producto = await prisma.producto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductoUpdateArgs>(args: SelectSubset<T, ProductoUpdateArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Productos.
     * @param {ProductoDeleteManyArgs} args - Arguments to filter Productos to delete.
     * @example
     * // Delete a few Productos
     * const { count } = await prisma.producto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductoDeleteManyArgs>(args?: SelectSubset<T, ProductoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Productos
     * const producto = await prisma.producto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductoUpdateManyArgs>(args: SelectSubset<T, ProductoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productos and returns the data updated in the database.
     * @param {ProductoUpdateManyAndReturnArgs} args - Arguments to update many Productos.
     * @example
     * // Update many Productos
     * const producto = await prisma.producto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Productos and only return the `id_producto`
     * const productoWithId_productoOnly = await prisma.producto.updateManyAndReturn({
     *   select: { id_producto: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductoUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Producto.
     * @param {ProductoUpsertArgs} args - Arguments to update or create a Producto.
     * @example
     * // Update or create a Producto
     * const producto = await prisma.producto.upsert({
     *   create: {
     *     // ... data to create a Producto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Producto we want to update
     *   }
     * })
     */
    upsert<T extends ProductoUpsertArgs>(args: SelectSubset<T, ProductoUpsertArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoCountArgs} args - Arguments to filter Productos to count.
     * @example
     * // Count the number of Productos
     * const count = await prisma.producto.count({
     *   where: {
     *     // ... the filter for the Productos we want to count
     *   }
     * })
    **/
    count<T extends ProductoCountArgs>(
      args?: Subset<T, ProductoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Producto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductoAggregateArgs>(args: Subset<T, ProductoAggregateArgs>): Prisma.PrismaPromise<GetProductoAggregateType<T>>

    /**
     * Group by Producto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductoGroupByArgs['orderBy'] }
        : { orderBy?: ProductoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Producto model
   */
  readonly fields: ProductoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Producto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    detallesPedido<T extends Producto$detallesPedidoArgs<ExtArgs> = {}>(args?: Subset<T, Producto$detallesPedidoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetallePedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    categoria<T extends CategoriaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoriaDefaultArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    establecimiento<T extends EstablecimientoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EstablecimientoDefaultArgs<ExtArgs>>): Prisma__EstablecimientoClient<$Result.GetResult<Prisma.$EstablecimientoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ProductoTraduccion<T extends Producto$ProductoTraduccionArgs<ExtArgs> = {}>(args?: Subset<T, Producto$ProductoTraduccionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoTraduccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Producto model
   */
  interface ProductoFieldRefs {
    readonly id_producto: FieldRef<"Producto", 'Int'>
    readonly nombre: FieldRef<"Producto", 'String'>
    readonly descripcion: FieldRef<"Producto", 'String'>
    readonly precio: FieldRef<"Producto", 'Decimal'>
    readonly imagen_url: FieldRef<"Producto", 'String'>
    readonly id_categoria: FieldRef<"Producto", 'Int'>
    readonly id_establecimiento: FieldRef<"Producto", 'Int'>
    readonly orden: FieldRef<"Producto", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Producto findUnique
   */
  export type ProductoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Producto to fetch.
     */
    where: ProductoWhereUniqueInput
  }

  /**
   * Producto findUniqueOrThrow
   */
  export type ProductoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Producto to fetch.
     */
    where: ProductoWhereUniqueInput
  }

  /**
   * Producto findFirst
   */
  export type ProductoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Producto to fetch.
     */
    where?: ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Productos.
     */
    cursor?: ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Productos.
     */
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Producto findFirstOrThrow
   */
  export type ProductoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Producto to fetch.
     */
    where?: ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Productos.
     */
    cursor?: ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Productos.
     */
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Producto findMany
   */
  export type ProductoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Productos to fetch.
     */
    where?: ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Productos.
     */
    cursor?: ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Producto create
   */
  export type ProductoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * The data needed to create a Producto.
     */
    data: XOR<ProductoCreateInput, ProductoUncheckedCreateInput>
  }

  /**
   * Producto createMany
   */
  export type ProductoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Productos.
     */
    data: ProductoCreateManyInput | ProductoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Producto createManyAndReturn
   */
  export type ProductoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * The data used to create many Productos.
     */
    data: ProductoCreateManyInput | ProductoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Producto update
   */
  export type ProductoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * The data needed to update a Producto.
     */
    data: XOR<ProductoUpdateInput, ProductoUncheckedUpdateInput>
    /**
     * Choose, which Producto to update.
     */
    where: ProductoWhereUniqueInput
  }

  /**
   * Producto updateMany
   */
  export type ProductoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Productos.
     */
    data: XOR<ProductoUpdateManyMutationInput, ProductoUncheckedUpdateManyInput>
    /**
     * Filter which Productos to update
     */
    where?: ProductoWhereInput
    /**
     * Limit how many Productos to update.
     */
    limit?: number
  }

  /**
   * Producto updateManyAndReturn
   */
  export type ProductoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * The data used to update Productos.
     */
    data: XOR<ProductoUpdateManyMutationInput, ProductoUncheckedUpdateManyInput>
    /**
     * Filter which Productos to update
     */
    where?: ProductoWhereInput
    /**
     * Limit how many Productos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Producto upsert
   */
  export type ProductoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * The filter to search for the Producto to update in case it exists.
     */
    where: ProductoWhereUniqueInput
    /**
     * In case the Producto found by the `where` argument doesn't exist, create a new Producto with this data.
     */
    create: XOR<ProductoCreateInput, ProductoUncheckedCreateInput>
    /**
     * In case the Producto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductoUpdateInput, ProductoUncheckedUpdateInput>
  }

  /**
   * Producto delete
   */
  export type ProductoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter which Producto to delete.
     */
    where: ProductoWhereUniqueInput
  }

  /**
   * Producto deleteMany
   */
  export type ProductoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Productos to delete
     */
    where?: ProductoWhereInput
    /**
     * Limit how many Productos to delete.
     */
    limit?: number
  }

  /**
   * Producto.detallesPedido
   */
  export type Producto$detallesPedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetallePedido
     */
    select?: DetallePedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetallePedido
     */
    omit?: DetallePedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetallePedidoInclude<ExtArgs> | null
    where?: DetallePedidoWhereInput
    orderBy?: DetallePedidoOrderByWithRelationInput | DetallePedidoOrderByWithRelationInput[]
    cursor?: DetallePedidoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DetallePedidoScalarFieldEnum | DetallePedidoScalarFieldEnum[]
  }

  /**
   * Producto.ProductoTraduccion
   */
  export type Producto$ProductoTraduccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductoTraduccion
     */
    select?: ProductoTraduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductoTraduccion
     */
    omit?: ProductoTraduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoTraduccionInclude<ExtArgs> | null
    where?: ProductoTraduccionWhereInput
    orderBy?: ProductoTraduccionOrderByWithRelationInput | ProductoTraduccionOrderByWithRelationInput[]
    cursor?: ProductoTraduccionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductoTraduccionScalarFieldEnum | ProductoTraduccionScalarFieldEnum[]
  }

  /**
   * Producto without action
   */
  export type ProductoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
  }


  /**
   * Model ProductoTraduccion
   */

  export type AggregateProductoTraduccion = {
    _count: ProductoTraduccionCountAggregateOutputType | null
    _avg: ProductoTraduccionAvgAggregateOutputType | null
    _sum: ProductoTraduccionSumAggregateOutputType | null
    _min: ProductoTraduccionMinAggregateOutputType | null
    _max: ProductoTraduccionMaxAggregateOutputType | null
  }

  export type ProductoTraduccionAvgAggregateOutputType = {
    id_traduccion: number | null
    id_producto: number | null
  }

  export type ProductoTraduccionSumAggregateOutputType = {
    id_traduccion: number | null
    id_producto: number | null
  }

  export type ProductoTraduccionMinAggregateOutputType = {
    id_traduccion: number | null
    id_producto: number | null
    idioma: string | null
    nombre: string | null
    descripcion: string | null
  }

  export type ProductoTraduccionMaxAggregateOutputType = {
    id_traduccion: number | null
    id_producto: number | null
    idioma: string | null
    nombre: string | null
    descripcion: string | null
  }

  export type ProductoTraduccionCountAggregateOutputType = {
    id_traduccion: number
    id_producto: number
    idioma: number
    nombre: number
    descripcion: number
    _all: number
  }


  export type ProductoTraduccionAvgAggregateInputType = {
    id_traduccion?: true
    id_producto?: true
  }

  export type ProductoTraduccionSumAggregateInputType = {
    id_traduccion?: true
    id_producto?: true
  }

  export type ProductoTraduccionMinAggregateInputType = {
    id_traduccion?: true
    id_producto?: true
    idioma?: true
    nombre?: true
    descripcion?: true
  }

  export type ProductoTraduccionMaxAggregateInputType = {
    id_traduccion?: true
    id_producto?: true
    idioma?: true
    nombre?: true
    descripcion?: true
  }

  export type ProductoTraduccionCountAggregateInputType = {
    id_traduccion?: true
    id_producto?: true
    idioma?: true
    nombre?: true
    descripcion?: true
    _all?: true
  }

  export type ProductoTraduccionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductoTraduccion to aggregate.
     */
    where?: ProductoTraduccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductoTraduccions to fetch.
     */
    orderBy?: ProductoTraduccionOrderByWithRelationInput | ProductoTraduccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductoTraduccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductoTraduccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductoTraduccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductoTraduccions
    **/
    _count?: true | ProductoTraduccionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductoTraduccionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductoTraduccionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductoTraduccionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductoTraduccionMaxAggregateInputType
  }

  export type GetProductoTraduccionAggregateType<T extends ProductoTraduccionAggregateArgs> = {
        [P in keyof T & keyof AggregateProductoTraduccion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductoTraduccion[P]>
      : GetScalarType<T[P], AggregateProductoTraduccion[P]>
  }




  export type ProductoTraduccionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductoTraduccionWhereInput
    orderBy?: ProductoTraduccionOrderByWithAggregationInput | ProductoTraduccionOrderByWithAggregationInput[]
    by: ProductoTraduccionScalarFieldEnum[] | ProductoTraduccionScalarFieldEnum
    having?: ProductoTraduccionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductoTraduccionCountAggregateInputType | true
    _avg?: ProductoTraduccionAvgAggregateInputType
    _sum?: ProductoTraduccionSumAggregateInputType
    _min?: ProductoTraduccionMinAggregateInputType
    _max?: ProductoTraduccionMaxAggregateInputType
  }

  export type ProductoTraduccionGroupByOutputType = {
    id_traduccion: number
    id_producto: number
    idioma: string
    nombre: string
    descripcion: string | null
    _count: ProductoTraduccionCountAggregateOutputType | null
    _avg: ProductoTraduccionAvgAggregateOutputType | null
    _sum: ProductoTraduccionSumAggregateOutputType | null
    _min: ProductoTraduccionMinAggregateOutputType | null
    _max: ProductoTraduccionMaxAggregateOutputType | null
  }

  type GetProductoTraduccionGroupByPayload<T extends ProductoTraduccionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductoTraduccionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductoTraduccionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductoTraduccionGroupByOutputType[P]>
            : GetScalarType<T[P], ProductoTraduccionGroupByOutputType[P]>
        }
      >
    >


  export type ProductoTraduccionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_traduccion?: boolean
    id_producto?: boolean
    idioma?: boolean
    nombre?: boolean
    descripcion?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productoTraduccion"]>

  export type ProductoTraduccionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_traduccion?: boolean
    id_producto?: boolean
    idioma?: boolean
    nombre?: boolean
    descripcion?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productoTraduccion"]>

  export type ProductoTraduccionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_traduccion?: boolean
    id_producto?: boolean
    idioma?: boolean
    nombre?: boolean
    descripcion?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productoTraduccion"]>

  export type ProductoTraduccionSelectScalar = {
    id_traduccion?: boolean
    id_producto?: boolean
    idioma?: boolean
    nombre?: boolean
    descripcion?: boolean
  }

  export type ProductoTraduccionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_traduccion" | "id_producto" | "idioma" | "nombre" | "descripcion", ExtArgs["result"]["productoTraduccion"]>
  export type ProductoTraduccionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }
  export type ProductoTraduccionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }
  export type ProductoTraduccionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }

  export type $ProductoTraduccionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductoTraduccion"
    objects: {
      producto: Prisma.$ProductoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_traduccion: number
      id_producto: number
      idioma: string
      nombre: string
      descripcion: string | null
    }, ExtArgs["result"]["productoTraduccion"]>
    composites: {}
  }

  type ProductoTraduccionGetPayload<S extends boolean | null | undefined | ProductoTraduccionDefaultArgs> = $Result.GetResult<Prisma.$ProductoTraduccionPayload, S>

  type ProductoTraduccionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductoTraduccionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductoTraduccionCountAggregateInputType | true
    }

  export interface ProductoTraduccionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductoTraduccion'], meta: { name: 'ProductoTraduccion' } }
    /**
     * Find zero or one ProductoTraduccion that matches the filter.
     * @param {ProductoTraduccionFindUniqueArgs} args - Arguments to find a ProductoTraduccion
     * @example
     * // Get one ProductoTraduccion
     * const productoTraduccion = await prisma.productoTraduccion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductoTraduccionFindUniqueArgs>(args: SelectSubset<T, ProductoTraduccionFindUniqueArgs<ExtArgs>>): Prisma__ProductoTraduccionClient<$Result.GetResult<Prisma.$ProductoTraduccionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductoTraduccion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductoTraduccionFindUniqueOrThrowArgs} args - Arguments to find a ProductoTraduccion
     * @example
     * // Get one ProductoTraduccion
     * const productoTraduccion = await prisma.productoTraduccion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductoTraduccionFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductoTraduccionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductoTraduccionClient<$Result.GetResult<Prisma.$ProductoTraduccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductoTraduccion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoTraduccionFindFirstArgs} args - Arguments to find a ProductoTraduccion
     * @example
     * // Get one ProductoTraduccion
     * const productoTraduccion = await prisma.productoTraduccion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductoTraduccionFindFirstArgs>(args?: SelectSubset<T, ProductoTraduccionFindFirstArgs<ExtArgs>>): Prisma__ProductoTraduccionClient<$Result.GetResult<Prisma.$ProductoTraduccionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductoTraduccion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoTraduccionFindFirstOrThrowArgs} args - Arguments to find a ProductoTraduccion
     * @example
     * // Get one ProductoTraduccion
     * const productoTraduccion = await prisma.productoTraduccion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductoTraduccionFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductoTraduccionFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductoTraduccionClient<$Result.GetResult<Prisma.$ProductoTraduccionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductoTraduccions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoTraduccionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductoTraduccions
     * const productoTraduccions = await prisma.productoTraduccion.findMany()
     * 
     * // Get first 10 ProductoTraduccions
     * const productoTraduccions = await prisma.productoTraduccion.findMany({ take: 10 })
     * 
     * // Only select the `id_traduccion`
     * const productoTraduccionWithId_traduccionOnly = await prisma.productoTraduccion.findMany({ select: { id_traduccion: true } })
     * 
     */
    findMany<T extends ProductoTraduccionFindManyArgs>(args?: SelectSubset<T, ProductoTraduccionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoTraduccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductoTraduccion.
     * @param {ProductoTraduccionCreateArgs} args - Arguments to create a ProductoTraduccion.
     * @example
     * // Create one ProductoTraduccion
     * const ProductoTraduccion = await prisma.productoTraduccion.create({
     *   data: {
     *     // ... data to create a ProductoTraduccion
     *   }
     * })
     * 
     */
    create<T extends ProductoTraduccionCreateArgs>(args: SelectSubset<T, ProductoTraduccionCreateArgs<ExtArgs>>): Prisma__ProductoTraduccionClient<$Result.GetResult<Prisma.$ProductoTraduccionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductoTraduccions.
     * @param {ProductoTraduccionCreateManyArgs} args - Arguments to create many ProductoTraduccions.
     * @example
     * // Create many ProductoTraduccions
     * const productoTraduccion = await prisma.productoTraduccion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductoTraduccionCreateManyArgs>(args?: SelectSubset<T, ProductoTraduccionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductoTraduccions and returns the data saved in the database.
     * @param {ProductoTraduccionCreateManyAndReturnArgs} args - Arguments to create many ProductoTraduccions.
     * @example
     * // Create many ProductoTraduccions
     * const productoTraduccion = await prisma.productoTraduccion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductoTraduccions and only return the `id_traduccion`
     * const productoTraduccionWithId_traduccionOnly = await prisma.productoTraduccion.createManyAndReturn({
     *   select: { id_traduccion: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductoTraduccionCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductoTraduccionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoTraduccionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProductoTraduccion.
     * @param {ProductoTraduccionDeleteArgs} args - Arguments to delete one ProductoTraduccion.
     * @example
     * // Delete one ProductoTraduccion
     * const ProductoTraduccion = await prisma.productoTraduccion.delete({
     *   where: {
     *     // ... filter to delete one ProductoTraduccion
     *   }
     * })
     * 
     */
    delete<T extends ProductoTraduccionDeleteArgs>(args: SelectSubset<T, ProductoTraduccionDeleteArgs<ExtArgs>>): Prisma__ProductoTraduccionClient<$Result.GetResult<Prisma.$ProductoTraduccionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductoTraduccion.
     * @param {ProductoTraduccionUpdateArgs} args - Arguments to update one ProductoTraduccion.
     * @example
     * // Update one ProductoTraduccion
     * const productoTraduccion = await prisma.productoTraduccion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductoTraduccionUpdateArgs>(args: SelectSubset<T, ProductoTraduccionUpdateArgs<ExtArgs>>): Prisma__ProductoTraduccionClient<$Result.GetResult<Prisma.$ProductoTraduccionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductoTraduccions.
     * @param {ProductoTraduccionDeleteManyArgs} args - Arguments to filter ProductoTraduccions to delete.
     * @example
     * // Delete a few ProductoTraduccions
     * const { count } = await prisma.productoTraduccion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductoTraduccionDeleteManyArgs>(args?: SelectSubset<T, ProductoTraduccionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductoTraduccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoTraduccionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductoTraduccions
     * const productoTraduccion = await prisma.productoTraduccion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductoTraduccionUpdateManyArgs>(args: SelectSubset<T, ProductoTraduccionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductoTraduccions and returns the data updated in the database.
     * @param {ProductoTraduccionUpdateManyAndReturnArgs} args - Arguments to update many ProductoTraduccions.
     * @example
     * // Update many ProductoTraduccions
     * const productoTraduccion = await prisma.productoTraduccion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProductoTraduccions and only return the `id_traduccion`
     * const productoTraduccionWithId_traduccionOnly = await prisma.productoTraduccion.updateManyAndReturn({
     *   select: { id_traduccion: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductoTraduccionUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductoTraduccionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoTraduccionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProductoTraduccion.
     * @param {ProductoTraduccionUpsertArgs} args - Arguments to update or create a ProductoTraduccion.
     * @example
     * // Update or create a ProductoTraduccion
     * const productoTraduccion = await prisma.productoTraduccion.upsert({
     *   create: {
     *     // ... data to create a ProductoTraduccion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductoTraduccion we want to update
     *   }
     * })
     */
    upsert<T extends ProductoTraduccionUpsertArgs>(args: SelectSubset<T, ProductoTraduccionUpsertArgs<ExtArgs>>): Prisma__ProductoTraduccionClient<$Result.GetResult<Prisma.$ProductoTraduccionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductoTraduccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoTraduccionCountArgs} args - Arguments to filter ProductoTraduccions to count.
     * @example
     * // Count the number of ProductoTraduccions
     * const count = await prisma.productoTraduccion.count({
     *   where: {
     *     // ... the filter for the ProductoTraduccions we want to count
     *   }
     * })
    **/
    count<T extends ProductoTraduccionCountArgs>(
      args?: Subset<T, ProductoTraduccionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductoTraduccionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductoTraduccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoTraduccionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductoTraduccionAggregateArgs>(args: Subset<T, ProductoTraduccionAggregateArgs>): Prisma.PrismaPromise<GetProductoTraduccionAggregateType<T>>

    /**
     * Group by ProductoTraduccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoTraduccionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductoTraduccionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductoTraduccionGroupByArgs['orderBy'] }
        : { orderBy?: ProductoTraduccionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductoTraduccionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductoTraduccionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductoTraduccion model
   */
  readonly fields: ProductoTraduccionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductoTraduccion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductoTraduccionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    producto<T extends ProductoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductoDefaultArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductoTraduccion model
   */
  interface ProductoTraduccionFieldRefs {
    readonly id_traduccion: FieldRef<"ProductoTraduccion", 'Int'>
    readonly id_producto: FieldRef<"ProductoTraduccion", 'Int'>
    readonly idioma: FieldRef<"ProductoTraduccion", 'String'>
    readonly nombre: FieldRef<"ProductoTraduccion", 'String'>
    readonly descripcion: FieldRef<"ProductoTraduccion", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ProductoTraduccion findUnique
   */
  export type ProductoTraduccionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductoTraduccion
     */
    select?: ProductoTraduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductoTraduccion
     */
    omit?: ProductoTraduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoTraduccionInclude<ExtArgs> | null
    /**
     * Filter, which ProductoTraduccion to fetch.
     */
    where: ProductoTraduccionWhereUniqueInput
  }

  /**
   * ProductoTraduccion findUniqueOrThrow
   */
  export type ProductoTraduccionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductoTraduccion
     */
    select?: ProductoTraduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductoTraduccion
     */
    omit?: ProductoTraduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoTraduccionInclude<ExtArgs> | null
    /**
     * Filter, which ProductoTraduccion to fetch.
     */
    where: ProductoTraduccionWhereUniqueInput
  }

  /**
   * ProductoTraduccion findFirst
   */
  export type ProductoTraduccionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductoTraduccion
     */
    select?: ProductoTraduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductoTraduccion
     */
    omit?: ProductoTraduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoTraduccionInclude<ExtArgs> | null
    /**
     * Filter, which ProductoTraduccion to fetch.
     */
    where?: ProductoTraduccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductoTraduccions to fetch.
     */
    orderBy?: ProductoTraduccionOrderByWithRelationInput | ProductoTraduccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductoTraduccions.
     */
    cursor?: ProductoTraduccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductoTraduccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductoTraduccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductoTraduccions.
     */
    distinct?: ProductoTraduccionScalarFieldEnum | ProductoTraduccionScalarFieldEnum[]
  }

  /**
   * ProductoTraduccion findFirstOrThrow
   */
  export type ProductoTraduccionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductoTraduccion
     */
    select?: ProductoTraduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductoTraduccion
     */
    omit?: ProductoTraduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoTraduccionInclude<ExtArgs> | null
    /**
     * Filter, which ProductoTraduccion to fetch.
     */
    where?: ProductoTraduccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductoTraduccions to fetch.
     */
    orderBy?: ProductoTraduccionOrderByWithRelationInput | ProductoTraduccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductoTraduccions.
     */
    cursor?: ProductoTraduccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductoTraduccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductoTraduccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductoTraduccions.
     */
    distinct?: ProductoTraduccionScalarFieldEnum | ProductoTraduccionScalarFieldEnum[]
  }

  /**
   * ProductoTraduccion findMany
   */
  export type ProductoTraduccionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductoTraduccion
     */
    select?: ProductoTraduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductoTraduccion
     */
    omit?: ProductoTraduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoTraduccionInclude<ExtArgs> | null
    /**
     * Filter, which ProductoTraduccions to fetch.
     */
    where?: ProductoTraduccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductoTraduccions to fetch.
     */
    orderBy?: ProductoTraduccionOrderByWithRelationInput | ProductoTraduccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductoTraduccions.
     */
    cursor?: ProductoTraduccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductoTraduccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductoTraduccions.
     */
    skip?: number
    distinct?: ProductoTraduccionScalarFieldEnum | ProductoTraduccionScalarFieldEnum[]
  }

  /**
   * ProductoTraduccion create
   */
  export type ProductoTraduccionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductoTraduccion
     */
    select?: ProductoTraduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductoTraduccion
     */
    omit?: ProductoTraduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoTraduccionInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductoTraduccion.
     */
    data: XOR<ProductoTraduccionCreateInput, ProductoTraduccionUncheckedCreateInput>
  }

  /**
   * ProductoTraduccion createMany
   */
  export type ProductoTraduccionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductoTraduccions.
     */
    data: ProductoTraduccionCreateManyInput | ProductoTraduccionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductoTraduccion createManyAndReturn
   */
  export type ProductoTraduccionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductoTraduccion
     */
    select?: ProductoTraduccionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductoTraduccion
     */
    omit?: ProductoTraduccionOmit<ExtArgs> | null
    /**
     * The data used to create many ProductoTraduccions.
     */
    data: ProductoTraduccionCreateManyInput | ProductoTraduccionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoTraduccionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductoTraduccion update
   */
  export type ProductoTraduccionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductoTraduccion
     */
    select?: ProductoTraduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductoTraduccion
     */
    omit?: ProductoTraduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoTraduccionInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductoTraduccion.
     */
    data: XOR<ProductoTraduccionUpdateInput, ProductoTraduccionUncheckedUpdateInput>
    /**
     * Choose, which ProductoTraduccion to update.
     */
    where: ProductoTraduccionWhereUniqueInput
  }

  /**
   * ProductoTraduccion updateMany
   */
  export type ProductoTraduccionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductoTraduccions.
     */
    data: XOR<ProductoTraduccionUpdateManyMutationInput, ProductoTraduccionUncheckedUpdateManyInput>
    /**
     * Filter which ProductoTraduccions to update
     */
    where?: ProductoTraduccionWhereInput
    /**
     * Limit how many ProductoTraduccions to update.
     */
    limit?: number
  }

  /**
   * ProductoTraduccion updateManyAndReturn
   */
  export type ProductoTraduccionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductoTraduccion
     */
    select?: ProductoTraduccionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductoTraduccion
     */
    omit?: ProductoTraduccionOmit<ExtArgs> | null
    /**
     * The data used to update ProductoTraduccions.
     */
    data: XOR<ProductoTraduccionUpdateManyMutationInput, ProductoTraduccionUncheckedUpdateManyInput>
    /**
     * Filter which ProductoTraduccions to update
     */
    where?: ProductoTraduccionWhereInput
    /**
     * Limit how many ProductoTraduccions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoTraduccionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductoTraduccion upsert
   */
  export type ProductoTraduccionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductoTraduccion
     */
    select?: ProductoTraduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductoTraduccion
     */
    omit?: ProductoTraduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoTraduccionInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductoTraduccion to update in case it exists.
     */
    where: ProductoTraduccionWhereUniqueInput
    /**
     * In case the ProductoTraduccion found by the `where` argument doesn't exist, create a new ProductoTraduccion with this data.
     */
    create: XOR<ProductoTraduccionCreateInput, ProductoTraduccionUncheckedCreateInput>
    /**
     * In case the ProductoTraduccion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductoTraduccionUpdateInput, ProductoTraduccionUncheckedUpdateInput>
  }

  /**
   * ProductoTraduccion delete
   */
  export type ProductoTraduccionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductoTraduccion
     */
    select?: ProductoTraduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductoTraduccion
     */
    omit?: ProductoTraduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoTraduccionInclude<ExtArgs> | null
    /**
     * Filter which ProductoTraduccion to delete.
     */
    where: ProductoTraduccionWhereUniqueInput
  }

  /**
   * ProductoTraduccion deleteMany
   */
  export type ProductoTraduccionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductoTraduccions to delete
     */
    where?: ProductoTraduccionWhereInput
    /**
     * Limit how many ProductoTraduccions to delete.
     */
    limit?: number
  }

  /**
   * ProductoTraduccion without action
   */
  export type ProductoTraduccionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductoTraduccion
     */
    select?: ProductoTraduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductoTraduccion
     */
    omit?: ProductoTraduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoTraduccionInclude<ExtArgs> | null
  }


  /**
   * Model Pedido
   */

  export type AggregatePedido = {
    _count: PedidoCountAggregateOutputType | null
    _avg: PedidoAvgAggregateOutputType | null
    _sum: PedidoSumAggregateOutputType | null
    _min: PedidoMinAggregateOutputType | null
    _max: PedidoMaxAggregateOutputType | null
  }

  export type PedidoAvgAggregateOutputType = {
    id_pedido: number | null
    id_cliente: number | null
    id_establecimiento: number | null
    total: Decimal | null
  }

  export type PedidoSumAggregateOutputType = {
    id_pedido: number | null
    id_cliente: number | null
    id_establecimiento: number | null
    total: Decimal | null
  }

  export type PedidoMinAggregateOutputType = {
    id_pedido: number | null
    id_cliente: number | null
    id_establecimiento: number | null
    fecha_hora: Date | null
    estado: $Enums.EstadoPedidoGeneral | null
    total: Decimal | null
    metodo_pago: string | null
  }

  export type PedidoMaxAggregateOutputType = {
    id_pedido: number | null
    id_cliente: number | null
    id_establecimiento: number | null
    fecha_hora: Date | null
    estado: $Enums.EstadoPedidoGeneral | null
    total: Decimal | null
    metodo_pago: string | null
  }

  export type PedidoCountAggregateOutputType = {
    id_pedido: number
    id_cliente: number
    id_establecimiento: number
    fecha_hora: number
    estado: number
    total: number
    metodo_pago: number
    _all: number
  }


  export type PedidoAvgAggregateInputType = {
    id_pedido?: true
    id_cliente?: true
    id_establecimiento?: true
    total?: true
  }

  export type PedidoSumAggregateInputType = {
    id_pedido?: true
    id_cliente?: true
    id_establecimiento?: true
    total?: true
  }

  export type PedidoMinAggregateInputType = {
    id_pedido?: true
    id_cliente?: true
    id_establecimiento?: true
    fecha_hora?: true
    estado?: true
    total?: true
    metodo_pago?: true
  }

  export type PedidoMaxAggregateInputType = {
    id_pedido?: true
    id_cliente?: true
    id_establecimiento?: true
    fecha_hora?: true
    estado?: true
    total?: true
    metodo_pago?: true
  }

  export type PedidoCountAggregateInputType = {
    id_pedido?: true
    id_cliente?: true
    id_establecimiento?: true
    fecha_hora?: true
    estado?: true
    total?: true
    metodo_pago?: true
    _all?: true
  }

  export type PedidoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pedido to aggregate.
     */
    where?: PedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pedidos to fetch.
     */
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Pedidos
    **/
    _count?: true | PedidoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PedidoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PedidoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PedidoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PedidoMaxAggregateInputType
  }

  export type GetPedidoAggregateType<T extends PedidoAggregateArgs> = {
        [P in keyof T & keyof AggregatePedido]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePedido[P]>
      : GetScalarType<T[P], AggregatePedido[P]>
  }




  export type PedidoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PedidoWhereInput
    orderBy?: PedidoOrderByWithAggregationInput | PedidoOrderByWithAggregationInput[]
    by: PedidoScalarFieldEnum[] | PedidoScalarFieldEnum
    having?: PedidoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PedidoCountAggregateInputType | true
    _avg?: PedidoAvgAggregateInputType
    _sum?: PedidoSumAggregateInputType
    _min?: PedidoMinAggregateInputType
    _max?: PedidoMaxAggregateInputType
  }

  export type PedidoGroupByOutputType = {
    id_pedido: number
    id_cliente: number | null
    id_establecimiento: number
    fecha_hora: Date
    estado: $Enums.EstadoPedidoGeneral | null
    total: Decimal | null
    metodo_pago: string | null
    _count: PedidoCountAggregateOutputType | null
    _avg: PedidoAvgAggregateOutputType | null
    _sum: PedidoSumAggregateOutputType | null
    _min: PedidoMinAggregateOutputType | null
    _max: PedidoMaxAggregateOutputType | null
  }

  type GetPedidoGroupByPayload<T extends PedidoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PedidoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PedidoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PedidoGroupByOutputType[P]>
            : GetScalarType<T[P], PedidoGroupByOutputType[P]>
        }
      >
    >


  export type PedidoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_pedido?: boolean
    id_cliente?: boolean
    id_establecimiento?: boolean
    fecha_hora?: boolean
    estado?: boolean
    total?: boolean
    metodo_pago?: boolean
    detalles?: boolean | Pedido$detallesArgs<ExtArgs>
    estadosPedido?: boolean | Pedido$estadosPedidoArgs<ExtArgs>
    cliente?: boolean | Pedido$clienteArgs<ExtArgs>
    establecimiento?: boolean | EstablecimientoDefaultArgs<ExtArgs>
    _count?: boolean | PedidoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pedido"]>

  export type PedidoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_pedido?: boolean
    id_cliente?: boolean
    id_establecimiento?: boolean
    fecha_hora?: boolean
    estado?: boolean
    total?: boolean
    metodo_pago?: boolean
    cliente?: boolean | Pedido$clienteArgs<ExtArgs>
    establecimiento?: boolean | EstablecimientoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pedido"]>

  export type PedidoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_pedido?: boolean
    id_cliente?: boolean
    id_establecimiento?: boolean
    fecha_hora?: boolean
    estado?: boolean
    total?: boolean
    metodo_pago?: boolean
    cliente?: boolean | Pedido$clienteArgs<ExtArgs>
    establecimiento?: boolean | EstablecimientoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pedido"]>

  export type PedidoSelectScalar = {
    id_pedido?: boolean
    id_cliente?: boolean
    id_establecimiento?: boolean
    fecha_hora?: boolean
    estado?: boolean
    total?: boolean
    metodo_pago?: boolean
  }

  export type PedidoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_pedido" | "id_cliente" | "id_establecimiento" | "fecha_hora" | "estado" | "total" | "metodo_pago", ExtArgs["result"]["pedido"]>
  export type PedidoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalles?: boolean | Pedido$detallesArgs<ExtArgs>
    estadosPedido?: boolean | Pedido$estadosPedidoArgs<ExtArgs>
    cliente?: boolean | Pedido$clienteArgs<ExtArgs>
    establecimiento?: boolean | EstablecimientoDefaultArgs<ExtArgs>
    _count?: boolean | PedidoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PedidoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | Pedido$clienteArgs<ExtArgs>
    establecimiento?: boolean | EstablecimientoDefaultArgs<ExtArgs>
  }
  export type PedidoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | Pedido$clienteArgs<ExtArgs>
    establecimiento?: boolean | EstablecimientoDefaultArgs<ExtArgs>
  }

  export type $PedidoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Pedido"
    objects: {
      detalles: Prisma.$DetallePedidoPayload<ExtArgs>[]
      estadosPedido: Prisma.$EstadoPedidoPayload<ExtArgs>[]
      cliente: Prisma.$UsuarioPayload<ExtArgs> | null
      establecimiento: Prisma.$EstablecimientoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_pedido: number
      id_cliente: number | null
      id_establecimiento: number
      fecha_hora: Date
      estado: $Enums.EstadoPedidoGeneral | null
      total: Prisma.Decimal | null
      metodo_pago: string | null
    }, ExtArgs["result"]["pedido"]>
    composites: {}
  }

  type PedidoGetPayload<S extends boolean | null | undefined | PedidoDefaultArgs> = $Result.GetResult<Prisma.$PedidoPayload, S>

  type PedidoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PedidoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PedidoCountAggregateInputType | true
    }

  export interface PedidoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Pedido'], meta: { name: 'Pedido' } }
    /**
     * Find zero or one Pedido that matches the filter.
     * @param {PedidoFindUniqueArgs} args - Arguments to find a Pedido
     * @example
     * // Get one Pedido
     * const pedido = await prisma.pedido.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PedidoFindUniqueArgs>(args: SelectSubset<T, PedidoFindUniqueArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pedido that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PedidoFindUniqueOrThrowArgs} args - Arguments to find a Pedido
     * @example
     * // Get one Pedido
     * const pedido = await prisma.pedido.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PedidoFindUniqueOrThrowArgs>(args: SelectSubset<T, PedidoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pedido that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoFindFirstArgs} args - Arguments to find a Pedido
     * @example
     * // Get one Pedido
     * const pedido = await prisma.pedido.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PedidoFindFirstArgs>(args?: SelectSubset<T, PedidoFindFirstArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pedido that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoFindFirstOrThrowArgs} args - Arguments to find a Pedido
     * @example
     * // Get one Pedido
     * const pedido = await prisma.pedido.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PedidoFindFirstOrThrowArgs>(args?: SelectSubset<T, PedidoFindFirstOrThrowArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pedidos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pedidos
     * const pedidos = await prisma.pedido.findMany()
     * 
     * // Get first 10 Pedidos
     * const pedidos = await prisma.pedido.findMany({ take: 10 })
     * 
     * // Only select the `id_pedido`
     * const pedidoWithId_pedidoOnly = await prisma.pedido.findMany({ select: { id_pedido: true } })
     * 
     */
    findMany<T extends PedidoFindManyArgs>(args?: SelectSubset<T, PedidoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pedido.
     * @param {PedidoCreateArgs} args - Arguments to create a Pedido.
     * @example
     * // Create one Pedido
     * const Pedido = await prisma.pedido.create({
     *   data: {
     *     // ... data to create a Pedido
     *   }
     * })
     * 
     */
    create<T extends PedidoCreateArgs>(args: SelectSubset<T, PedidoCreateArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pedidos.
     * @param {PedidoCreateManyArgs} args - Arguments to create many Pedidos.
     * @example
     * // Create many Pedidos
     * const pedido = await prisma.pedido.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PedidoCreateManyArgs>(args?: SelectSubset<T, PedidoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pedidos and returns the data saved in the database.
     * @param {PedidoCreateManyAndReturnArgs} args - Arguments to create many Pedidos.
     * @example
     * // Create many Pedidos
     * const pedido = await prisma.pedido.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pedidos and only return the `id_pedido`
     * const pedidoWithId_pedidoOnly = await prisma.pedido.createManyAndReturn({
     *   select: { id_pedido: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PedidoCreateManyAndReturnArgs>(args?: SelectSubset<T, PedidoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Pedido.
     * @param {PedidoDeleteArgs} args - Arguments to delete one Pedido.
     * @example
     * // Delete one Pedido
     * const Pedido = await prisma.pedido.delete({
     *   where: {
     *     // ... filter to delete one Pedido
     *   }
     * })
     * 
     */
    delete<T extends PedidoDeleteArgs>(args: SelectSubset<T, PedidoDeleteArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pedido.
     * @param {PedidoUpdateArgs} args - Arguments to update one Pedido.
     * @example
     * // Update one Pedido
     * const pedido = await prisma.pedido.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PedidoUpdateArgs>(args: SelectSubset<T, PedidoUpdateArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pedidos.
     * @param {PedidoDeleteManyArgs} args - Arguments to filter Pedidos to delete.
     * @example
     * // Delete a few Pedidos
     * const { count } = await prisma.pedido.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PedidoDeleteManyArgs>(args?: SelectSubset<T, PedidoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pedidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pedidos
     * const pedido = await prisma.pedido.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PedidoUpdateManyArgs>(args: SelectSubset<T, PedidoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pedidos and returns the data updated in the database.
     * @param {PedidoUpdateManyAndReturnArgs} args - Arguments to update many Pedidos.
     * @example
     * // Update many Pedidos
     * const pedido = await prisma.pedido.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pedidos and only return the `id_pedido`
     * const pedidoWithId_pedidoOnly = await prisma.pedido.updateManyAndReturn({
     *   select: { id_pedido: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PedidoUpdateManyAndReturnArgs>(args: SelectSubset<T, PedidoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Pedido.
     * @param {PedidoUpsertArgs} args - Arguments to update or create a Pedido.
     * @example
     * // Update or create a Pedido
     * const pedido = await prisma.pedido.upsert({
     *   create: {
     *     // ... data to create a Pedido
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pedido we want to update
     *   }
     * })
     */
    upsert<T extends PedidoUpsertArgs>(args: SelectSubset<T, PedidoUpsertArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Pedidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoCountArgs} args - Arguments to filter Pedidos to count.
     * @example
     * // Count the number of Pedidos
     * const count = await prisma.pedido.count({
     *   where: {
     *     // ... the filter for the Pedidos we want to count
     *   }
     * })
    **/
    count<T extends PedidoCountArgs>(
      args?: Subset<T, PedidoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PedidoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pedido.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PedidoAggregateArgs>(args: Subset<T, PedidoAggregateArgs>): Prisma.PrismaPromise<GetPedidoAggregateType<T>>

    /**
     * Group by Pedido.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PedidoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PedidoGroupByArgs['orderBy'] }
        : { orderBy?: PedidoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PedidoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPedidoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Pedido model
   */
  readonly fields: PedidoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Pedido.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PedidoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    detalles<T extends Pedido$detallesArgs<ExtArgs> = {}>(args?: Subset<T, Pedido$detallesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetallePedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    estadosPedido<T extends Pedido$estadosPedidoArgs<ExtArgs> = {}>(args?: Subset<T, Pedido$estadosPedidoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadoPedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cliente<T extends Pedido$clienteArgs<ExtArgs> = {}>(args?: Subset<T, Pedido$clienteArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    establecimiento<T extends EstablecimientoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EstablecimientoDefaultArgs<ExtArgs>>): Prisma__EstablecimientoClient<$Result.GetResult<Prisma.$EstablecimientoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Pedido model
   */
  interface PedidoFieldRefs {
    readonly id_pedido: FieldRef<"Pedido", 'Int'>
    readonly id_cliente: FieldRef<"Pedido", 'Int'>
    readonly id_establecimiento: FieldRef<"Pedido", 'Int'>
    readonly fecha_hora: FieldRef<"Pedido", 'DateTime'>
    readonly estado: FieldRef<"Pedido", 'EstadoPedidoGeneral'>
    readonly total: FieldRef<"Pedido", 'Decimal'>
    readonly metodo_pago: FieldRef<"Pedido", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Pedido findUnique
   */
  export type PedidoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter, which Pedido to fetch.
     */
    where: PedidoWhereUniqueInput
  }

  /**
   * Pedido findUniqueOrThrow
   */
  export type PedidoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter, which Pedido to fetch.
     */
    where: PedidoWhereUniqueInput
  }

  /**
   * Pedido findFirst
   */
  export type PedidoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter, which Pedido to fetch.
     */
    where?: PedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pedidos to fetch.
     */
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pedidos.
     */
    cursor?: PedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pedidos.
     */
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * Pedido findFirstOrThrow
   */
  export type PedidoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter, which Pedido to fetch.
     */
    where?: PedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pedidos to fetch.
     */
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pedidos.
     */
    cursor?: PedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pedidos.
     */
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * Pedido findMany
   */
  export type PedidoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter, which Pedidos to fetch.
     */
    where?: PedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pedidos to fetch.
     */
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Pedidos.
     */
    cursor?: PedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pedidos.
     */
    skip?: number
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * Pedido create
   */
  export type PedidoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * The data needed to create a Pedido.
     */
    data: XOR<PedidoCreateInput, PedidoUncheckedCreateInput>
  }

  /**
   * Pedido createMany
   */
  export type PedidoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Pedidos.
     */
    data: PedidoCreateManyInput | PedidoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Pedido createManyAndReturn
   */
  export type PedidoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * The data used to create many Pedidos.
     */
    data: PedidoCreateManyInput | PedidoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pedido update
   */
  export type PedidoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * The data needed to update a Pedido.
     */
    data: XOR<PedidoUpdateInput, PedidoUncheckedUpdateInput>
    /**
     * Choose, which Pedido to update.
     */
    where: PedidoWhereUniqueInput
  }

  /**
   * Pedido updateMany
   */
  export type PedidoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Pedidos.
     */
    data: XOR<PedidoUpdateManyMutationInput, PedidoUncheckedUpdateManyInput>
    /**
     * Filter which Pedidos to update
     */
    where?: PedidoWhereInput
    /**
     * Limit how many Pedidos to update.
     */
    limit?: number
  }

  /**
   * Pedido updateManyAndReturn
   */
  export type PedidoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * The data used to update Pedidos.
     */
    data: XOR<PedidoUpdateManyMutationInput, PedidoUncheckedUpdateManyInput>
    /**
     * Filter which Pedidos to update
     */
    where?: PedidoWhereInput
    /**
     * Limit how many Pedidos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pedido upsert
   */
  export type PedidoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * The filter to search for the Pedido to update in case it exists.
     */
    where: PedidoWhereUniqueInput
    /**
     * In case the Pedido found by the `where` argument doesn't exist, create a new Pedido with this data.
     */
    create: XOR<PedidoCreateInput, PedidoUncheckedCreateInput>
    /**
     * In case the Pedido was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PedidoUpdateInput, PedidoUncheckedUpdateInput>
  }

  /**
   * Pedido delete
   */
  export type PedidoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter which Pedido to delete.
     */
    where: PedidoWhereUniqueInput
  }

  /**
   * Pedido deleteMany
   */
  export type PedidoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pedidos to delete
     */
    where?: PedidoWhereInput
    /**
     * Limit how many Pedidos to delete.
     */
    limit?: number
  }

  /**
   * Pedido.detalles
   */
  export type Pedido$detallesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetallePedido
     */
    select?: DetallePedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetallePedido
     */
    omit?: DetallePedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetallePedidoInclude<ExtArgs> | null
    where?: DetallePedidoWhereInput
    orderBy?: DetallePedidoOrderByWithRelationInput | DetallePedidoOrderByWithRelationInput[]
    cursor?: DetallePedidoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DetallePedidoScalarFieldEnum | DetallePedidoScalarFieldEnum[]
  }

  /**
   * Pedido.estadosPedido
   */
  export type Pedido$estadosPedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPedido
     */
    select?: EstadoPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPedido
     */
    omit?: EstadoPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPedidoInclude<ExtArgs> | null
    where?: EstadoPedidoWhereInput
    orderBy?: EstadoPedidoOrderByWithRelationInput | EstadoPedidoOrderByWithRelationInput[]
    cursor?: EstadoPedidoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EstadoPedidoScalarFieldEnum | EstadoPedidoScalarFieldEnum[]
  }

  /**
   * Pedido.cliente
   */
  export type Pedido$clienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * Pedido without action
   */
  export type PedidoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
  }


  /**
   * Model DetallePedido
   */

  export type AggregateDetallePedido = {
    _count: DetallePedidoCountAggregateOutputType | null
    _avg: DetallePedidoAvgAggregateOutputType | null
    _sum: DetallePedidoSumAggregateOutputType | null
    _min: DetallePedidoMinAggregateOutputType | null
    _max: DetallePedidoMaxAggregateOutputType | null
  }

  export type DetallePedidoAvgAggregateOutputType = {
    id_detalle_pedido: number | null
    id_pedido: number | null
    id_producto: number | null
    cantidad: number | null
  }

  export type DetallePedidoSumAggregateOutputType = {
    id_detalle_pedido: number | null
    id_pedido: number | null
    id_producto: number | null
    cantidad: number | null
  }

  export type DetallePedidoMinAggregateOutputType = {
    id_detalle_pedido: number | null
    id_pedido: number | null
    id_producto: number | null
    cantidad: number | null
    especialidades: string | null
    estado: $Enums.EstadoItemPedido | null
  }

  export type DetallePedidoMaxAggregateOutputType = {
    id_detalle_pedido: number | null
    id_pedido: number | null
    id_producto: number | null
    cantidad: number | null
    especialidades: string | null
    estado: $Enums.EstadoItemPedido | null
  }

  export type DetallePedidoCountAggregateOutputType = {
    id_detalle_pedido: number
    id_pedido: number
    id_producto: number
    cantidad: number
    especialidades: number
    estado: number
    _all: number
  }


  export type DetallePedidoAvgAggregateInputType = {
    id_detalle_pedido?: true
    id_pedido?: true
    id_producto?: true
    cantidad?: true
  }

  export type DetallePedidoSumAggregateInputType = {
    id_detalle_pedido?: true
    id_pedido?: true
    id_producto?: true
    cantidad?: true
  }

  export type DetallePedidoMinAggregateInputType = {
    id_detalle_pedido?: true
    id_pedido?: true
    id_producto?: true
    cantidad?: true
    especialidades?: true
    estado?: true
  }

  export type DetallePedidoMaxAggregateInputType = {
    id_detalle_pedido?: true
    id_pedido?: true
    id_producto?: true
    cantidad?: true
    especialidades?: true
    estado?: true
  }

  export type DetallePedidoCountAggregateInputType = {
    id_detalle_pedido?: true
    id_pedido?: true
    id_producto?: true
    cantidad?: true
    especialidades?: true
    estado?: true
    _all?: true
  }

  export type DetallePedidoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DetallePedido to aggregate.
     */
    where?: DetallePedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetallePedidos to fetch.
     */
    orderBy?: DetallePedidoOrderByWithRelationInput | DetallePedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DetallePedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetallePedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetallePedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DetallePedidos
    **/
    _count?: true | DetallePedidoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DetallePedidoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DetallePedidoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DetallePedidoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DetallePedidoMaxAggregateInputType
  }

  export type GetDetallePedidoAggregateType<T extends DetallePedidoAggregateArgs> = {
        [P in keyof T & keyof AggregateDetallePedido]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDetallePedido[P]>
      : GetScalarType<T[P], AggregateDetallePedido[P]>
  }




  export type DetallePedidoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DetallePedidoWhereInput
    orderBy?: DetallePedidoOrderByWithAggregationInput | DetallePedidoOrderByWithAggregationInput[]
    by: DetallePedidoScalarFieldEnum[] | DetallePedidoScalarFieldEnum
    having?: DetallePedidoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DetallePedidoCountAggregateInputType | true
    _avg?: DetallePedidoAvgAggregateInputType
    _sum?: DetallePedidoSumAggregateInputType
    _min?: DetallePedidoMinAggregateInputType
    _max?: DetallePedidoMaxAggregateInputType
  }

  export type DetallePedidoGroupByOutputType = {
    id_detalle_pedido: number
    id_pedido: number
    id_producto: number
    cantidad: number
    especialidades: string | null
    estado: $Enums.EstadoItemPedido | null
    _count: DetallePedidoCountAggregateOutputType | null
    _avg: DetallePedidoAvgAggregateOutputType | null
    _sum: DetallePedidoSumAggregateOutputType | null
    _min: DetallePedidoMinAggregateOutputType | null
    _max: DetallePedidoMaxAggregateOutputType | null
  }

  type GetDetallePedidoGroupByPayload<T extends DetallePedidoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DetallePedidoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DetallePedidoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DetallePedidoGroupByOutputType[P]>
            : GetScalarType<T[P], DetallePedidoGroupByOutputType[P]>
        }
      >
    >


  export type DetallePedidoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_detalle_pedido?: boolean
    id_pedido?: boolean
    id_producto?: boolean
    cantidad?: boolean
    especialidades?: boolean
    estado?: boolean
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detallePedido"]>

  export type DetallePedidoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_detalle_pedido?: boolean
    id_pedido?: boolean
    id_producto?: boolean
    cantidad?: boolean
    especialidades?: boolean
    estado?: boolean
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detallePedido"]>

  export type DetallePedidoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_detalle_pedido?: boolean
    id_pedido?: boolean
    id_producto?: boolean
    cantidad?: boolean
    especialidades?: boolean
    estado?: boolean
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detallePedido"]>

  export type DetallePedidoSelectScalar = {
    id_detalle_pedido?: boolean
    id_pedido?: boolean
    id_producto?: boolean
    cantidad?: boolean
    especialidades?: boolean
    estado?: boolean
  }

  export type DetallePedidoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_detalle_pedido" | "id_pedido" | "id_producto" | "cantidad" | "especialidades" | "estado", ExtArgs["result"]["detallePedido"]>
  export type DetallePedidoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }
  export type DetallePedidoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }
  export type DetallePedidoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }

  export type $DetallePedidoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DetallePedido"
    objects: {
      pedido: Prisma.$PedidoPayload<ExtArgs>
      producto: Prisma.$ProductoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_detalle_pedido: number
      id_pedido: number
      id_producto: number
      cantidad: number
      especialidades: string | null
      estado: $Enums.EstadoItemPedido | null
    }, ExtArgs["result"]["detallePedido"]>
    composites: {}
  }

  type DetallePedidoGetPayload<S extends boolean | null | undefined | DetallePedidoDefaultArgs> = $Result.GetResult<Prisma.$DetallePedidoPayload, S>

  type DetallePedidoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DetallePedidoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DetallePedidoCountAggregateInputType | true
    }

  export interface DetallePedidoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DetallePedido'], meta: { name: 'DetallePedido' } }
    /**
     * Find zero or one DetallePedido that matches the filter.
     * @param {DetallePedidoFindUniqueArgs} args - Arguments to find a DetallePedido
     * @example
     * // Get one DetallePedido
     * const detallePedido = await prisma.detallePedido.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DetallePedidoFindUniqueArgs>(args: SelectSubset<T, DetallePedidoFindUniqueArgs<ExtArgs>>): Prisma__DetallePedidoClient<$Result.GetResult<Prisma.$DetallePedidoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one DetallePedido that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DetallePedidoFindUniqueOrThrowArgs} args - Arguments to find a DetallePedido
     * @example
     * // Get one DetallePedido
     * const detallePedido = await prisma.detallePedido.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DetallePedidoFindUniqueOrThrowArgs>(args: SelectSubset<T, DetallePedidoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DetallePedidoClient<$Result.GetResult<Prisma.$DetallePedidoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DetallePedido that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetallePedidoFindFirstArgs} args - Arguments to find a DetallePedido
     * @example
     * // Get one DetallePedido
     * const detallePedido = await prisma.detallePedido.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DetallePedidoFindFirstArgs>(args?: SelectSubset<T, DetallePedidoFindFirstArgs<ExtArgs>>): Prisma__DetallePedidoClient<$Result.GetResult<Prisma.$DetallePedidoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DetallePedido that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetallePedidoFindFirstOrThrowArgs} args - Arguments to find a DetallePedido
     * @example
     * // Get one DetallePedido
     * const detallePedido = await prisma.detallePedido.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DetallePedidoFindFirstOrThrowArgs>(args?: SelectSubset<T, DetallePedidoFindFirstOrThrowArgs<ExtArgs>>): Prisma__DetallePedidoClient<$Result.GetResult<Prisma.$DetallePedidoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more DetallePedidos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetallePedidoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DetallePedidos
     * const detallePedidos = await prisma.detallePedido.findMany()
     * 
     * // Get first 10 DetallePedidos
     * const detallePedidos = await prisma.detallePedido.findMany({ take: 10 })
     * 
     * // Only select the `id_detalle_pedido`
     * const detallePedidoWithId_detalle_pedidoOnly = await prisma.detallePedido.findMany({ select: { id_detalle_pedido: true } })
     * 
     */
    findMany<T extends DetallePedidoFindManyArgs>(args?: SelectSubset<T, DetallePedidoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetallePedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a DetallePedido.
     * @param {DetallePedidoCreateArgs} args - Arguments to create a DetallePedido.
     * @example
     * // Create one DetallePedido
     * const DetallePedido = await prisma.detallePedido.create({
     *   data: {
     *     // ... data to create a DetallePedido
     *   }
     * })
     * 
     */
    create<T extends DetallePedidoCreateArgs>(args: SelectSubset<T, DetallePedidoCreateArgs<ExtArgs>>): Prisma__DetallePedidoClient<$Result.GetResult<Prisma.$DetallePedidoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many DetallePedidos.
     * @param {DetallePedidoCreateManyArgs} args - Arguments to create many DetallePedidos.
     * @example
     * // Create many DetallePedidos
     * const detallePedido = await prisma.detallePedido.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DetallePedidoCreateManyArgs>(args?: SelectSubset<T, DetallePedidoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DetallePedidos and returns the data saved in the database.
     * @param {DetallePedidoCreateManyAndReturnArgs} args - Arguments to create many DetallePedidos.
     * @example
     * // Create many DetallePedidos
     * const detallePedido = await prisma.detallePedido.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DetallePedidos and only return the `id_detalle_pedido`
     * const detallePedidoWithId_detalle_pedidoOnly = await prisma.detallePedido.createManyAndReturn({
     *   select: { id_detalle_pedido: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DetallePedidoCreateManyAndReturnArgs>(args?: SelectSubset<T, DetallePedidoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetallePedidoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a DetallePedido.
     * @param {DetallePedidoDeleteArgs} args - Arguments to delete one DetallePedido.
     * @example
     * // Delete one DetallePedido
     * const DetallePedido = await prisma.detallePedido.delete({
     *   where: {
     *     // ... filter to delete one DetallePedido
     *   }
     * })
     * 
     */
    delete<T extends DetallePedidoDeleteArgs>(args: SelectSubset<T, DetallePedidoDeleteArgs<ExtArgs>>): Prisma__DetallePedidoClient<$Result.GetResult<Prisma.$DetallePedidoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one DetallePedido.
     * @param {DetallePedidoUpdateArgs} args - Arguments to update one DetallePedido.
     * @example
     * // Update one DetallePedido
     * const detallePedido = await prisma.detallePedido.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DetallePedidoUpdateArgs>(args: SelectSubset<T, DetallePedidoUpdateArgs<ExtArgs>>): Prisma__DetallePedidoClient<$Result.GetResult<Prisma.$DetallePedidoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more DetallePedidos.
     * @param {DetallePedidoDeleteManyArgs} args - Arguments to filter DetallePedidos to delete.
     * @example
     * // Delete a few DetallePedidos
     * const { count } = await prisma.detallePedido.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DetallePedidoDeleteManyArgs>(args?: SelectSubset<T, DetallePedidoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DetallePedidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetallePedidoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DetallePedidos
     * const detallePedido = await prisma.detallePedido.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DetallePedidoUpdateManyArgs>(args: SelectSubset<T, DetallePedidoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DetallePedidos and returns the data updated in the database.
     * @param {DetallePedidoUpdateManyAndReturnArgs} args - Arguments to update many DetallePedidos.
     * @example
     * // Update many DetallePedidos
     * const detallePedido = await prisma.detallePedido.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more DetallePedidos and only return the `id_detalle_pedido`
     * const detallePedidoWithId_detalle_pedidoOnly = await prisma.detallePedido.updateManyAndReturn({
     *   select: { id_detalle_pedido: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DetallePedidoUpdateManyAndReturnArgs>(args: SelectSubset<T, DetallePedidoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetallePedidoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one DetallePedido.
     * @param {DetallePedidoUpsertArgs} args - Arguments to update or create a DetallePedido.
     * @example
     * // Update or create a DetallePedido
     * const detallePedido = await prisma.detallePedido.upsert({
     *   create: {
     *     // ... data to create a DetallePedido
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DetallePedido we want to update
     *   }
     * })
     */
    upsert<T extends DetallePedidoUpsertArgs>(args: SelectSubset<T, DetallePedidoUpsertArgs<ExtArgs>>): Prisma__DetallePedidoClient<$Result.GetResult<Prisma.$DetallePedidoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of DetallePedidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetallePedidoCountArgs} args - Arguments to filter DetallePedidos to count.
     * @example
     * // Count the number of DetallePedidos
     * const count = await prisma.detallePedido.count({
     *   where: {
     *     // ... the filter for the DetallePedidos we want to count
     *   }
     * })
    **/
    count<T extends DetallePedidoCountArgs>(
      args?: Subset<T, DetallePedidoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DetallePedidoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DetallePedido.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetallePedidoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DetallePedidoAggregateArgs>(args: Subset<T, DetallePedidoAggregateArgs>): Prisma.PrismaPromise<GetDetallePedidoAggregateType<T>>

    /**
     * Group by DetallePedido.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetallePedidoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DetallePedidoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DetallePedidoGroupByArgs['orderBy'] }
        : { orderBy?: DetallePedidoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DetallePedidoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDetallePedidoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DetallePedido model
   */
  readonly fields: DetallePedidoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DetallePedido.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DetallePedidoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pedido<T extends PedidoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PedidoDefaultArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    producto<T extends ProductoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductoDefaultArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DetallePedido model
   */
  interface DetallePedidoFieldRefs {
    readonly id_detalle_pedido: FieldRef<"DetallePedido", 'Int'>
    readonly id_pedido: FieldRef<"DetallePedido", 'Int'>
    readonly id_producto: FieldRef<"DetallePedido", 'Int'>
    readonly cantidad: FieldRef<"DetallePedido", 'Int'>
    readonly especialidades: FieldRef<"DetallePedido", 'String'>
    readonly estado: FieldRef<"DetallePedido", 'EstadoItemPedido'>
  }
    

  // Custom InputTypes
  /**
   * DetallePedido findUnique
   */
  export type DetallePedidoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetallePedido
     */
    select?: DetallePedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetallePedido
     */
    omit?: DetallePedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetallePedidoInclude<ExtArgs> | null
    /**
     * Filter, which DetallePedido to fetch.
     */
    where: DetallePedidoWhereUniqueInput
  }

  /**
   * DetallePedido findUniqueOrThrow
   */
  export type DetallePedidoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetallePedido
     */
    select?: DetallePedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetallePedido
     */
    omit?: DetallePedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetallePedidoInclude<ExtArgs> | null
    /**
     * Filter, which DetallePedido to fetch.
     */
    where: DetallePedidoWhereUniqueInput
  }

  /**
   * DetallePedido findFirst
   */
  export type DetallePedidoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetallePedido
     */
    select?: DetallePedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetallePedido
     */
    omit?: DetallePedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetallePedidoInclude<ExtArgs> | null
    /**
     * Filter, which DetallePedido to fetch.
     */
    where?: DetallePedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetallePedidos to fetch.
     */
    orderBy?: DetallePedidoOrderByWithRelationInput | DetallePedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DetallePedidos.
     */
    cursor?: DetallePedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetallePedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetallePedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DetallePedidos.
     */
    distinct?: DetallePedidoScalarFieldEnum | DetallePedidoScalarFieldEnum[]
  }

  /**
   * DetallePedido findFirstOrThrow
   */
  export type DetallePedidoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetallePedido
     */
    select?: DetallePedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetallePedido
     */
    omit?: DetallePedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetallePedidoInclude<ExtArgs> | null
    /**
     * Filter, which DetallePedido to fetch.
     */
    where?: DetallePedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetallePedidos to fetch.
     */
    orderBy?: DetallePedidoOrderByWithRelationInput | DetallePedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DetallePedidos.
     */
    cursor?: DetallePedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetallePedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetallePedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DetallePedidos.
     */
    distinct?: DetallePedidoScalarFieldEnum | DetallePedidoScalarFieldEnum[]
  }

  /**
   * DetallePedido findMany
   */
  export type DetallePedidoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetallePedido
     */
    select?: DetallePedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetallePedido
     */
    omit?: DetallePedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetallePedidoInclude<ExtArgs> | null
    /**
     * Filter, which DetallePedidos to fetch.
     */
    where?: DetallePedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetallePedidos to fetch.
     */
    orderBy?: DetallePedidoOrderByWithRelationInput | DetallePedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DetallePedidos.
     */
    cursor?: DetallePedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetallePedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetallePedidos.
     */
    skip?: number
    distinct?: DetallePedidoScalarFieldEnum | DetallePedidoScalarFieldEnum[]
  }

  /**
   * DetallePedido create
   */
  export type DetallePedidoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetallePedido
     */
    select?: DetallePedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetallePedido
     */
    omit?: DetallePedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetallePedidoInclude<ExtArgs> | null
    /**
     * The data needed to create a DetallePedido.
     */
    data: XOR<DetallePedidoCreateInput, DetallePedidoUncheckedCreateInput>
  }

  /**
   * DetallePedido createMany
   */
  export type DetallePedidoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DetallePedidos.
     */
    data: DetallePedidoCreateManyInput | DetallePedidoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DetallePedido createManyAndReturn
   */
  export type DetallePedidoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetallePedido
     */
    select?: DetallePedidoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DetallePedido
     */
    omit?: DetallePedidoOmit<ExtArgs> | null
    /**
     * The data used to create many DetallePedidos.
     */
    data: DetallePedidoCreateManyInput | DetallePedidoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetallePedidoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DetallePedido update
   */
  export type DetallePedidoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetallePedido
     */
    select?: DetallePedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetallePedido
     */
    omit?: DetallePedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetallePedidoInclude<ExtArgs> | null
    /**
     * The data needed to update a DetallePedido.
     */
    data: XOR<DetallePedidoUpdateInput, DetallePedidoUncheckedUpdateInput>
    /**
     * Choose, which DetallePedido to update.
     */
    where: DetallePedidoWhereUniqueInput
  }

  /**
   * DetallePedido updateMany
   */
  export type DetallePedidoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DetallePedidos.
     */
    data: XOR<DetallePedidoUpdateManyMutationInput, DetallePedidoUncheckedUpdateManyInput>
    /**
     * Filter which DetallePedidos to update
     */
    where?: DetallePedidoWhereInput
    /**
     * Limit how many DetallePedidos to update.
     */
    limit?: number
  }

  /**
   * DetallePedido updateManyAndReturn
   */
  export type DetallePedidoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetallePedido
     */
    select?: DetallePedidoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DetallePedido
     */
    omit?: DetallePedidoOmit<ExtArgs> | null
    /**
     * The data used to update DetallePedidos.
     */
    data: XOR<DetallePedidoUpdateManyMutationInput, DetallePedidoUncheckedUpdateManyInput>
    /**
     * Filter which DetallePedidos to update
     */
    where?: DetallePedidoWhereInput
    /**
     * Limit how many DetallePedidos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetallePedidoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * DetallePedido upsert
   */
  export type DetallePedidoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetallePedido
     */
    select?: DetallePedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetallePedido
     */
    omit?: DetallePedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetallePedidoInclude<ExtArgs> | null
    /**
     * The filter to search for the DetallePedido to update in case it exists.
     */
    where: DetallePedidoWhereUniqueInput
    /**
     * In case the DetallePedido found by the `where` argument doesn't exist, create a new DetallePedido with this data.
     */
    create: XOR<DetallePedidoCreateInput, DetallePedidoUncheckedCreateInput>
    /**
     * In case the DetallePedido was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DetallePedidoUpdateInput, DetallePedidoUncheckedUpdateInput>
  }

  /**
   * DetallePedido delete
   */
  export type DetallePedidoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetallePedido
     */
    select?: DetallePedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetallePedido
     */
    omit?: DetallePedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetallePedidoInclude<ExtArgs> | null
    /**
     * Filter which DetallePedido to delete.
     */
    where: DetallePedidoWhereUniqueInput
  }

  /**
   * DetallePedido deleteMany
   */
  export type DetallePedidoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DetallePedidos to delete
     */
    where?: DetallePedidoWhereInput
    /**
     * Limit how many DetallePedidos to delete.
     */
    limit?: number
  }

  /**
   * DetallePedido without action
   */
  export type DetallePedidoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetallePedido
     */
    select?: DetallePedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetallePedido
     */
    omit?: DetallePedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetallePedidoInclude<ExtArgs> | null
  }


  /**
   * Model EstadoPedido
   */

  export type AggregateEstadoPedido = {
    _count: EstadoPedidoCountAggregateOutputType | null
    _avg: EstadoPedidoAvgAggregateOutputType | null
    _sum: EstadoPedidoSumAggregateOutputType | null
    _min: EstadoPedidoMinAggregateOutputType | null
    _max: EstadoPedidoMaxAggregateOutputType | null
  }

  export type EstadoPedidoAvgAggregateOutputType = {
    id_estado_pedido: number | null
    id_pedido: number | null
    id_usuario: number | null
  }

  export type EstadoPedidoSumAggregateOutputType = {
    id_estado_pedido: number | null
    id_pedido: number | null
    id_usuario: number | null
  }

  export type EstadoPedidoMinAggregateOutputType = {
    id_estado_pedido: number | null
    id_pedido: number | null
    id_usuario: number | null
    estado: $Enums.EstadoPedidoGeneral | null
    fecha_hora: Date | null
  }

  export type EstadoPedidoMaxAggregateOutputType = {
    id_estado_pedido: number | null
    id_pedido: number | null
    id_usuario: number | null
    estado: $Enums.EstadoPedidoGeneral | null
    fecha_hora: Date | null
  }

  export type EstadoPedidoCountAggregateOutputType = {
    id_estado_pedido: number
    id_pedido: number
    id_usuario: number
    estado: number
    fecha_hora: number
    _all: number
  }


  export type EstadoPedidoAvgAggregateInputType = {
    id_estado_pedido?: true
    id_pedido?: true
    id_usuario?: true
  }

  export type EstadoPedidoSumAggregateInputType = {
    id_estado_pedido?: true
    id_pedido?: true
    id_usuario?: true
  }

  export type EstadoPedidoMinAggregateInputType = {
    id_estado_pedido?: true
    id_pedido?: true
    id_usuario?: true
    estado?: true
    fecha_hora?: true
  }

  export type EstadoPedidoMaxAggregateInputType = {
    id_estado_pedido?: true
    id_pedido?: true
    id_usuario?: true
    estado?: true
    fecha_hora?: true
  }

  export type EstadoPedidoCountAggregateInputType = {
    id_estado_pedido?: true
    id_pedido?: true
    id_usuario?: true
    estado?: true
    fecha_hora?: true
    _all?: true
  }

  export type EstadoPedidoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EstadoPedido to aggregate.
     */
    where?: EstadoPedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadoPedidos to fetch.
     */
    orderBy?: EstadoPedidoOrderByWithRelationInput | EstadoPedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EstadoPedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadoPedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadoPedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EstadoPedidos
    **/
    _count?: true | EstadoPedidoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EstadoPedidoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EstadoPedidoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EstadoPedidoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EstadoPedidoMaxAggregateInputType
  }

  export type GetEstadoPedidoAggregateType<T extends EstadoPedidoAggregateArgs> = {
        [P in keyof T & keyof AggregateEstadoPedido]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstadoPedido[P]>
      : GetScalarType<T[P], AggregateEstadoPedido[P]>
  }




  export type EstadoPedidoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EstadoPedidoWhereInput
    orderBy?: EstadoPedidoOrderByWithAggregationInput | EstadoPedidoOrderByWithAggregationInput[]
    by: EstadoPedidoScalarFieldEnum[] | EstadoPedidoScalarFieldEnum
    having?: EstadoPedidoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EstadoPedidoCountAggregateInputType | true
    _avg?: EstadoPedidoAvgAggregateInputType
    _sum?: EstadoPedidoSumAggregateInputType
    _min?: EstadoPedidoMinAggregateInputType
    _max?: EstadoPedidoMaxAggregateInputType
  }

  export type EstadoPedidoGroupByOutputType = {
    id_estado_pedido: number
    id_pedido: number
    id_usuario: number | null
    estado: $Enums.EstadoPedidoGeneral
    fecha_hora: Date
    _count: EstadoPedidoCountAggregateOutputType | null
    _avg: EstadoPedidoAvgAggregateOutputType | null
    _sum: EstadoPedidoSumAggregateOutputType | null
    _min: EstadoPedidoMinAggregateOutputType | null
    _max: EstadoPedidoMaxAggregateOutputType | null
  }

  type GetEstadoPedidoGroupByPayload<T extends EstadoPedidoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EstadoPedidoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EstadoPedidoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EstadoPedidoGroupByOutputType[P]>
            : GetScalarType<T[P], EstadoPedidoGroupByOutputType[P]>
        }
      >
    >


  export type EstadoPedidoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_estado_pedido?: boolean
    id_pedido?: boolean
    id_usuario?: boolean
    estado?: boolean
    fecha_hora?: boolean
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
    usuario?: boolean | EstadoPedido$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["estadoPedido"]>

  export type EstadoPedidoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_estado_pedido?: boolean
    id_pedido?: boolean
    id_usuario?: boolean
    estado?: boolean
    fecha_hora?: boolean
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
    usuario?: boolean | EstadoPedido$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["estadoPedido"]>

  export type EstadoPedidoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_estado_pedido?: boolean
    id_pedido?: boolean
    id_usuario?: boolean
    estado?: boolean
    fecha_hora?: boolean
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
    usuario?: boolean | EstadoPedido$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["estadoPedido"]>

  export type EstadoPedidoSelectScalar = {
    id_estado_pedido?: boolean
    id_pedido?: boolean
    id_usuario?: boolean
    estado?: boolean
    fecha_hora?: boolean
  }

  export type EstadoPedidoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_estado_pedido" | "id_pedido" | "id_usuario" | "estado" | "fecha_hora", ExtArgs["result"]["estadoPedido"]>
  export type EstadoPedidoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
    usuario?: boolean | EstadoPedido$usuarioArgs<ExtArgs>
  }
  export type EstadoPedidoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
    usuario?: boolean | EstadoPedido$usuarioArgs<ExtArgs>
  }
  export type EstadoPedidoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
    usuario?: boolean | EstadoPedido$usuarioArgs<ExtArgs>
  }

  export type $EstadoPedidoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EstadoPedido"
    objects: {
      pedido: Prisma.$PedidoPayload<ExtArgs>
      usuario: Prisma.$UsuarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_estado_pedido: number
      id_pedido: number
      id_usuario: number | null
      estado: $Enums.EstadoPedidoGeneral
      fecha_hora: Date
    }, ExtArgs["result"]["estadoPedido"]>
    composites: {}
  }

  type EstadoPedidoGetPayload<S extends boolean | null | undefined | EstadoPedidoDefaultArgs> = $Result.GetResult<Prisma.$EstadoPedidoPayload, S>

  type EstadoPedidoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EstadoPedidoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EstadoPedidoCountAggregateInputType | true
    }

  export interface EstadoPedidoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EstadoPedido'], meta: { name: 'EstadoPedido' } }
    /**
     * Find zero or one EstadoPedido that matches the filter.
     * @param {EstadoPedidoFindUniqueArgs} args - Arguments to find a EstadoPedido
     * @example
     * // Get one EstadoPedido
     * const estadoPedido = await prisma.estadoPedido.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EstadoPedidoFindUniqueArgs>(args: SelectSubset<T, EstadoPedidoFindUniqueArgs<ExtArgs>>): Prisma__EstadoPedidoClient<$Result.GetResult<Prisma.$EstadoPedidoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EstadoPedido that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EstadoPedidoFindUniqueOrThrowArgs} args - Arguments to find a EstadoPedido
     * @example
     * // Get one EstadoPedido
     * const estadoPedido = await prisma.estadoPedido.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EstadoPedidoFindUniqueOrThrowArgs>(args: SelectSubset<T, EstadoPedidoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EstadoPedidoClient<$Result.GetResult<Prisma.$EstadoPedidoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EstadoPedido that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoPedidoFindFirstArgs} args - Arguments to find a EstadoPedido
     * @example
     * // Get one EstadoPedido
     * const estadoPedido = await prisma.estadoPedido.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EstadoPedidoFindFirstArgs>(args?: SelectSubset<T, EstadoPedidoFindFirstArgs<ExtArgs>>): Prisma__EstadoPedidoClient<$Result.GetResult<Prisma.$EstadoPedidoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EstadoPedido that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoPedidoFindFirstOrThrowArgs} args - Arguments to find a EstadoPedido
     * @example
     * // Get one EstadoPedido
     * const estadoPedido = await prisma.estadoPedido.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EstadoPedidoFindFirstOrThrowArgs>(args?: SelectSubset<T, EstadoPedidoFindFirstOrThrowArgs<ExtArgs>>): Prisma__EstadoPedidoClient<$Result.GetResult<Prisma.$EstadoPedidoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EstadoPedidos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoPedidoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EstadoPedidos
     * const estadoPedidos = await prisma.estadoPedido.findMany()
     * 
     * // Get first 10 EstadoPedidos
     * const estadoPedidos = await prisma.estadoPedido.findMany({ take: 10 })
     * 
     * // Only select the `id_estado_pedido`
     * const estadoPedidoWithId_estado_pedidoOnly = await prisma.estadoPedido.findMany({ select: { id_estado_pedido: true } })
     * 
     */
    findMany<T extends EstadoPedidoFindManyArgs>(args?: SelectSubset<T, EstadoPedidoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadoPedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EstadoPedido.
     * @param {EstadoPedidoCreateArgs} args - Arguments to create a EstadoPedido.
     * @example
     * // Create one EstadoPedido
     * const EstadoPedido = await prisma.estadoPedido.create({
     *   data: {
     *     // ... data to create a EstadoPedido
     *   }
     * })
     * 
     */
    create<T extends EstadoPedidoCreateArgs>(args: SelectSubset<T, EstadoPedidoCreateArgs<ExtArgs>>): Prisma__EstadoPedidoClient<$Result.GetResult<Prisma.$EstadoPedidoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EstadoPedidos.
     * @param {EstadoPedidoCreateManyArgs} args - Arguments to create many EstadoPedidos.
     * @example
     * // Create many EstadoPedidos
     * const estadoPedido = await prisma.estadoPedido.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EstadoPedidoCreateManyArgs>(args?: SelectSubset<T, EstadoPedidoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EstadoPedidos and returns the data saved in the database.
     * @param {EstadoPedidoCreateManyAndReturnArgs} args - Arguments to create many EstadoPedidos.
     * @example
     * // Create many EstadoPedidos
     * const estadoPedido = await prisma.estadoPedido.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EstadoPedidos and only return the `id_estado_pedido`
     * const estadoPedidoWithId_estado_pedidoOnly = await prisma.estadoPedido.createManyAndReturn({
     *   select: { id_estado_pedido: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EstadoPedidoCreateManyAndReturnArgs>(args?: SelectSubset<T, EstadoPedidoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadoPedidoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EstadoPedido.
     * @param {EstadoPedidoDeleteArgs} args - Arguments to delete one EstadoPedido.
     * @example
     * // Delete one EstadoPedido
     * const EstadoPedido = await prisma.estadoPedido.delete({
     *   where: {
     *     // ... filter to delete one EstadoPedido
     *   }
     * })
     * 
     */
    delete<T extends EstadoPedidoDeleteArgs>(args: SelectSubset<T, EstadoPedidoDeleteArgs<ExtArgs>>): Prisma__EstadoPedidoClient<$Result.GetResult<Prisma.$EstadoPedidoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EstadoPedido.
     * @param {EstadoPedidoUpdateArgs} args - Arguments to update one EstadoPedido.
     * @example
     * // Update one EstadoPedido
     * const estadoPedido = await prisma.estadoPedido.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EstadoPedidoUpdateArgs>(args: SelectSubset<T, EstadoPedidoUpdateArgs<ExtArgs>>): Prisma__EstadoPedidoClient<$Result.GetResult<Prisma.$EstadoPedidoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EstadoPedidos.
     * @param {EstadoPedidoDeleteManyArgs} args - Arguments to filter EstadoPedidos to delete.
     * @example
     * // Delete a few EstadoPedidos
     * const { count } = await prisma.estadoPedido.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EstadoPedidoDeleteManyArgs>(args?: SelectSubset<T, EstadoPedidoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EstadoPedidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoPedidoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EstadoPedidos
     * const estadoPedido = await prisma.estadoPedido.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EstadoPedidoUpdateManyArgs>(args: SelectSubset<T, EstadoPedidoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EstadoPedidos and returns the data updated in the database.
     * @param {EstadoPedidoUpdateManyAndReturnArgs} args - Arguments to update many EstadoPedidos.
     * @example
     * // Update many EstadoPedidos
     * const estadoPedido = await prisma.estadoPedido.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EstadoPedidos and only return the `id_estado_pedido`
     * const estadoPedidoWithId_estado_pedidoOnly = await prisma.estadoPedido.updateManyAndReturn({
     *   select: { id_estado_pedido: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EstadoPedidoUpdateManyAndReturnArgs>(args: SelectSubset<T, EstadoPedidoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadoPedidoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EstadoPedido.
     * @param {EstadoPedidoUpsertArgs} args - Arguments to update or create a EstadoPedido.
     * @example
     * // Update or create a EstadoPedido
     * const estadoPedido = await prisma.estadoPedido.upsert({
     *   create: {
     *     // ... data to create a EstadoPedido
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EstadoPedido we want to update
     *   }
     * })
     */
    upsert<T extends EstadoPedidoUpsertArgs>(args: SelectSubset<T, EstadoPedidoUpsertArgs<ExtArgs>>): Prisma__EstadoPedidoClient<$Result.GetResult<Prisma.$EstadoPedidoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EstadoPedidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoPedidoCountArgs} args - Arguments to filter EstadoPedidos to count.
     * @example
     * // Count the number of EstadoPedidos
     * const count = await prisma.estadoPedido.count({
     *   where: {
     *     // ... the filter for the EstadoPedidos we want to count
     *   }
     * })
    **/
    count<T extends EstadoPedidoCountArgs>(
      args?: Subset<T, EstadoPedidoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EstadoPedidoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EstadoPedido.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoPedidoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EstadoPedidoAggregateArgs>(args: Subset<T, EstadoPedidoAggregateArgs>): Prisma.PrismaPromise<GetEstadoPedidoAggregateType<T>>

    /**
     * Group by EstadoPedido.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoPedidoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EstadoPedidoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EstadoPedidoGroupByArgs['orderBy'] }
        : { orderBy?: EstadoPedidoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EstadoPedidoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstadoPedidoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EstadoPedido model
   */
  readonly fields: EstadoPedidoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EstadoPedido.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EstadoPedidoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pedido<T extends PedidoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PedidoDefaultArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuario<T extends EstadoPedido$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, EstadoPedido$usuarioArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EstadoPedido model
   */
  interface EstadoPedidoFieldRefs {
    readonly id_estado_pedido: FieldRef<"EstadoPedido", 'Int'>
    readonly id_pedido: FieldRef<"EstadoPedido", 'Int'>
    readonly id_usuario: FieldRef<"EstadoPedido", 'Int'>
    readonly estado: FieldRef<"EstadoPedido", 'EstadoPedidoGeneral'>
    readonly fecha_hora: FieldRef<"EstadoPedido", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * EstadoPedido findUnique
   */
  export type EstadoPedidoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPedido
     */
    select?: EstadoPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPedido
     */
    omit?: EstadoPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPedidoInclude<ExtArgs> | null
    /**
     * Filter, which EstadoPedido to fetch.
     */
    where: EstadoPedidoWhereUniqueInput
  }

  /**
   * EstadoPedido findUniqueOrThrow
   */
  export type EstadoPedidoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPedido
     */
    select?: EstadoPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPedido
     */
    omit?: EstadoPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPedidoInclude<ExtArgs> | null
    /**
     * Filter, which EstadoPedido to fetch.
     */
    where: EstadoPedidoWhereUniqueInput
  }

  /**
   * EstadoPedido findFirst
   */
  export type EstadoPedidoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPedido
     */
    select?: EstadoPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPedido
     */
    omit?: EstadoPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPedidoInclude<ExtArgs> | null
    /**
     * Filter, which EstadoPedido to fetch.
     */
    where?: EstadoPedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadoPedidos to fetch.
     */
    orderBy?: EstadoPedidoOrderByWithRelationInput | EstadoPedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EstadoPedidos.
     */
    cursor?: EstadoPedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadoPedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadoPedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EstadoPedidos.
     */
    distinct?: EstadoPedidoScalarFieldEnum | EstadoPedidoScalarFieldEnum[]
  }

  /**
   * EstadoPedido findFirstOrThrow
   */
  export type EstadoPedidoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPedido
     */
    select?: EstadoPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPedido
     */
    omit?: EstadoPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPedidoInclude<ExtArgs> | null
    /**
     * Filter, which EstadoPedido to fetch.
     */
    where?: EstadoPedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadoPedidos to fetch.
     */
    orderBy?: EstadoPedidoOrderByWithRelationInput | EstadoPedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EstadoPedidos.
     */
    cursor?: EstadoPedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadoPedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadoPedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EstadoPedidos.
     */
    distinct?: EstadoPedidoScalarFieldEnum | EstadoPedidoScalarFieldEnum[]
  }

  /**
   * EstadoPedido findMany
   */
  export type EstadoPedidoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPedido
     */
    select?: EstadoPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPedido
     */
    omit?: EstadoPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPedidoInclude<ExtArgs> | null
    /**
     * Filter, which EstadoPedidos to fetch.
     */
    where?: EstadoPedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadoPedidos to fetch.
     */
    orderBy?: EstadoPedidoOrderByWithRelationInput | EstadoPedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EstadoPedidos.
     */
    cursor?: EstadoPedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadoPedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadoPedidos.
     */
    skip?: number
    distinct?: EstadoPedidoScalarFieldEnum | EstadoPedidoScalarFieldEnum[]
  }

  /**
   * EstadoPedido create
   */
  export type EstadoPedidoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPedido
     */
    select?: EstadoPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPedido
     */
    omit?: EstadoPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPedidoInclude<ExtArgs> | null
    /**
     * The data needed to create a EstadoPedido.
     */
    data: XOR<EstadoPedidoCreateInput, EstadoPedidoUncheckedCreateInput>
  }

  /**
   * EstadoPedido createMany
   */
  export type EstadoPedidoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EstadoPedidos.
     */
    data: EstadoPedidoCreateManyInput | EstadoPedidoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EstadoPedido createManyAndReturn
   */
  export type EstadoPedidoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPedido
     */
    select?: EstadoPedidoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPedido
     */
    omit?: EstadoPedidoOmit<ExtArgs> | null
    /**
     * The data used to create many EstadoPedidos.
     */
    data: EstadoPedidoCreateManyInput | EstadoPedidoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPedidoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * EstadoPedido update
   */
  export type EstadoPedidoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPedido
     */
    select?: EstadoPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPedido
     */
    omit?: EstadoPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPedidoInclude<ExtArgs> | null
    /**
     * The data needed to update a EstadoPedido.
     */
    data: XOR<EstadoPedidoUpdateInput, EstadoPedidoUncheckedUpdateInput>
    /**
     * Choose, which EstadoPedido to update.
     */
    where: EstadoPedidoWhereUniqueInput
  }

  /**
   * EstadoPedido updateMany
   */
  export type EstadoPedidoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EstadoPedidos.
     */
    data: XOR<EstadoPedidoUpdateManyMutationInput, EstadoPedidoUncheckedUpdateManyInput>
    /**
     * Filter which EstadoPedidos to update
     */
    where?: EstadoPedidoWhereInput
    /**
     * Limit how many EstadoPedidos to update.
     */
    limit?: number
  }

  /**
   * EstadoPedido updateManyAndReturn
   */
  export type EstadoPedidoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPedido
     */
    select?: EstadoPedidoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPedido
     */
    omit?: EstadoPedidoOmit<ExtArgs> | null
    /**
     * The data used to update EstadoPedidos.
     */
    data: XOR<EstadoPedidoUpdateManyMutationInput, EstadoPedidoUncheckedUpdateManyInput>
    /**
     * Filter which EstadoPedidos to update
     */
    where?: EstadoPedidoWhereInput
    /**
     * Limit how many EstadoPedidos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPedidoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * EstadoPedido upsert
   */
  export type EstadoPedidoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPedido
     */
    select?: EstadoPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPedido
     */
    omit?: EstadoPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPedidoInclude<ExtArgs> | null
    /**
     * The filter to search for the EstadoPedido to update in case it exists.
     */
    where: EstadoPedidoWhereUniqueInput
    /**
     * In case the EstadoPedido found by the `where` argument doesn't exist, create a new EstadoPedido with this data.
     */
    create: XOR<EstadoPedidoCreateInput, EstadoPedidoUncheckedCreateInput>
    /**
     * In case the EstadoPedido was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EstadoPedidoUpdateInput, EstadoPedidoUncheckedUpdateInput>
  }

  /**
   * EstadoPedido delete
   */
  export type EstadoPedidoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPedido
     */
    select?: EstadoPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPedido
     */
    omit?: EstadoPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPedidoInclude<ExtArgs> | null
    /**
     * Filter which EstadoPedido to delete.
     */
    where: EstadoPedidoWhereUniqueInput
  }

  /**
   * EstadoPedido deleteMany
   */
  export type EstadoPedidoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EstadoPedidos to delete
     */
    where?: EstadoPedidoWhereInput
    /**
     * Limit how many EstadoPedidos to delete.
     */
    limit?: number
  }

  /**
   * EstadoPedido.usuario
   */
  export type EstadoPedido$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * EstadoPedido without action
   */
  export type EstadoPedidoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPedido
     */
    select?: EstadoPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPedido
     */
    omit?: EstadoPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPedidoInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsuarioScalarFieldEnum: {
    id_usuario: 'id_usuario',
    rol: 'rol',
    nombre: 'nombre',
    email: 'email',
    contrasena: 'contrasena',
    id_establecimiento: 'id_establecimiento'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const EstablecimientoScalarFieldEnum: {
    id_establecimiento: 'id_establecimiento',
    nombre: 'nombre',
    cif: 'cif',
    direccion: 'direccion',
    cp: 'cp',
    ciudad: 'ciudad',
    telefono1: 'telefono1',
    telefono2: 'telefono2',
    datos_bancarios_cobro: 'datos_bancarios_cobro',
    datos_bancarios_pago: 'datos_bancarios_pago',
    contacto: 'contacto',
    id_administrador_establecimiento: 'id_administrador_establecimiento'
  };

  export type EstablecimientoScalarFieldEnum = (typeof EstablecimientoScalarFieldEnum)[keyof typeof EstablecimientoScalarFieldEnum]


  export const CategoriaScalarFieldEnum: {
    id_categoria: 'id_categoria',
    nombre: 'nombre',
    imagen_url: 'imagen_url',
    id_establecimiento: 'id_establecimiento',
    orden: 'orden'
  };

  export type CategoriaScalarFieldEnum = (typeof CategoriaScalarFieldEnum)[keyof typeof CategoriaScalarFieldEnum]


  export const CategoriaTraduccionScalarFieldEnum: {
    id_traduccion: 'id_traduccion',
    id_categoria: 'id_categoria',
    idioma: 'idioma',
    nombre: 'nombre'
  };

  export type CategoriaTraduccionScalarFieldEnum = (typeof CategoriaTraduccionScalarFieldEnum)[keyof typeof CategoriaTraduccionScalarFieldEnum]


  export const ProductoScalarFieldEnum: {
    id_producto: 'id_producto',
    nombre: 'nombre',
    descripcion: 'descripcion',
    precio: 'precio',
    imagen_url: 'imagen_url',
    id_categoria: 'id_categoria',
    id_establecimiento: 'id_establecimiento',
    orden: 'orden'
  };

  export type ProductoScalarFieldEnum = (typeof ProductoScalarFieldEnum)[keyof typeof ProductoScalarFieldEnum]


  export const ProductoTraduccionScalarFieldEnum: {
    id_traduccion: 'id_traduccion',
    id_producto: 'id_producto',
    idioma: 'idioma',
    nombre: 'nombre',
    descripcion: 'descripcion'
  };

  export type ProductoTraduccionScalarFieldEnum = (typeof ProductoTraduccionScalarFieldEnum)[keyof typeof ProductoTraduccionScalarFieldEnum]


  export const PedidoScalarFieldEnum: {
    id_pedido: 'id_pedido',
    id_cliente: 'id_cliente',
    id_establecimiento: 'id_establecimiento',
    fecha_hora: 'fecha_hora',
    estado: 'estado',
    total: 'total',
    metodo_pago: 'metodo_pago'
  };

  export type PedidoScalarFieldEnum = (typeof PedidoScalarFieldEnum)[keyof typeof PedidoScalarFieldEnum]


  export const DetallePedidoScalarFieldEnum: {
    id_detalle_pedido: 'id_detalle_pedido',
    id_pedido: 'id_pedido',
    id_producto: 'id_producto',
    cantidad: 'cantidad',
    especialidades: 'especialidades',
    estado: 'estado'
  };

  export type DetallePedidoScalarFieldEnum = (typeof DetallePedidoScalarFieldEnum)[keyof typeof DetallePedidoScalarFieldEnum]


  export const EstadoPedidoScalarFieldEnum: {
    id_estado_pedido: 'id_estado_pedido',
    id_pedido: 'id_pedido',
    id_usuario: 'id_usuario',
    estado: 'estado',
    fecha_hora: 'fecha_hora'
  };

  export type EstadoPedidoScalarFieldEnum = (typeof EstadoPedidoScalarFieldEnum)[keyof typeof EstadoPedidoScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'RolUsuario'
   */
  export type EnumRolUsuarioFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RolUsuario'>
    


  /**
   * Reference to a field of type 'RolUsuario[]'
   */
  export type ListEnumRolUsuarioFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RolUsuario[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'EstadoPedidoGeneral'
   */
  export type EnumEstadoPedidoGeneralFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoPedidoGeneral'>
    


  /**
   * Reference to a field of type 'EstadoPedidoGeneral[]'
   */
  export type ListEnumEstadoPedidoGeneralFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoPedidoGeneral[]'>
    


  /**
   * Reference to a field of type 'EstadoItemPedido'
   */
  export type EnumEstadoItemPedidoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoItemPedido'>
    


  /**
   * Reference to a field of type 'EstadoItemPedido[]'
   */
  export type ListEnumEstadoItemPedidoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoItemPedido[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UsuarioWhereInput = {
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    id_usuario?: IntFilter<"Usuario"> | number
    rol?: EnumRolUsuarioFilter<"Usuario"> | $Enums.RolUsuario
    nombre?: StringNullableFilter<"Usuario"> | string | null
    email?: StringNullableFilter<"Usuario"> | string | null
    contrasena?: StringNullableFilter<"Usuario"> | string | null
    id_establecimiento?: IntNullableFilter<"Usuario"> | number | null
    administra?: XOR<EstablecimientoNullableScalarRelationFilter, EstablecimientoWhereInput> | null
    estadosPedido?: EstadoPedidoListRelationFilter
    pedidos?: PedidoListRelationFilter
    establecimiento?: XOR<EstablecimientoNullableScalarRelationFilter, EstablecimientoWhereInput> | null
  }

  export type UsuarioOrderByWithRelationInput = {
    id_usuario?: SortOrder
    rol?: SortOrder
    nombre?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    contrasena?: SortOrderInput | SortOrder
    id_establecimiento?: SortOrderInput | SortOrder
    administra?: EstablecimientoOrderByWithRelationInput
    estadosPedido?: EstadoPedidoOrderByRelationAggregateInput
    pedidos?: PedidoOrderByRelationAggregateInput
    establecimiento?: EstablecimientoOrderByWithRelationInput
  }

  export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
    id_usuario?: number
    email?: string
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    rol?: EnumRolUsuarioFilter<"Usuario"> | $Enums.RolUsuario
    nombre?: StringNullableFilter<"Usuario"> | string | null
    contrasena?: StringNullableFilter<"Usuario"> | string | null
    id_establecimiento?: IntNullableFilter<"Usuario"> | number | null
    administra?: XOR<EstablecimientoNullableScalarRelationFilter, EstablecimientoWhereInput> | null
    estadosPedido?: EstadoPedidoListRelationFilter
    pedidos?: PedidoListRelationFilter
    establecimiento?: XOR<EstablecimientoNullableScalarRelationFilter, EstablecimientoWhereInput> | null
  }, "id_usuario" | "email">

  export type UsuarioOrderByWithAggregationInput = {
    id_usuario?: SortOrder
    rol?: SortOrder
    nombre?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    contrasena?: SortOrderInput | SortOrder
    id_establecimiento?: SortOrderInput | SortOrder
    _count?: UsuarioCountOrderByAggregateInput
    _avg?: UsuarioAvgOrderByAggregateInput
    _max?: UsuarioMaxOrderByAggregateInput
    _min?: UsuarioMinOrderByAggregateInput
    _sum?: UsuarioSumOrderByAggregateInput
  }

  export type UsuarioScalarWhereWithAggregatesInput = {
    AND?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    OR?: UsuarioScalarWhereWithAggregatesInput[]
    NOT?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    id_usuario?: IntWithAggregatesFilter<"Usuario"> | number
    rol?: EnumRolUsuarioWithAggregatesFilter<"Usuario"> | $Enums.RolUsuario
    nombre?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    email?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    contrasena?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    id_establecimiento?: IntNullableWithAggregatesFilter<"Usuario"> | number | null
  }

  export type EstablecimientoWhereInput = {
    AND?: EstablecimientoWhereInput | EstablecimientoWhereInput[]
    OR?: EstablecimientoWhereInput[]
    NOT?: EstablecimientoWhereInput | EstablecimientoWhereInput[]
    id_establecimiento?: IntFilter<"Establecimiento"> | number
    nombre?: StringFilter<"Establecimiento"> | string
    cif?: StringNullableFilter<"Establecimiento"> | string | null
    direccion?: StringNullableFilter<"Establecimiento"> | string | null
    cp?: StringNullableFilter<"Establecimiento"> | string | null
    ciudad?: StringNullableFilter<"Establecimiento"> | string | null
    telefono1?: StringNullableFilter<"Establecimiento"> | string | null
    telefono2?: StringNullableFilter<"Establecimiento"> | string | null
    datos_bancarios_cobro?: StringNullableFilter<"Establecimiento"> | string | null
    datos_bancarios_pago?: StringNullableFilter<"Establecimiento"> | string | null
    contacto?: StringNullableFilter<"Establecimiento"> | string | null
    id_administrador_establecimiento?: IntNullableFilter<"Establecimiento"> | number | null
    categorias?: CategoriaListRelationFilter
    administrador?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
    pedidos?: PedidoListRelationFilter
    productos?: ProductoListRelationFilter
    empleados?: UsuarioListRelationFilter
  }

  export type EstablecimientoOrderByWithRelationInput = {
    id_establecimiento?: SortOrder
    nombre?: SortOrder
    cif?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    cp?: SortOrderInput | SortOrder
    ciudad?: SortOrderInput | SortOrder
    telefono1?: SortOrderInput | SortOrder
    telefono2?: SortOrderInput | SortOrder
    datos_bancarios_cobro?: SortOrderInput | SortOrder
    datos_bancarios_pago?: SortOrderInput | SortOrder
    contacto?: SortOrderInput | SortOrder
    id_administrador_establecimiento?: SortOrderInput | SortOrder
    categorias?: CategoriaOrderByRelationAggregateInput
    administrador?: UsuarioOrderByWithRelationInput
    pedidos?: PedidoOrderByRelationAggregateInput
    productos?: ProductoOrderByRelationAggregateInput
    empleados?: UsuarioOrderByRelationAggregateInput
  }

  export type EstablecimientoWhereUniqueInput = Prisma.AtLeast<{
    id_establecimiento?: number
    id_administrador_establecimiento?: number
    AND?: EstablecimientoWhereInput | EstablecimientoWhereInput[]
    OR?: EstablecimientoWhereInput[]
    NOT?: EstablecimientoWhereInput | EstablecimientoWhereInput[]
    nombre?: StringFilter<"Establecimiento"> | string
    cif?: StringNullableFilter<"Establecimiento"> | string | null
    direccion?: StringNullableFilter<"Establecimiento"> | string | null
    cp?: StringNullableFilter<"Establecimiento"> | string | null
    ciudad?: StringNullableFilter<"Establecimiento"> | string | null
    telefono1?: StringNullableFilter<"Establecimiento"> | string | null
    telefono2?: StringNullableFilter<"Establecimiento"> | string | null
    datos_bancarios_cobro?: StringNullableFilter<"Establecimiento"> | string | null
    datos_bancarios_pago?: StringNullableFilter<"Establecimiento"> | string | null
    contacto?: StringNullableFilter<"Establecimiento"> | string | null
    categorias?: CategoriaListRelationFilter
    administrador?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
    pedidos?: PedidoListRelationFilter
    productos?: ProductoListRelationFilter
    empleados?: UsuarioListRelationFilter
  }, "id_establecimiento" | "id_administrador_establecimiento">

  export type EstablecimientoOrderByWithAggregationInput = {
    id_establecimiento?: SortOrder
    nombre?: SortOrder
    cif?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    cp?: SortOrderInput | SortOrder
    ciudad?: SortOrderInput | SortOrder
    telefono1?: SortOrderInput | SortOrder
    telefono2?: SortOrderInput | SortOrder
    datos_bancarios_cobro?: SortOrderInput | SortOrder
    datos_bancarios_pago?: SortOrderInput | SortOrder
    contacto?: SortOrderInput | SortOrder
    id_administrador_establecimiento?: SortOrderInput | SortOrder
    _count?: EstablecimientoCountOrderByAggregateInput
    _avg?: EstablecimientoAvgOrderByAggregateInput
    _max?: EstablecimientoMaxOrderByAggregateInput
    _min?: EstablecimientoMinOrderByAggregateInput
    _sum?: EstablecimientoSumOrderByAggregateInput
  }

  export type EstablecimientoScalarWhereWithAggregatesInput = {
    AND?: EstablecimientoScalarWhereWithAggregatesInput | EstablecimientoScalarWhereWithAggregatesInput[]
    OR?: EstablecimientoScalarWhereWithAggregatesInput[]
    NOT?: EstablecimientoScalarWhereWithAggregatesInput | EstablecimientoScalarWhereWithAggregatesInput[]
    id_establecimiento?: IntWithAggregatesFilter<"Establecimiento"> | number
    nombre?: StringWithAggregatesFilter<"Establecimiento"> | string
    cif?: StringNullableWithAggregatesFilter<"Establecimiento"> | string | null
    direccion?: StringNullableWithAggregatesFilter<"Establecimiento"> | string | null
    cp?: StringNullableWithAggregatesFilter<"Establecimiento"> | string | null
    ciudad?: StringNullableWithAggregatesFilter<"Establecimiento"> | string | null
    telefono1?: StringNullableWithAggregatesFilter<"Establecimiento"> | string | null
    telefono2?: StringNullableWithAggregatesFilter<"Establecimiento"> | string | null
    datos_bancarios_cobro?: StringNullableWithAggregatesFilter<"Establecimiento"> | string | null
    datos_bancarios_pago?: StringNullableWithAggregatesFilter<"Establecimiento"> | string | null
    contacto?: StringNullableWithAggregatesFilter<"Establecimiento"> | string | null
    id_administrador_establecimiento?: IntNullableWithAggregatesFilter<"Establecimiento"> | number | null
  }

  export type CategoriaWhereInput = {
    AND?: CategoriaWhereInput | CategoriaWhereInput[]
    OR?: CategoriaWhereInput[]
    NOT?: CategoriaWhereInput | CategoriaWhereInput[]
    id_categoria?: IntFilter<"Categoria"> | number
    nombre?: StringFilter<"Categoria"> | string
    imagen_url?: StringNullableFilter<"Categoria"> | string | null
    id_establecimiento?: IntFilter<"Categoria"> | number
    orden?: IntNullableFilter<"Categoria"> | number | null
    establecimiento?: XOR<EstablecimientoScalarRelationFilter, EstablecimientoWhereInput>
    CategoriaTraduccion?: CategoriaTraduccionListRelationFilter
    productos?: ProductoListRelationFilter
  }

  export type CategoriaOrderByWithRelationInput = {
    id_categoria?: SortOrder
    nombre?: SortOrder
    imagen_url?: SortOrderInput | SortOrder
    id_establecimiento?: SortOrder
    orden?: SortOrderInput | SortOrder
    establecimiento?: EstablecimientoOrderByWithRelationInput
    CategoriaTraduccion?: CategoriaTraduccionOrderByRelationAggregateInput
    productos?: ProductoOrderByRelationAggregateInput
  }

  export type CategoriaWhereUniqueInput = Prisma.AtLeast<{
    id_categoria?: number
    AND?: CategoriaWhereInput | CategoriaWhereInput[]
    OR?: CategoriaWhereInput[]
    NOT?: CategoriaWhereInput | CategoriaWhereInput[]
    nombre?: StringFilter<"Categoria"> | string
    imagen_url?: StringNullableFilter<"Categoria"> | string | null
    id_establecimiento?: IntFilter<"Categoria"> | number
    orden?: IntNullableFilter<"Categoria"> | number | null
    establecimiento?: XOR<EstablecimientoScalarRelationFilter, EstablecimientoWhereInput>
    CategoriaTraduccion?: CategoriaTraduccionListRelationFilter
    productos?: ProductoListRelationFilter
  }, "id_categoria">

  export type CategoriaOrderByWithAggregationInput = {
    id_categoria?: SortOrder
    nombre?: SortOrder
    imagen_url?: SortOrderInput | SortOrder
    id_establecimiento?: SortOrder
    orden?: SortOrderInput | SortOrder
    _count?: CategoriaCountOrderByAggregateInput
    _avg?: CategoriaAvgOrderByAggregateInput
    _max?: CategoriaMaxOrderByAggregateInput
    _min?: CategoriaMinOrderByAggregateInput
    _sum?: CategoriaSumOrderByAggregateInput
  }

  export type CategoriaScalarWhereWithAggregatesInput = {
    AND?: CategoriaScalarWhereWithAggregatesInput | CategoriaScalarWhereWithAggregatesInput[]
    OR?: CategoriaScalarWhereWithAggregatesInput[]
    NOT?: CategoriaScalarWhereWithAggregatesInput | CategoriaScalarWhereWithAggregatesInput[]
    id_categoria?: IntWithAggregatesFilter<"Categoria"> | number
    nombre?: StringWithAggregatesFilter<"Categoria"> | string
    imagen_url?: StringNullableWithAggregatesFilter<"Categoria"> | string | null
    id_establecimiento?: IntWithAggregatesFilter<"Categoria"> | number
    orden?: IntNullableWithAggregatesFilter<"Categoria"> | number | null
  }

  export type CategoriaTraduccionWhereInput = {
    AND?: CategoriaTraduccionWhereInput | CategoriaTraduccionWhereInput[]
    OR?: CategoriaTraduccionWhereInput[]
    NOT?: CategoriaTraduccionWhereInput | CategoriaTraduccionWhereInput[]
    id_traduccion?: IntFilter<"CategoriaTraduccion"> | number
    id_categoria?: IntFilter<"CategoriaTraduccion"> | number
    idioma?: StringFilter<"CategoriaTraduccion"> | string
    nombre?: StringFilter<"CategoriaTraduccion"> | string
    categoria?: XOR<CategoriaScalarRelationFilter, CategoriaWhereInput>
  }

  export type CategoriaTraduccionOrderByWithRelationInput = {
    id_traduccion?: SortOrder
    id_categoria?: SortOrder
    idioma?: SortOrder
    nombre?: SortOrder
    categoria?: CategoriaOrderByWithRelationInput
  }

  export type CategoriaTraduccionWhereUniqueInput = Prisma.AtLeast<{
    id_traduccion?: number
    id_categoria_idioma?: CategoriaTraduccionId_categoriaIdiomaCompoundUniqueInput
    AND?: CategoriaTraduccionWhereInput | CategoriaTraduccionWhereInput[]
    OR?: CategoriaTraduccionWhereInput[]
    NOT?: CategoriaTraduccionWhereInput | CategoriaTraduccionWhereInput[]
    id_categoria?: IntFilter<"CategoriaTraduccion"> | number
    idioma?: StringFilter<"CategoriaTraduccion"> | string
    nombre?: StringFilter<"CategoriaTraduccion"> | string
    categoria?: XOR<CategoriaScalarRelationFilter, CategoriaWhereInput>
  }, "id_traduccion" | "id_categoria_idioma">

  export type CategoriaTraduccionOrderByWithAggregationInput = {
    id_traduccion?: SortOrder
    id_categoria?: SortOrder
    idioma?: SortOrder
    nombre?: SortOrder
    _count?: CategoriaTraduccionCountOrderByAggregateInput
    _avg?: CategoriaTraduccionAvgOrderByAggregateInput
    _max?: CategoriaTraduccionMaxOrderByAggregateInput
    _min?: CategoriaTraduccionMinOrderByAggregateInput
    _sum?: CategoriaTraduccionSumOrderByAggregateInput
  }

  export type CategoriaTraduccionScalarWhereWithAggregatesInput = {
    AND?: CategoriaTraduccionScalarWhereWithAggregatesInput | CategoriaTraduccionScalarWhereWithAggregatesInput[]
    OR?: CategoriaTraduccionScalarWhereWithAggregatesInput[]
    NOT?: CategoriaTraduccionScalarWhereWithAggregatesInput | CategoriaTraduccionScalarWhereWithAggregatesInput[]
    id_traduccion?: IntWithAggregatesFilter<"CategoriaTraduccion"> | number
    id_categoria?: IntWithAggregatesFilter<"CategoriaTraduccion"> | number
    idioma?: StringWithAggregatesFilter<"CategoriaTraduccion"> | string
    nombre?: StringWithAggregatesFilter<"CategoriaTraduccion"> | string
  }

  export type ProductoWhereInput = {
    AND?: ProductoWhereInput | ProductoWhereInput[]
    OR?: ProductoWhereInput[]
    NOT?: ProductoWhereInput | ProductoWhereInput[]
    id_producto?: IntFilter<"Producto"> | number
    nombre?: StringFilter<"Producto"> | string
    descripcion?: StringNullableFilter<"Producto"> | string | null
    precio?: DecimalFilter<"Producto"> | Decimal | DecimalJsLike | number | string
    imagen_url?: StringNullableFilter<"Producto"> | string | null
    id_categoria?: IntFilter<"Producto"> | number
    id_establecimiento?: IntFilter<"Producto"> | number
    orden?: IntNullableFilter<"Producto"> | number | null
    detallesPedido?: DetallePedidoListRelationFilter
    categoria?: XOR<CategoriaScalarRelationFilter, CategoriaWhereInput>
    establecimiento?: XOR<EstablecimientoScalarRelationFilter, EstablecimientoWhereInput>
    ProductoTraduccion?: ProductoTraduccionListRelationFilter
  }

  export type ProductoOrderByWithRelationInput = {
    id_producto?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    precio?: SortOrder
    imagen_url?: SortOrderInput | SortOrder
    id_categoria?: SortOrder
    id_establecimiento?: SortOrder
    orden?: SortOrderInput | SortOrder
    detallesPedido?: DetallePedidoOrderByRelationAggregateInput
    categoria?: CategoriaOrderByWithRelationInput
    establecimiento?: EstablecimientoOrderByWithRelationInput
    ProductoTraduccion?: ProductoTraduccionOrderByRelationAggregateInput
  }

  export type ProductoWhereUniqueInput = Prisma.AtLeast<{
    id_producto?: number
    AND?: ProductoWhereInput | ProductoWhereInput[]
    OR?: ProductoWhereInput[]
    NOT?: ProductoWhereInput | ProductoWhereInput[]
    nombre?: StringFilter<"Producto"> | string
    descripcion?: StringNullableFilter<"Producto"> | string | null
    precio?: DecimalFilter<"Producto"> | Decimal | DecimalJsLike | number | string
    imagen_url?: StringNullableFilter<"Producto"> | string | null
    id_categoria?: IntFilter<"Producto"> | number
    id_establecimiento?: IntFilter<"Producto"> | number
    orden?: IntNullableFilter<"Producto"> | number | null
    detallesPedido?: DetallePedidoListRelationFilter
    categoria?: XOR<CategoriaScalarRelationFilter, CategoriaWhereInput>
    establecimiento?: XOR<EstablecimientoScalarRelationFilter, EstablecimientoWhereInput>
    ProductoTraduccion?: ProductoTraduccionListRelationFilter
  }, "id_producto">

  export type ProductoOrderByWithAggregationInput = {
    id_producto?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    precio?: SortOrder
    imagen_url?: SortOrderInput | SortOrder
    id_categoria?: SortOrder
    id_establecimiento?: SortOrder
    orden?: SortOrderInput | SortOrder
    _count?: ProductoCountOrderByAggregateInput
    _avg?: ProductoAvgOrderByAggregateInput
    _max?: ProductoMaxOrderByAggregateInput
    _min?: ProductoMinOrderByAggregateInput
    _sum?: ProductoSumOrderByAggregateInput
  }

  export type ProductoScalarWhereWithAggregatesInput = {
    AND?: ProductoScalarWhereWithAggregatesInput | ProductoScalarWhereWithAggregatesInput[]
    OR?: ProductoScalarWhereWithAggregatesInput[]
    NOT?: ProductoScalarWhereWithAggregatesInput | ProductoScalarWhereWithAggregatesInput[]
    id_producto?: IntWithAggregatesFilter<"Producto"> | number
    nombre?: StringWithAggregatesFilter<"Producto"> | string
    descripcion?: StringNullableWithAggregatesFilter<"Producto"> | string | null
    precio?: DecimalWithAggregatesFilter<"Producto"> | Decimal | DecimalJsLike | number | string
    imagen_url?: StringNullableWithAggregatesFilter<"Producto"> | string | null
    id_categoria?: IntWithAggregatesFilter<"Producto"> | number
    id_establecimiento?: IntWithAggregatesFilter<"Producto"> | number
    orden?: IntNullableWithAggregatesFilter<"Producto"> | number | null
  }

  export type ProductoTraduccionWhereInput = {
    AND?: ProductoTraduccionWhereInput | ProductoTraduccionWhereInput[]
    OR?: ProductoTraduccionWhereInput[]
    NOT?: ProductoTraduccionWhereInput | ProductoTraduccionWhereInput[]
    id_traduccion?: IntFilter<"ProductoTraduccion"> | number
    id_producto?: IntFilter<"ProductoTraduccion"> | number
    idioma?: StringFilter<"ProductoTraduccion"> | string
    nombre?: StringFilter<"ProductoTraduccion"> | string
    descripcion?: StringNullableFilter<"ProductoTraduccion"> | string | null
    producto?: XOR<ProductoScalarRelationFilter, ProductoWhereInput>
  }

  export type ProductoTraduccionOrderByWithRelationInput = {
    id_traduccion?: SortOrder
    id_producto?: SortOrder
    idioma?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    producto?: ProductoOrderByWithRelationInput
  }

  export type ProductoTraduccionWhereUniqueInput = Prisma.AtLeast<{
    id_traduccion?: number
    id_producto_idioma?: ProductoTraduccionId_productoIdiomaCompoundUniqueInput
    AND?: ProductoTraduccionWhereInput | ProductoTraduccionWhereInput[]
    OR?: ProductoTraduccionWhereInput[]
    NOT?: ProductoTraduccionWhereInput | ProductoTraduccionWhereInput[]
    id_producto?: IntFilter<"ProductoTraduccion"> | number
    idioma?: StringFilter<"ProductoTraduccion"> | string
    nombre?: StringFilter<"ProductoTraduccion"> | string
    descripcion?: StringNullableFilter<"ProductoTraduccion"> | string | null
    producto?: XOR<ProductoScalarRelationFilter, ProductoWhereInput>
  }, "id_traduccion" | "id_producto_idioma">

  export type ProductoTraduccionOrderByWithAggregationInput = {
    id_traduccion?: SortOrder
    id_producto?: SortOrder
    idioma?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    _count?: ProductoTraduccionCountOrderByAggregateInput
    _avg?: ProductoTraduccionAvgOrderByAggregateInput
    _max?: ProductoTraduccionMaxOrderByAggregateInput
    _min?: ProductoTraduccionMinOrderByAggregateInput
    _sum?: ProductoTraduccionSumOrderByAggregateInput
  }

  export type ProductoTraduccionScalarWhereWithAggregatesInput = {
    AND?: ProductoTraduccionScalarWhereWithAggregatesInput | ProductoTraduccionScalarWhereWithAggregatesInput[]
    OR?: ProductoTraduccionScalarWhereWithAggregatesInput[]
    NOT?: ProductoTraduccionScalarWhereWithAggregatesInput | ProductoTraduccionScalarWhereWithAggregatesInput[]
    id_traduccion?: IntWithAggregatesFilter<"ProductoTraduccion"> | number
    id_producto?: IntWithAggregatesFilter<"ProductoTraduccion"> | number
    idioma?: StringWithAggregatesFilter<"ProductoTraduccion"> | string
    nombre?: StringWithAggregatesFilter<"ProductoTraduccion"> | string
    descripcion?: StringNullableWithAggregatesFilter<"ProductoTraduccion"> | string | null
  }

  export type PedidoWhereInput = {
    AND?: PedidoWhereInput | PedidoWhereInput[]
    OR?: PedidoWhereInput[]
    NOT?: PedidoWhereInput | PedidoWhereInput[]
    id_pedido?: IntFilter<"Pedido"> | number
    id_cliente?: IntNullableFilter<"Pedido"> | number | null
    id_establecimiento?: IntFilter<"Pedido"> | number
    fecha_hora?: DateTimeFilter<"Pedido"> | Date | string
    estado?: EnumEstadoPedidoGeneralNullableFilter<"Pedido"> | $Enums.EstadoPedidoGeneral | null
    total?: DecimalNullableFilter<"Pedido"> | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: StringNullableFilter<"Pedido"> | string | null
    detalles?: DetallePedidoListRelationFilter
    estadosPedido?: EstadoPedidoListRelationFilter
    cliente?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
    establecimiento?: XOR<EstablecimientoScalarRelationFilter, EstablecimientoWhereInput>
  }

  export type PedidoOrderByWithRelationInput = {
    id_pedido?: SortOrder
    id_cliente?: SortOrderInput | SortOrder
    id_establecimiento?: SortOrder
    fecha_hora?: SortOrder
    estado?: SortOrderInput | SortOrder
    total?: SortOrderInput | SortOrder
    metodo_pago?: SortOrderInput | SortOrder
    detalles?: DetallePedidoOrderByRelationAggregateInput
    estadosPedido?: EstadoPedidoOrderByRelationAggregateInput
    cliente?: UsuarioOrderByWithRelationInput
    establecimiento?: EstablecimientoOrderByWithRelationInput
  }

  export type PedidoWhereUniqueInput = Prisma.AtLeast<{
    id_pedido?: number
    AND?: PedidoWhereInput | PedidoWhereInput[]
    OR?: PedidoWhereInput[]
    NOT?: PedidoWhereInput | PedidoWhereInput[]
    id_cliente?: IntNullableFilter<"Pedido"> | number | null
    id_establecimiento?: IntFilter<"Pedido"> | number
    fecha_hora?: DateTimeFilter<"Pedido"> | Date | string
    estado?: EnumEstadoPedidoGeneralNullableFilter<"Pedido"> | $Enums.EstadoPedidoGeneral | null
    total?: DecimalNullableFilter<"Pedido"> | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: StringNullableFilter<"Pedido"> | string | null
    detalles?: DetallePedidoListRelationFilter
    estadosPedido?: EstadoPedidoListRelationFilter
    cliente?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
    establecimiento?: XOR<EstablecimientoScalarRelationFilter, EstablecimientoWhereInput>
  }, "id_pedido">

  export type PedidoOrderByWithAggregationInput = {
    id_pedido?: SortOrder
    id_cliente?: SortOrderInput | SortOrder
    id_establecimiento?: SortOrder
    fecha_hora?: SortOrder
    estado?: SortOrderInput | SortOrder
    total?: SortOrderInput | SortOrder
    metodo_pago?: SortOrderInput | SortOrder
    _count?: PedidoCountOrderByAggregateInput
    _avg?: PedidoAvgOrderByAggregateInput
    _max?: PedidoMaxOrderByAggregateInput
    _min?: PedidoMinOrderByAggregateInput
    _sum?: PedidoSumOrderByAggregateInput
  }

  export type PedidoScalarWhereWithAggregatesInput = {
    AND?: PedidoScalarWhereWithAggregatesInput | PedidoScalarWhereWithAggregatesInput[]
    OR?: PedidoScalarWhereWithAggregatesInput[]
    NOT?: PedidoScalarWhereWithAggregatesInput | PedidoScalarWhereWithAggregatesInput[]
    id_pedido?: IntWithAggregatesFilter<"Pedido"> | number
    id_cliente?: IntNullableWithAggregatesFilter<"Pedido"> | number | null
    id_establecimiento?: IntWithAggregatesFilter<"Pedido"> | number
    fecha_hora?: DateTimeWithAggregatesFilter<"Pedido"> | Date | string
    estado?: EnumEstadoPedidoGeneralNullableWithAggregatesFilter<"Pedido"> | $Enums.EstadoPedidoGeneral | null
    total?: DecimalNullableWithAggregatesFilter<"Pedido"> | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: StringNullableWithAggregatesFilter<"Pedido"> | string | null
  }

  export type DetallePedidoWhereInput = {
    AND?: DetallePedidoWhereInput | DetallePedidoWhereInput[]
    OR?: DetallePedidoWhereInput[]
    NOT?: DetallePedidoWhereInput | DetallePedidoWhereInput[]
    id_detalle_pedido?: IntFilter<"DetallePedido"> | number
    id_pedido?: IntFilter<"DetallePedido"> | number
    id_producto?: IntFilter<"DetallePedido"> | number
    cantidad?: IntFilter<"DetallePedido"> | number
    especialidades?: StringNullableFilter<"DetallePedido"> | string | null
    estado?: EnumEstadoItemPedidoNullableFilter<"DetallePedido"> | $Enums.EstadoItemPedido | null
    pedido?: XOR<PedidoScalarRelationFilter, PedidoWhereInput>
    producto?: XOR<ProductoScalarRelationFilter, ProductoWhereInput>
  }

  export type DetallePedidoOrderByWithRelationInput = {
    id_detalle_pedido?: SortOrder
    id_pedido?: SortOrder
    id_producto?: SortOrder
    cantidad?: SortOrder
    especialidades?: SortOrderInput | SortOrder
    estado?: SortOrderInput | SortOrder
    pedido?: PedidoOrderByWithRelationInput
    producto?: ProductoOrderByWithRelationInput
  }

  export type DetallePedidoWhereUniqueInput = Prisma.AtLeast<{
    id_detalle_pedido?: number
    AND?: DetallePedidoWhereInput | DetallePedidoWhereInput[]
    OR?: DetallePedidoWhereInput[]
    NOT?: DetallePedidoWhereInput | DetallePedidoWhereInput[]
    id_pedido?: IntFilter<"DetallePedido"> | number
    id_producto?: IntFilter<"DetallePedido"> | number
    cantidad?: IntFilter<"DetallePedido"> | number
    especialidades?: StringNullableFilter<"DetallePedido"> | string | null
    estado?: EnumEstadoItemPedidoNullableFilter<"DetallePedido"> | $Enums.EstadoItemPedido | null
    pedido?: XOR<PedidoScalarRelationFilter, PedidoWhereInput>
    producto?: XOR<ProductoScalarRelationFilter, ProductoWhereInput>
  }, "id_detalle_pedido">

  export type DetallePedidoOrderByWithAggregationInput = {
    id_detalle_pedido?: SortOrder
    id_pedido?: SortOrder
    id_producto?: SortOrder
    cantidad?: SortOrder
    especialidades?: SortOrderInput | SortOrder
    estado?: SortOrderInput | SortOrder
    _count?: DetallePedidoCountOrderByAggregateInput
    _avg?: DetallePedidoAvgOrderByAggregateInput
    _max?: DetallePedidoMaxOrderByAggregateInput
    _min?: DetallePedidoMinOrderByAggregateInput
    _sum?: DetallePedidoSumOrderByAggregateInput
  }

  export type DetallePedidoScalarWhereWithAggregatesInput = {
    AND?: DetallePedidoScalarWhereWithAggregatesInput | DetallePedidoScalarWhereWithAggregatesInput[]
    OR?: DetallePedidoScalarWhereWithAggregatesInput[]
    NOT?: DetallePedidoScalarWhereWithAggregatesInput | DetallePedidoScalarWhereWithAggregatesInput[]
    id_detalle_pedido?: IntWithAggregatesFilter<"DetallePedido"> | number
    id_pedido?: IntWithAggregatesFilter<"DetallePedido"> | number
    id_producto?: IntWithAggregatesFilter<"DetallePedido"> | number
    cantidad?: IntWithAggregatesFilter<"DetallePedido"> | number
    especialidades?: StringNullableWithAggregatesFilter<"DetallePedido"> | string | null
    estado?: EnumEstadoItemPedidoNullableWithAggregatesFilter<"DetallePedido"> | $Enums.EstadoItemPedido | null
  }

  export type EstadoPedidoWhereInput = {
    AND?: EstadoPedidoWhereInput | EstadoPedidoWhereInput[]
    OR?: EstadoPedidoWhereInput[]
    NOT?: EstadoPedidoWhereInput | EstadoPedidoWhereInput[]
    id_estado_pedido?: IntFilter<"EstadoPedido"> | number
    id_pedido?: IntFilter<"EstadoPedido"> | number
    id_usuario?: IntNullableFilter<"EstadoPedido"> | number | null
    estado?: EnumEstadoPedidoGeneralFilter<"EstadoPedido"> | $Enums.EstadoPedidoGeneral
    fecha_hora?: DateTimeFilter<"EstadoPedido"> | Date | string
    pedido?: XOR<PedidoScalarRelationFilter, PedidoWhereInput>
    usuario?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
  }

  export type EstadoPedidoOrderByWithRelationInput = {
    id_estado_pedido?: SortOrder
    id_pedido?: SortOrder
    id_usuario?: SortOrderInput | SortOrder
    estado?: SortOrder
    fecha_hora?: SortOrder
    pedido?: PedidoOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type EstadoPedidoWhereUniqueInput = Prisma.AtLeast<{
    id_estado_pedido?: number
    AND?: EstadoPedidoWhereInput | EstadoPedidoWhereInput[]
    OR?: EstadoPedidoWhereInput[]
    NOT?: EstadoPedidoWhereInput | EstadoPedidoWhereInput[]
    id_pedido?: IntFilter<"EstadoPedido"> | number
    id_usuario?: IntNullableFilter<"EstadoPedido"> | number | null
    estado?: EnumEstadoPedidoGeneralFilter<"EstadoPedido"> | $Enums.EstadoPedidoGeneral
    fecha_hora?: DateTimeFilter<"EstadoPedido"> | Date | string
    pedido?: XOR<PedidoScalarRelationFilter, PedidoWhereInput>
    usuario?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
  }, "id_estado_pedido">

  export type EstadoPedidoOrderByWithAggregationInput = {
    id_estado_pedido?: SortOrder
    id_pedido?: SortOrder
    id_usuario?: SortOrderInput | SortOrder
    estado?: SortOrder
    fecha_hora?: SortOrder
    _count?: EstadoPedidoCountOrderByAggregateInput
    _avg?: EstadoPedidoAvgOrderByAggregateInput
    _max?: EstadoPedidoMaxOrderByAggregateInput
    _min?: EstadoPedidoMinOrderByAggregateInput
    _sum?: EstadoPedidoSumOrderByAggregateInput
  }

  export type EstadoPedidoScalarWhereWithAggregatesInput = {
    AND?: EstadoPedidoScalarWhereWithAggregatesInput | EstadoPedidoScalarWhereWithAggregatesInput[]
    OR?: EstadoPedidoScalarWhereWithAggregatesInput[]
    NOT?: EstadoPedidoScalarWhereWithAggregatesInput | EstadoPedidoScalarWhereWithAggregatesInput[]
    id_estado_pedido?: IntWithAggregatesFilter<"EstadoPedido"> | number
    id_pedido?: IntWithAggregatesFilter<"EstadoPedido"> | number
    id_usuario?: IntNullableWithAggregatesFilter<"EstadoPedido"> | number | null
    estado?: EnumEstadoPedidoGeneralWithAggregatesFilter<"EstadoPedido"> | $Enums.EstadoPedidoGeneral
    fecha_hora?: DateTimeWithAggregatesFilter<"EstadoPedido"> | Date | string
  }

  export type UsuarioCreateInput = {
    rol: $Enums.RolUsuario
    nombre?: string | null
    email?: string | null
    contrasena?: string | null
    administra?: EstablecimientoCreateNestedOneWithoutAdministradorInput
    estadosPedido?: EstadoPedidoCreateNestedManyWithoutUsuarioInput
    pedidos?: PedidoCreateNestedManyWithoutClienteInput
    establecimiento?: EstablecimientoCreateNestedOneWithoutEmpleadosInput
  }

  export type UsuarioUncheckedCreateInput = {
    id_usuario?: number
    rol: $Enums.RolUsuario
    nombre?: string | null
    email?: string | null
    contrasena?: string | null
    id_establecimiento?: number | null
    administra?: EstablecimientoUncheckedCreateNestedOneWithoutAdministradorInput
    estadosPedido?: EstadoPedidoUncheckedCreateNestedManyWithoutUsuarioInput
    pedidos?: PedidoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type UsuarioUpdateInput = {
    rol?: EnumRolUsuarioFieldUpdateOperationsInput | $Enums.RolUsuario
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    administra?: EstablecimientoUpdateOneWithoutAdministradorNestedInput
    estadosPedido?: EstadoPedidoUpdateManyWithoutUsuarioNestedInput
    pedidos?: PedidoUpdateManyWithoutClienteNestedInput
    establecimiento?: EstablecimientoUpdateOneWithoutEmpleadosNestedInput
  }

  export type UsuarioUncheckedUpdateInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    rol?: EnumRolUsuarioFieldUpdateOperationsInput | $Enums.RolUsuario
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    id_establecimiento?: NullableIntFieldUpdateOperationsInput | number | null
    administra?: EstablecimientoUncheckedUpdateOneWithoutAdministradorNestedInput
    estadosPedido?: EstadoPedidoUncheckedUpdateManyWithoutUsuarioNestedInput
    pedidos?: PedidoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type UsuarioCreateManyInput = {
    id_usuario?: number
    rol: $Enums.RolUsuario
    nombre?: string | null
    email?: string | null
    contrasena?: string | null
    id_establecimiento?: number | null
  }

  export type UsuarioUpdateManyMutationInput = {
    rol?: EnumRolUsuarioFieldUpdateOperationsInput | $Enums.RolUsuario
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UsuarioUncheckedUpdateManyInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    rol?: EnumRolUsuarioFieldUpdateOperationsInput | $Enums.RolUsuario
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    id_establecimiento?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type EstablecimientoCreateInput = {
    nombre: string
    cif?: string | null
    direccion?: string | null
    cp?: string | null
    ciudad?: string | null
    telefono1?: string | null
    telefono2?: string | null
    datos_bancarios_cobro?: string | null
    datos_bancarios_pago?: string | null
    contacto?: string | null
    categorias?: CategoriaCreateNestedManyWithoutEstablecimientoInput
    administrador?: UsuarioCreateNestedOneWithoutAdministraInput
    pedidos?: PedidoCreateNestedManyWithoutEstablecimientoInput
    productos?: ProductoCreateNestedManyWithoutEstablecimientoInput
    empleados?: UsuarioCreateNestedManyWithoutEstablecimientoInput
  }

  export type EstablecimientoUncheckedCreateInput = {
    id_establecimiento?: number
    nombre: string
    cif?: string | null
    direccion?: string | null
    cp?: string | null
    ciudad?: string | null
    telefono1?: string | null
    telefono2?: string | null
    datos_bancarios_cobro?: string | null
    datos_bancarios_pago?: string | null
    contacto?: string | null
    id_administrador_establecimiento?: number | null
    categorias?: CategoriaUncheckedCreateNestedManyWithoutEstablecimientoInput
    pedidos?: PedidoUncheckedCreateNestedManyWithoutEstablecimientoInput
    productos?: ProductoUncheckedCreateNestedManyWithoutEstablecimientoInput
    empleados?: UsuarioUncheckedCreateNestedManyWithoutEstablecimientoInput
  }

  export type EstablecimientoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    cp?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    telefono1?: NullableStringFieldUpdateOperationsInput | string | null
    telefono2?: NullableStringFieldUpdateOperationsInput | string | null
    datos_bancarios_cobro?: NullableStringFieldUpdateOperationsInput | string | null
    datos_bancarios_pago?: NullableStringFieldUpdateOperationsInput | string | null
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    categorias?: CategoriaUpdateManyWithoutEstablecimientoNestedInput
    administrador?: UsuarioUpdateOneWithoutAdministraNestedInput
    pedidos?: PedidoUpdateManyWithoutEstablecimientoNestedInput
    productos?: ProductoUpdateManyWithoutEstablecimientoNestedInput
    empleados?: UsuarioUpdateManyWithoutEstablecimientoNestedInput
  }

  export type EstablecimientoUncheckedUpdateInput = {
    id_establecimiento?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    cp?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    telefono1?: NullableStringFieldUpdateOperationsInput | string | null
    telefono2?: NullableStringFieldUpdateOperationsInput | string | null
    datos_bancarios_cobro?: NullableStringFieldUpdateOperationsInput | string | null
    datos_bancarios_pago?: NullableStringFieldUpdateOperationsInput | string | null
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    id_administrador_establecimiento?: NullableIntFieldUpdateOperationsInput | number | null
    categorias?: CategoriaUncheckedUpdateManyWithoutEstablecimientoNestedInput
    pedidos?: PedidoUncheckedUpdateManyWithoutEstablecimientoNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutEstablecimientoNestedInput
    empleados?: UsuarioUncheckedUpdateManyWithoutEstablecimientoNestedInput
  }

  export type EstablecimientoCreateManyInput = {
    id_establecimiento?: number
    nombre: string
    cif?: string | null
    direccion?: string | null
    cp?: string | null
    ciudad?: string | null
    telefono1?: string | null
    telefono2?: string | null
    datos_bancarios_cobro?: string | null
    datos_bancarios_pago?: string | null
    contacto?: string | null
    id_administrador_establecimiento?: number | null
  }

  export type EstablecimientoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    cp?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    telefono1?: NullableStringFieldUpdateOperationsInput | string | null
    telefono2?: NullableStringFieldUpdateOperationsInput | string | null
    datos_bancarios_cobro?: NullableStringFieldUpdateOperationsInput | string | null
    datos_bancarios_pago?: NullableStringFieldUpdateOperationsInput | string | null
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EstablecimientoUncheckedUpdateManyInput = {
    id_establecimiento?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    cp?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    telefono1?: NullableStringFieldUpdateOperationsInput | string | null
    telefono2?: NullableStringFieldUpdateOperationsInput | string | null
    datos_bancarios_cobro?: NullableStringFieldUpdateOperationsInput | string | null
    datos_bancarios_pago?: NullableStringFieldUpdateOperationsInput | string | null
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    id_administrador_establecimiento?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CategoriaCreateInput = {
    nombre: string
    imagen_url?: string | null
    orden?: number | null
    establecimiento: EstablecimientoCreateNestedOneWithoutCategoriasInput
    CategoriaTraduccion?: CategoriaTraduccionCreateNestedManyWithoutCategoriaInput
    productos?: ProductoCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaUncheckedCreateInput = {
    id_categoria?: number
    nombre: string
    imagen_url?: string | null
    id_establecimiento: number
    orden?: number | null
    CategoriaTraduccion?: CategoriaTraduccionUncheckedCreateNestedManyWithoutCategoriaInput
    productos?: ProductoUncheckedCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    orden?: NullableIntFieldUpdateOperationsInput | number | null
    establecimiento?: EstablecimientoUpdateOneRequiredWithoutCategoriasNestedInput
    CategoriaTraduccion?: CategoriaTraduccionUpdateManyWithoutCategoriaNestedInput
    productos?: ProductoUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaUncheckedUpdateInput = {
    id_categoria?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    id_establecimiento?: IntFieldUpdateOperationsInput | number
    orden?: NullableIntFieldUpdateOperationsInput | number | null
    CategoriaTraduccion?: CategoriaTraduccionUncheckedUpdateManyWithoutCategoriaNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaCreateManyInput = {
    id_categoria?: number
    nombre: string
    imagen_url?: string | null
    id_establecimiento: number
    orden?: number | null
  }

  export type CategoriaUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    orden?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CategoriaUncheckedUpdateManyInput = {
    id_categoria?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    id_establecimiento?: IntFieldUpdateOperationsInput | number
    orden?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CategoriaTraduccionCreateInput = {
    idioma: string
    nombre: string
    categoria: CategoriaCreateNestedOneWithoutCategoriaTraduccionInput
  }

  export type CategoriaTraduccionUncheckedCreateInput = {
    id_traduccion?: number
    id_categoria: number
    idioma: string
    nombre: string
  }

  export type CategoriaTraduccionUpdateInput = {
    idioma?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    categoria?: CategoriaUpdateOneRequiredWithoutCategoriaTraduccionNestedInput
  }

  export type CategoriaTraduccionUncheckedUpdateInput = {
    id_traduccion?: IntFieldUpdateOperationsInput | number
    id_categoria?: IntFieldUpdateOperationsInput | number
    idioma?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type CategoriaTraduccionCreateManyInput = {
    id_traduccion?: number
    id_categoria: number
    idioma: string
    nombre: string
  }

  export type CategoriaTraduccionUpdateManyMutationInput = {
    idioma?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type CategoriaTraduccionUncheckedUpdateManyInput = {
    id_traduccion?: IntFieldUpdateOperationsInput | number
    id_categoria?: IntFieldUpdateOperationsInput | number
    idioma?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type ProductoCreateInput = {
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    imagen_url?: string | null
    orden?: number | null
    detallesPedido?: DetallePedidoCreateNestedManyWithoutProductoInput
    categoria: CategoriaCreateNestedOneWithoutProductosInput
    establecimiento: EstablecimientoCreateNestedOneWithoutProductosInput
    ProductoTraduccion?: ProductoTraduccionCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateInput = {
    id_producto?: number
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    imagen_url?: string | null
    id_categoria: number
    id_establecimiento: number
    orden?: number | null
    detallesPedido?: DetallePedidoUncheckedCreateNestedManyWithoutProductoInput
    ProductoTraduccion?: ProductoTraduccionUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    orden?: NullableIntFieldUpdateOperationsInput | number | null
    detallesPedido?: DetallePedidoUpdateManyWithoutProductoNestedInput
    categoria?: CategoriaUpdateOneRequiredWithoutProductosNestedInput
    establecimiento?: EstablecimientoUpdateOneRequiredWithoutProductosNestedInput
    ProductoTraduccion?: ProductoTraduccionUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    id_categoria?: IntFieldUpdateOperationsInput | number
    id_establecimiento?: IntFieldUpdateOperationsInput | number
    orden?: NullableIntFieldUpdateOperationsInput | number | null
    detallesPedido?: DetallePedidoUncheckedUpdateManyWithoutProductoNestedInput
    ProductoTraduccion?: ProductoTraduccionUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type ProductoCreateManyInput = {
    id_producto?: number
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    imagen_url?: string | null
    id_categoria: number
    id_establecimiento: number
    orden?: number | null
  }

  export type ProductoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    orden?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ProductoUncheckedUpdateManyInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    id_categoria?: IntFieldUpdateOperationsInput | number
    id_establecimiento?: IntFieldUpdateOperationsInput | number
    orden?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ProductoTraduccionCreateInput = {
    idioma: string
    nombre: string
    descripcion?: string | null
    producto: ProductoCreateNestedOneWithoutProductoTraduccionInput
  }

  export type ProductoTraduccionUncheckedCreateInput = {
    id_traduccion?: number
    id_producto: number
    idioma: string
    nombre: string
    descripcion?: string | null
  }

  export type ProductoTraduccionUpdateInput = {
    idioma?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    producto?: ProductoUpdateOneRequiredWithoutProductoTraduccionNestedInput
  }

  export type ProductoTraduccionUncheckedUpdateInput = {
    id_traduccion?: IntFieldUpdateOperationsInput | number
    id_producto?: IntFieldUpdateOperationsInput | number
    idioma?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductoTraduccionCreateManyInput = {
    id_traduccion?: number
    id_producto: number
    idioma: string
    nombre: string
    descripcion?: string | null
  }

  export type ProductoTraduccionUpdateManyMutationInput = {
    idioma?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductoTraduccionUncheckedUpdateManyInput = {
    id_traduccion?: IntFieldUpdateOperationsInput | number
    id_producto?: IntFieldUpdateOperationsInput | number
    idioma?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PedidoCreateInput = {
    fecha_hora?: Date | string
    estado?: $Enums.EstadoPedidoGeneral | null
    total?: Decimal | DecimalJsLike | number | string | null
    metodo_pago?: string | null
    detalles?: DetallePedidoCreateNestedManyWithoutPedidoInput
    estadosPedido?: EstadoPedidoCreateNestedManyWithoutPedidoInput
    cliente?: UsuarioCreateNestedOneWithoutPedidosInput
    establecimiento: EstablecimientoCreateNestedOneWithoutPedidosInput
  }

  export type PedidoUncheckedCreateInput = {
    id_pedido?: number
    id_cliente?: number | null
    id_establecimiento: number
    fecha_hora?: Date | string
    estado?: $Enums.EstadoPedidoGeneral | null
    total?: Decimal | DecimalJsLike | number | string | null
    metodo_pago?: string | null
    detalles?: DetallePedidoUncheckedCreateNestedManyWithoutPedidoInput
    estadosPedido?: EstadoPedidoUncheckedCreateNestedManyWithoutPedidoInput
  }

  export type PedidoUpdateInput = {
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: NullableEnumEstadoPedidoGeneralFieldUpdateOperationsInput | $Enums.EstadoPedidoGeneral | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
    detalles?: DetallePedidoUpdateManyWithoutPedidoNestedInput
    estadosPedido?: EstadoPedidoUpdateManyWithoutPedidoNestedInput
    cliente?: UsuarioUpdateOneWithoutPedidosNestedInput
    establecimiento?: EstablecimientoUpdateOneRequiredWithoutPedidosNestedInput
  }

  export type PedidoUncheckedUpdateInput = {
    id_pedido?: IntFieldUpdateOperationsInput | number
    id_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    id_establecimiento?: IntFieldUpdateOperationsInput | number
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: NullableEnumEstadoPedidoGeneralFieldUpdateOperationsInput | $Enums.EstadoPedidoGeneral | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
    detalles?: DetallePedidoUncheckedUpdateManyWithoutPedidoNestedInput
    estadosPedido?: EstadoPedidoUncheckedUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoCreateManyInput = {
    id_pedido?: number
    id_cliente?: number | null
    id_establecimiento: number
    fecha_hora?: Date | string
    estado?: $Enums.EstadoPedidoGeneral | null
    total?: Decimal | DecimalJsLike | number | string | null
    metodo_pago?: string | null
  }

  export type PedidoUpdateManyMutationInput = {
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: NullableEnumEstadoPedidoGeneralFieldUpdateOperationsInput | $Enums.EstadoPedidoGeneral | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PedidoUncheckedUpdateManyInput = {
    id_pedido?: IntFieldUpdateOperationsInput | number
    id_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    id_establecimiento?: IntFieldUpdateOperationsInput | number
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: NullableEnumEstadoPedidoGeneralFieldUpdateOperationsInput | $Enums.EstadoPedidoGeneral | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DetallePedidoCreateInput = {
    cantidad?: number
    especialidades?: string | null
    estado?: $Enums.EstadoItemPedido | null
    pedido: PedidoCreateNestedOneWithoutDetallesInput
    producto: ProductoCreateNestedOneWithoutDetallesPedidoInput
  }

  export type DetallePedidoUncheckedCreateInput = {
    id_detalle_pedido?: number
    id_pedido: number
    id_producto: number
    cantidad?: number
    especialidades?: string | null
    estado?: $Enums.EstadoItemPedido | null
  }

  export type DetallePedidoUpdateInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    especialidades?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableEnumEstadoItemPedidoFieldUpdateOperationsInput | $Enums.EstadoItemPedido | null
    pedido?: PedidoUpdateOneRequiredWithoutDetallesNestedInput
    producto?: ProductoUpdateOneRequiredWithoutDetallesPedidoNestedInput
  }

  export type DetallePedidoUncheckedUpdateInput = {
    id_detalle_pedido?: IntFieldUpdateOperationsInput | number
    id_pedido?: IntFieldUpdateOperationsInput | number
    id_producto?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    especialidades?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableEnumEstadoItemPedidoFieldUpdateOperationsInput | $Enums.EstadoItemPedido | null
  }

  export type DetallePedidoCreateManyInput = {
    id_detalle_pedido?: number
    id_pedido: number
    id_producto: number
    cantidad?: number
    especialidades?: string | null
    estado?: $Enums.EstadoItemPedido | null
  }

  export type DetallePedidoUpdateManyMutationInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    especialidades?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableEnumEstadoItemPedidoFieldUpdateOperationsInput | $Enums.EstadoItemPedido | null
  }

  export type DetallePedidoUncheckedUpdateManyInput = {
    id_detalle_pedido?: IntFieldUpdateOperationsInput | number
    id_pedido?: IntFieldUpdateOperationsInput | number
    id_producto?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    especialidades?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableEnumEstadoItemPedidoFieldUpdateOperationsInput | $Enums.EstadoItemPedido | null
  }

  export type EstadoPedidoCreateInput = {
    estado: $Enums.EstadoPedidoGeneral
    fecha_hora?: Date | string
    pedido: PedidoCreateNestedOneWithoutEstadosPedidoInput
    usuario?: UsuarioCreateNestedOneWithoutEstadosPedidoInput
  }

  export type EstadoPedidoUncheckedCreateInput = {
    id_estado_pedido?: number
    id_pedido: number
    id_usuario?: number | null
    estado: $Enums.EstadoPedidoGeneral
    fecha_hora?: Date | string
  }

  export type EstadoPedidoUpdateInput = {
    estado?: EnumEstadoPedidoGeneralFieldUpdateOperationsInput | $Enums.EstadoPedidoGeneral
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
    pedido?: PedidoUpdateOneRequiredWithoutEstadosPedidoNestedInput
    usuario?: UsuarioUpdateOneWithoutEstadosPedidoNestedInput
  }

  export type EstadoPedidoUncheckedUpdateInput = {
    id_estado_pedido?: IntFieldUpdateOperationsInput | number
    id_pedido?: IntFieldUpdateOperationsInput | number
    id_usuario?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumEstadoPedidoGeneralFieldUpdateOperationsInput | $Enums.EstadoPedidoGeneral
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EstadoPedidoCreateManyInput = {
    id_estado_pedido?: number
    id_pedido: number
    id_usuario?: number | null
    estado: $Enums.EstadoPedidoGeneral
    fecha_hora?: Date | string
  }

  export type EstadoPedidoUpdateManyMutationInput = {
    estado?: EnumEstadoPedidoGeneralFieldUpdateOperationsInput | $Enums.EstadoPedidoGeneral
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EstadoPedidoUncheckedUpdateManyInput = {
    id_estado_pedido?: IntFieldUpdateOperationsInput | number
    id_pedido?: IntFieldUpdateOperationsInput | number
    id_usuario?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumEstadoPedidoGeneralFieldUpdateOperationsInput | $Enums.EstadoPedidoGeneral
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type EnumRolUsuarioFilter<$PrismaModel = never> = {
    equals?: $Enums.RolUsuario | EnumRolUsuarioFieldRefInput<$PrismaModel>
    in?: $Enums.RolUsuario[] | ListEnumRolUsuarioFieldRefInput<$PrismaModel>
    notIn?: $Enums.RolUsuario[] | ListEnumRolUsuarioFieldRefInput<$PrismaModel>
    not?: NestedEnumRolUsuarioFilter<$PrismaModel> | $Enums.RolUsuario
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type EstablecimientoNullableScalarRelationFilter = {
    is?: EstablecimientoWhereInput | null
    isNot?: EstablecimientoWhereInput | null
  }

  export type EstadoPedidoListRelationFilter = {
    every?: EstadoPedidoWhereInput
    some?: EstadoPedidoWhereInput
    none?: EstadoPedidoWhereInput
  }

  export type PedidoListRelationFilter = {
    every?: PedidoWhereInput
    some?: PedidoWhereInput
    none?: PedidoWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type EstadoPedidoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PedidoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioCountOrderByAggregateInput = {
    id_usuario?: SortOrder
    rol?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    contrasena?: SortOrder
    id_establecimiento?: SortOrder
  }

  export type UsuarioAvgOrderByAggregateInput = {
    id_usuario?: SortOrder
    id_establecimiento?: SortOrder
  }

  export type UsuarioMaxOrderByAggregateInput = {
    id_usuario?: SortOrder
    rol?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    contrasena?: SortOrder
    id_establecimiento?: SortOrder
  }

  export type UsuarioMinOrderByAggregateInput = {
    id_usuario?: SortOrder
    rol?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    contrasena?: SortOrder
    id_establecimiento?: SortOrder
  }

  export type UsuarioSumOrderByAggregateInput = {
    id_usuario?: SortOrder
    id_establecimiento?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type EnumRolUsuarioWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RolUsuario | EnumRolUsuarioFieldRefInput<$PrismaModel>
    in?: $Enums.RolUsuario[] | ListEnumRolUsuarioFieldRefInput<$PrismaModel>
    notIn?: $Enums.RolUsuario[] | ListEnumRolUsuarioFieldRefInput<$PrismaModel>
    not?: NestedEnumRolUsuarioWithAggregatesFilter<$PrismaModel> | $Enums.RolUsuario
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRolUsuarioFilter<$PrismaModel>
    _max?: NestedEnumRolUsuarioFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type CategoriaListRelationFilter = {
    every?: CategoriaWhereInput
    some?: CategoriaWhereInput
    none?: CategoriaWhereInput
  }

  export type UsuarioNullableScalarRelationFilter = {
    is?: UsuarioWhereInput | null
    isNot?: UsuarioWhereInput | null
  }

  export type ProductoListRelationFilter = {
    every?: ProductoWhereInput
    some?: ProductoWhereInput
    none?: ProductoWhereInput
  }

  export type UsuarioListRelationFilter = {
    every?: UsuarioWhereInput
    some?: UsuarioWhereInput
    none?: UsuarioWhereInput
  }

  export type CategoriaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EstablecimientoCountOrderByAggregateInput = {
    id_establecimiento?: SortOrder
    nombre?: SortOrder
    cif?: SortOrder
    direccion?: SortOrder
    cp?: SortOrder
    ciudad?: SortOrder
    telefono1?: SortOrder
    telefono2?: SortOrder
    datos_bancarios_cobro?: SortOrder
    datos_bancarios_pago?: SortOrder
    contacto?: SortOrder
    id_administrador_establecimiento?: SortOrder
  }

  export type EstablecimientoAvgOrderByAggregateInput = {
    id_establecimiento?: SortOrder
    id_administrador_establecimiento?: SortOrder
  }

  export type EstablecimientoMaxOrderByAggregateInput = {
    id_establecimiento?: SortOrder
    nombre?: SortOrder
    cif?: SortOrder
    direccion?: SortOrder
    cp?: SortOrder
    ciudad?: SortOrder
    telefono1?: SortOrder
    telefono2?: SortOrder
    datos_bancarios_cobro?: SortOrder
    datos_bancarios_pago?: SortOrder
    contacto?: SortOrder
    id_administrador_establecimiento?: SortOrder
  }

  export type EstablecimientoMinOrderByAggregateInput = {
    id_establecimiento?: SortOrder
    nombre?: SortOrder
    cif?: SortOrder
    direccion?: SortOrder
    cp?: SortOrder
    ciudad?: SortOrder
    telefono1?: SortOrder
    telefono2?: SortOrder
    datos_bancarios_cobro?: SortOrder
    datos_bancarios_pago?: SortOrder
    contacto?: SortOrder
    id_administrador_establecimiento?: SortOrder
  }

  export type EstablecimientoSumOrderByAggregateInput = {
    id_establecimiento?: SortOrder
    id_administrador_establecimiento?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type EstablecimientoScalarRelationFilter = {
    is?: EstablecimientoWhereInput
    isNot?: EstablecimientoWhereInput
  }

  export type CategoriaTraduccionListRelationFilter = {
    every?: CategoriaTraduccionWhereInput
    some?: CategoriaTraduccionWhereInput
    none?: CategoriaTraduccionWhereInput
  }

  export type CategoriaTraduccionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CategoriaCountOrderByAggregateInput = {
    id_categoria?: SortOrder
    nombre?: SortOrder
    imagen_url?: SortOrder
    id_establecimiento?: SortOrder
    orden?: SortOrder
  }

  export type CategoriaAvgOrderByAggregateInput = {
    id_categoria?: SortOrder
    id_establecimiento?: SortOrder
    orden?: SortOrder
  }

  export type CategoriaMaxOrderByAggregateInput = {
    id_categoria?: SortOrder
    nombre?: SortOrder
    imagen_url?: SortOrder
    id_establecimiento?: SortOrder
    orden?: SortOrder
  }

  export type CategoriaMinOrderByAggregateInput = {
    id_categoria?: SortOrder
    nombre?: SortOrder
    imagen_url?: SortOrder
    id_establecimiento?: SortOrder
    orden?: SortOrder
  }

  export type CategoriaSumOrderByAggregateInput = {
    id_categoria?: SortOrder
    id_establecimiento?: SortOrder
    orden?: SortOrder
  }

  export type CategoriaScalarRelationFilter = {
    is?: CategoriaWhereInput
    isNot?: CategoriaWhereInput
  }

  export type CategoriaTraduccionId_categoriaIdiomaCompoundUniqueInput = {
    id_categoria: number
    idioma: string
  }

  export type CategoriaTraduccionCountOrderByAggregateInput = {
    id_traduccion?: SortOrder
    id_categoria?: SortOrder
    idioma?: SortOrder
    nombre?: SortOrder
  }

  export type CategoriaTraduccionAvgOrderByAggregateInput = {
    id_traduccion?: SortOrder
    id_categoria?: SortOrder
  }

  export type CategoriaTraduccionMaxOrderByAggregateInput = {
    id_traduccion?: SortOrder
    id_categoria?: SortOrder
    idioma?: SortOrder
    nombre?: SortOrder
  }

  export type CategoriaTraduccionMinOrderByAggregateInput = {
    id_traduccion?: SortOrder
    id_categoria?: SortOrder
    idioma?: SortOrder
    nombre?: SortOrder
  }

  export type CategoriaTraduccionSumOrderByAggregateInput = {
    id_traduccion?: SortOrder
    id_categoria?: SortOrder
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type DetallePedidoListRelationFilter = {
    every?: DetallePedidoWhereInput
    some?: DetallePedidoWhereInput
    none?: DetallePedidoWhereInput
  }

  export type ProductoTraduccionListRelationFilter = {
    every?: ProductoTraduccionWhereInput
    some?: ProductoTraduccionWhereInput
    none?: ProductoTraduccionWhereInput
  }

  export type DetallePedidoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductoTraduccionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductoCountOrderByAggregateInput = {
    id_producto?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    precio?: SortOrder
    imagen_url?: SortOrder
    id_categoria?: SortOrder
    id_establecimiento?: SortOrder
    orden?: SortOrder
  }

  export type ProductoAvgOrderByAggregateInput = {
    id_producto?: SortOrder
    precio?: SortOrder
    id_categoria?: SortOrder
    id_establecimiento?: SortOrder
    orden?: SortOrder
  }

  export type ProductoMaxOrderByAggregateInput = {
    id_producto?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    precio?: SortOrder
    imagen_url?: SortOrder
    id_categoria?: SortOrder
    id_establecimiento?: SortOrder
    orden?: SortOrder
  }

  export type ProductoMinOrderByAggregateInput = {
    id_producto?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    precio?: SortOrder
    imagen_url?: SortOrder
    id_categoria?: SortOrder
    id_establecimiento?: SortOrder
    orden?: SortOrder
  }

  export type ProductoSumOrderByAggregateInput = {
    id_producto?: SortOrder
    precio?: SortOrder
    id_categoria?: SortOrder
    id_establecimiento?: SortOrder
    orden?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type ProductoScalarRelationFilter = {
    is?: ProductoWhereInput
    isNot?: ProductoWhereInput
  }

  export type ProductoTraduccionId_productoIdiomaCompoundUniqueInput = {
    id_producto: number
    idioma: string
  }

  export type ProductoTraduccionCountOrderByAggregateInput = {
    id_traduccion?: SortOrder
    id_producto?: SortOrder
    idioma?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
  }

  export type ProductoTraduccionAvgOrderByAggregateInput = {
    id_traduccion?: SortOrder
    id_producto?: SortOrder
  }

  export type ProductoTraduccionMaxOrderByAggregateInput = {
    id_traduccion?: SortOrder
    id_producto?: SortOrder
    idioma?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
  }

  export type ProductoTraduccionMinOrderByAggregateInput = {
    id_traduccion?: SortOrder
    id_producto?: SortOrder
    idioma?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
  }

  export type ProductoTraduccionSumOrderByAggregateInput = {
    id_traduccion?: SortOrder
    id_producto?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type EnumEstadoPedidoGeneralNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoPedidoGeneral | EnumEstadoPedidoGeneralFieldRefInput<$PrismaModel> | null
    in?: $Enums.EstadoPedidoGeneral[] | ListEnumEstadoPedidoGeneralFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.EstadoPedidoGeneral[] | ListEnumEstadoPedidoGeneralFieldRefInput<$PrismaModel> | null
    not?: NestedEnumEstadoPedidoGeneralNullableFilter<$PrismaModel> | $Enums.EstadoPedidoGeneral | null
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type PedidoCountOrderByAggregateInput = {
    id_pedido?: SortOrder
    id_cliente?: SortOrder
    id_establecimiento?: SortOrder
    fecha_hora?: SortOrder
    estado?: SortOrder
    total?: SortOrder
    metodo_pago?: SortOrder
  }

  export type PedidoAvgOrderByAggregateInput = {
    id_pedido?: SortOrder
    id_cliente?: SortOrder
    id_establecimiento?: SortOrder
    total?: SortOrder
  }

  export type PedidoMaxOrderByAggregateInput = {
    id_pedido?: SortOrder
    id_cliente?: SortOrder
    id_establecimiento?: SortOrder
    fecha_hora?: SortOrder
    estado?: SortOrder
    total?: SortOrder
    metodo_pago?: SortOrder
  }

  export type PedidoMinOrderByAggregateInput = {
    id_pedido?: SortOrder
    id_cliente?: SortOrder
    id_establecimiento?: SortOrder
    fecha_hora?: SortOrder
    estado?: SortOrder
    total?: SortOrder
    metodo_pago?: SortOrder
  }

  export type PedidoSumOrderByAggregateInput = {
    id_pedido?: SortOrder
    id_cliente?: SortOrder
    id_establecimiento?: SortOrder
    total?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EnumEstadoPedidoGeneralNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoPedidoGeneral | EnumEstadoPedidoGeneralFieldRefInput<$PrismaModel> | null
    in?: $Enums.EstadoPedidoGeneral[] | ListEnumEstadoPedidoGeneralFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.EstadoPedidoGeneral[] | ListEnumEstadoPedidoGeneralFieldRefInput<$PrismaModel> | null
    not?: NestedEnumEstadoPedidoGeneralNullableWithAggregatesFilter<$PrismaModel> | $Enums.EstadoPedidoGeneral | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumEstadoPedidoGeneralNullableFilter<$PrismaModel>
    _max?: NestedEnumEstadoPedidoGeneralNullableFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type EnumEstadoItemPedidoNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoItemPedido | EnumEstadoItemPedidoFieldRefInput<$PrismaModel> | null
    in?: $Enums.EstadoItemPedido[] | ListEnumEstadoItemPedidoFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.EstadoItemPedido[] | ListEnumEstadoItemPedidoFieldRefInput<$PrismaModel> | null
    not?: NestedEnumEstadoItemPedidoNullableFilter<$PrismaModel> | $Enums.EstadoItemPedido | null
  }

  export type PedidoScalarRelationFilter = {
    is?: PedidoWhereInput
    isNot?: PedidoWhereInput
  }

  export type DetallePedidoCountOrderByAggregateInput = {
    id_detalle_pedido?: SortOrder
    id_pedido?: SortOrder
    id_producto?: SortOrder
    cantidad?: SortOrder
    especialidades?: SortOrder
    estado?: SortOrder
  }

  export type DetallePedidoAvgOrderByAggregateInput = {
    id_detalle_pedido?: SortOrder
    id_pedido?: SortOrder
    id_producto?: SortOrder
    cantidad?: SortOrder
  }

  export type DetallePedidoMaxOrderByAggregateInput = {
    id_detalle_pedido?: SortOrder
    id_pedido?: SortOrder
    id_producto?: SortOrder
    cantidad?: SortOrder
    especialidades?: SortOrder
    estado?: SortOrder
  }

  export type DetallePedidoMinOrderByAggregateInput = {
    id_detalle_pedido?: SortOrder
    id_pedido?: SortOrder
    id_producto?: SortOrder
    cantidad?: SortOrder
    especialidades?: SortOrder
    estado?: SortOrder
  }

  export type DetallePedidoSumOrderByAggregateInput = {
    id_detalle_pedido?: SortOrder
    id_pedido?: SortOrder
    id_producto?: SortOrder
    cantidad?: SortOrder
  }

  export type EnumEstadoItemPedidoNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoItemPedido | EnumEstadoItemPedidoFieldRefInput<$PrismaModel> | null
    in?: $Enums.EstadoItemPedido[] | ListEnumEstadoItemPedidoFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.EstadoItemPedido[] | ListEnumEstadoItemPedidoFieldRefInput<$PrismaModel> | null
    not?: NestedEnumEstadoItemPedidoNullableWithAggregatesFilter<$PrismaModel> | $Enums.EstadoItemPedido | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumEstadoItemPedidoNullableFilter<$PrismaModel>
    _max?: NestedEnumEstadoItemPedidoNullableFilter<$PrismaModel>
  }

  export type EnumEstadoPedidoGeneralFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoPedidoGeneral | EnumEstadoPedidoGeneralFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoPedidoGeneral[] | ListEnumEstadoPedidoGeneralFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoPedidoGeneral[] | ListEnumEstadoPedidoGeneralFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoPedidoGeneralFilter<$PrismaModel> | $Enums.EstadoPedidoGeneral
  }

  export type EstadoPedidoCountOrderByAggregateInput = {
    id_estado_pedido?: SortOrder
    id_pedido?: SortOrder
    id_usuario?: SortOrder
    estado?: SortOrder
    fecha_hora?: SortOrder
  }

  export type EstadoPedidoAvgOrderByAggregateInput = {
    id_estado_pedido?: SortOrder
    id_pedido?: SortOrder
    id_usuario?: SortOrder
  }

  export type EstadoPedidoMaxOrderByAggregateInput = {
    id_estado_pedido?: SortOrder
    id_pedido?: SortOrder
    id_usuario?: SortOrder
    estado?: SortOrder
    fecha_hora?: SortOrder
  }

  export type EstadoPedidoMinOrderByAggregateInput = {
    id_estado_pedido?: SortOrder
    id_pedido?: SortOrder
    id_usuario?: SortOrder
    estado?: SortOrder
    fecha_hora?: SortOrder
  }

  export type EstadoPedidoSumOrderByAggregateInput = {
    id_estado_pedido?: SortOrder
    id_pedido?: SortOrder
    id_usuario?: SortOrder
  }

  export type EnumEstadoPedidoGeneralWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoPedidoGeneral | EnumEstadoPedidoGeneralFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoPedidoGeneral[] | ListEnumEstadoPedidoGeneralFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoPedidoGeneral[] | ListEnumEstadoPedidoGeneralFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoPedidoGeneralWithAggregatesFilter<$PrismaModel> | $Enums.EstadoPedidoGeneral
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoPedidoGeneralFilter<$PrismaModel>
    _max?: NestedEnumEstadoPedidoGeneralFilter<$PrismaModel>
  }

  export type EstablecimientoCreateNestedOneWithoutAdministradorInput = {
    create?: XOR<EstablecimientoCreateWithoutAdministradorInput, EstablecimientoUncheckedCreateWithoutAdministradorInput>
    connectOrCreate?: EstablecimientoCreateOrConnectWithoutAdministradorInput
    connect?: EstablecimientoWhereUniqueInput
  }

  export type EstadoPedidoCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<EstadoPedidoCreateWithoutUsuarioInput, EstadoPedidoUncheckedCreateWithoutUsuarioInput> | EstadoPedidoCreateWithoutUsuarioInput[] | EstadoPedidoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: EstadoPedidoCreateOrConnectWithoutUsuarioInput | EstadoPedidoCreateOrConnectWithoutUsuarioInput[]
    createMany?: EstadoPedidoCreateManyUsuarioInputEnvelope
    connect?: EstadoPedidoWhereUniqueInput | EstadoPedidoWhereUniqueInput[]
  }

  export type PedidoCreateNestedManyWithoutClienteInput = {
    create?: XOR<PedidoCreateWithoutClienteInput, PedidoUncheckedCreateWithoutClienteInput> | PedidoCreateWithoutClienteInput[] | PedidoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutClienteInput | PedidoCreateOrConnectWithoutClienteInput[]
    createMany?: PedidoCreateManyClienteInputEnvelope
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
  }

  export type EstablecimientoCreateNestedOneWithoutEmpleadosInput = {
    create?: XOR<EstablecimientoCreateWithoutEmpleadosInput, EstablecimientoUncheckedCreateWithoutEmpleadosInput>
    connectOrCreate?: EstablecimientoCreateOrConnectWithoutEmpleadosInput
    connect?: EstablecimientoWhereUniqueInput
  }

  export type EstablecimientoUncheckedCreateNestedOneWithoutAdministradorInput = {
    create?: XOR<EstablecimientoCreateWithoutAdministradorInput, EstablecimientoUncheckedCreateWithoutAdministradorInput>
    connectOrCreate?: EstablecimientoCreateOrConnectWithoutAdministradorInput
    connect?: EstablecimientoWhereUniqueInput
  }

  export type EstadoPedidoUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<EstadoPedidoCreateWithoutUsuarioInput, EstadoPedidoUncheckedCreateWithoutUsuarioInput> | EstadoPedidoCreateWithoutUsuarioInput[] | EstadoPedidoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: EstadoPedidoCreateOrConnectWithoutUsuarioInput | EstadoPedidoCreateOrConnectWithoutUsuarioInput[]
    createMany?: EstadoPedidoCreateManyUsuarioInputEnvelope
    connect?: EstadoPedidoWhereUniqueInput | EstadoPedidoWhereUniqueInput[]
  }

  export type PedidoUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<PedidoCreateWithoutClienteInput, PedidoUncheckedCreateWithoutClienteInput> | PedidoCreateWithoutClienteInput[] | PedidoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutClienteInput | PedidoCreateOrConnectWithoutClienteInput[]
    createMany?: PedidoCreateManyClienteInputEnvelope
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
  }

  export type EnumRolUsuarioFieldUpdateOperationsInput = {
    set?: $Enums.RolUsuario
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type EstablecimientoUpdateOneWithoutAdministradorNestedInput = {
    create?: XOR<EstablecimientoCreateWithoutAdministradorInput, EstablecimientoUncheckedCreateWithoutAdministradorInput>
    connectOrCreate?: EstablecimientoCreateOrConnectWithoutAdministradorInput
    upsert?: EstablecimientoUpsertWithoutAdministradorInput
    disconnect?: EstablecimientoWhereInput | boolean
    delete?: EstablecimientoWhereInput | boolean
    connect?: EstablecimientoWhereUniqueInput
    update?: XOR<XOR<EstablecimientoUpdateToOneWithWhereWithoutAdministradorInput, EstablecimientoUpdateWithoutAdministradorInput>, EstablecimientoUncheckedUpdateWithoutAdministradorInput>
  }

  export type EstadoPedidoUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<EstadoPedidoCreateWithoutUsuarioInput, EstadoPedidoUncheckedCreateWithoutUsuarioInput> | EstadoPedidoCreateWithoutUsuarioInput[] | EstadoPedidoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: EstadoPedidoCreateOrConnectWithoutUsuarioInput | EstadoPedidoCreateOrConnectWithoutUsuarioInput[]
    upsert?: EstadoPedidoUpsertWithWhereUniqueWithoutUsuarioInput | EstadoPedidoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: EstadoPedidoCreateManyUsuarioInputEnvelope
    set?: EstadoPedidoWhereUniqueInput | EstadoPedidoWhereUniqueInput[]
    disconnect?: EstadoPedidoWhereUniqueInput | EstadoPedidoWhereUniqueInput[]
    delete?: EstadoPedidoWhereUniqueInput | EstadoPedidoWhereUniqueInput[]
    connect?: EstadoPedidoWhereUniqueInput | EstadoPedidoWhereUniqueInput[]
    update?: EstadoPedidoUpdateWithWhereUniqueWithoutUsuarioInput | EstadoPedidoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: EstadoPedidoUpdateManyWithWhereWithoutUsuarioInput | EstadoPedidoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: EstadoPedidoScalarWhereInput | EstadoPedidoScalarWhereInput[]
  }

  export type PedidoUpdateManyWithoutClienteNestedInput = {
    create?: XOR<PedidoCreateWithoutClienteInput, PedidoUncheckedCreateWithoutClienteInput> | PedidoCreateWithoutClienteInput[] | PedidoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutClienteInput | PedidoCreateOrConnectWithoutClienteInput[]
    upsert?: PedidoUpsertWithWhereUniqueWithoutClienteInput | PedidoUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: PedidoCreateManyClienteInputEnvelope
    set?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    disconnect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    delete?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    update?: PedidoUpdateWithWhereUniqueWithoutClienteInput | PedidoUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: PedidoUpdateManyWithWhereWithoutClienteInput | PedidoUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
  }

  export type EstablecimientoUpdateOneWithoutEmpleadosNestedInput = {
    create?: XOR<EstablecimientoCreateWithoutEmpleadosInput, EstablecimientoUncheckedCreateWithoutEmpleadosInput>
    connectOrCreate?: EstablecimientoCreateOrConnectWithoutEmpleadosInput
    upsert?: EstablecimientoUpsertWithoutEmpleadosInput
    disconnect?: EstablecimientoWhereInput | boolean
    delete?: EstablecimientoWhereInput | boolean
    connect?: EstablecimientoWhereUniqueInput
    update?: XOR<XOR<EstablecimientoUpdateToOneWithWhereWithoutEmpleadosInput, EstablecimientoUpdateWithoutEmpleadosInput>, EstablecimientoUncheckedUpdateWithoutEmpleadosInput>
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EstablecimientoUncheckedUpdateOneWithoutAdministradorNestedInput = {
    create?: XOR<EstablecimientoCreateWithoutAdministradorInput, EstablecimientoUncheckedCreateWithoutAdministradorInput>
    connectOrCreate?: EstablecimientoCreateOrConnectWithoutAdministradorInput
    upsert?: EstablecimientoUpsertWithoutAdministradorInput
    disconnect?: EstablecimientoWhereInput | boolean
    delete?: EstablecimientoWhereInput | boolean
    connect?: EstablecimientoWhereUniqueInput
    update?: XOR<XOR<EstablecimientoUpdateToOneWithWhereWithoutAdministradorInput, EstablecimientoUpdateWithoutAdministradorInput>, EstablecimientoUncheckedUpdateWithoutAdministradorInput>
  }

  export type EstadoPedidoUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<EstadoPedidoCreateWithoutUsuarioInput, EstadoPedidoUncheckedCreateWithoutUsuarioInput> | EstadoPedidoCreateWithoutUsuarioInput[] | EstadoPedidoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: EstadoPedidoCreateOrConnectWithoutUsuarioInput | EstadoPedidoCreateOrConnectWithoutUsuarioInput[]
    upsert?: EstadoPedidoUpsertWithWhereUniqueWithoutUsuarioInput | EstadoPedidoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: EstadoPedidoCreateManyUsuarioInputEnvelope
    set?: EstadoPedidoWhereUniqueInput | EstadoPedidoWhereUniqueInput[]
    disconnect?: EstadoPedidoWhereUniqueInput | EstadoPedidoWhereUniqueInput[]
    delete?: EstadoPedidoWhereUniqueInput | EstadoPedidoWhereUniqueInput[]
    connect?: EstadoPedidoWhereUniqueInput | EstadoPedidoWhereUniqueInput[]
    update?: EstadoPedidoUpdateWithWhereUniqueWithoutUsuarioInput | EstadoPedidoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: EstadoPedidoUpdateManyWithWhereWithoutUsuarioInput | EstadoPedidoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: EstadoPedidoScalarWhereInput | EstadoPedidoScalarWhereInput[]
  }

  export type PedidoUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<PedidoCreateWithoutClienteInput, PedidoUncheckedCreateWithoutClienteInput> | PedidoCreateWithoutClienteInput[] | PedidoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutClienteInput | PedidoCreateOrConnectWithoutClienteInput[]
    upsert?: PedidoUpsertWithWhereUniqueWithoutClienteInput | PedidoUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: PedidoCreateManyClienteInputEnvelope
    set?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    disconnect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    delete?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    update?: PedidoUpdateWithWhereUniqueWithoutClienteInput | PedidoUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: PedidoUpdateManyWithWhereWithoutClienteInput | PedidoUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
  }

  export type CategoriaCreateNestedManyWithoutEstablecimientoInput = {
    create?: XOR<CategoriaCreateWithoutEstablecimientoInput, CategoriaUncheckedCreateWithoutEstablecimientoInput> | CategoriaCreateWithoutEstablecimientoInput[] | CategoriaUncheckedCreateWithoutEstablecimientoInput[]
    connectOrCreate?: CategoriaCreateOrConnectWithoutEstablecimientoInput | CategoriaCreateOrConnectWithoutEstablecimientoInput[]
    createMany?: CategoriaCreateManyEstablecimientoInputEnvelope
    connect?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
  }

  export type UsuarioCreateNestedOneWithoutAdministraInput = {
    create?: XOR<UsuarioCreateWithoutAdministraInput, UsuarioUncheckedCreateWithoutAdministraInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutAdministraInput
    connect?: UsuarioWhereUniqueInput
  }

  export type PedidoCreateNestedManyWithoutEstablecimientoInput = {
    create?: XOR<PedidoCreateWithoutEstablecimientoInput, PedidoUncheckedCreateWithoutEstablecimientoInput> | PedidoCreateWithoutEstablecimientoInput[] | PedidoUncheckedCreateWithoutEstablecimientoInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutEstablecimientoInput | PedidoCreateOrConnectWithoutEstablecimientoInput[]
    createMany?: PedidoCreateManyEstablecimientoInputEnvelope
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
  }

  export type ProductoCreateNestedManyWithoutEstablecimientoInput = {
    create?: XOR<ProductoCreateWithoutEstablecimientoInput, ProductoUncheckedCreateWithoutEstablecimientoInput> | ProductoCreateWithoutEstablecimientoInput[] | ProductoUncheckedCreateWithoutEstablecimientoInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutEstablecimientoInput | ProductoCreateOrConnectWithoutEstablecimientoInput[]
    createMany?: ProductoCreateManyEstablecimientoInputEnvelope
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
  }

  export type UsuarioCreateNestedManyWithoutEstablecimientoInput = {
    create?: XOR<UsuarioCreateWithoutEstablecimientoInput, UsuarioUncheckedCreateWithoutEstablecimientoInput> | UsuarioCreateWithoutEstablecimientoInput[] | UsuarioUncheckedCreateWithoutEstablecimientoInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutEstablecimientoInput | UsuarioCreateOrConnectWithoutEstablecimientoInput[]
    createMany?: UsuarioCreateManyEstablecimientoInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type CategoriaUncheckedCreateNestedManyWithoutEstablecimientoInput = {
    create?: XOR<CategoriaCreateWithoutEstablecimientoInput, CategoriaUncheckedCreateWithoutEstablecimientoInput> | CategoriaCreateWithoutEstablecimientoInput[] | CategoriaUncheckedCreateWithoutEstablecimientoInput[]
    connectOrCreate?: CategoriaCreateOrConnectWithoutEstablecimientoInput | CategoriaCreateOrConnectWithoutEstablecimientoInput[]
    createMany?: CategoriaCreateManyEstablecimientoInputEnvelope
    connect?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
  }

  export type PedidoUncheckedCreateNestedManyWithoutEstablecimientoInput = {
    create?: XOR<PedidoCreateWithoutEstablecimientoInput, PedidoUncheckedCreateWithoutEstablecimientoInput> | PedidoCreateWithoutEstablecimientoInput[] | PedidoUncheckedCreateWithoutEstablecimientoInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutEstablecimientoInput | PedidoCreateOrConnectWithoutEstablecimientoInput[]
    createMany?: PedidoCreateManyEstablecimientoInputEnvelope
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
  }

  export type ProductoUncheckedCreateNestedManyWithoutEstablecimientoInput = {
    create?: XOR<ProductoCreateWithoutEstablecimientoInput, ProductoUncheckedCreateWithoutEstablecimientoInput> | ProductoCreateWithoutEstablecimientoInput[] | ProductoUncheckedCreateWithoutEstablecimientoInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutEstablecimientoInput | ProductoCreateOrConnectWithoutEstablecimientoInput[]
    createMany?: ProductoCreateManyEstablecimientoInputEnvelope
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
  }

  export type UsuarioUncheckedCreateNestedManyWithoutEstablecimientoInput = {
    create?: XOR<UsuarioCreateWithoutEstablecimientoInput, UsuarioUncheckedCreateWithoutEstablecimientoInput> | UsuarioCreateWithoutEstablecimientoInput[] | UsuarioUncheckedCreateWithoutEstablecimientoInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutEstablecimientoInput | UsuarioCreateOrConnectWithoutEstablecimientoInput[]
    createMany?: UsuarioCreateManyEstablecimientoInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type CategoriaUpdateManyWithoutEstablecimientoNestedInput = {
    create?: XOR<CategoriaCreateWithoutEstablecimientoInput, CategoriaUncheckedCreateWithoutEstablecimientoInput> | CategoriaCreateWithoutEstablecimientoInput[] | CategoriaUncheckedCreateWithoutEstablecimientoInput[]
    connectOrCreate?: CategoriaCreateOrConnectWithoutEstablecimientoInput | CategoriaCreateOrConnectWithoutEstablecimientoInput[]
    upsert?: CategoriaUpsertWithWhereUniqueWithoutEstablecimientoInput | CategoriaUpsertWithWhereUniqueWithoutEstablecimientoInput[]
    createMany?: CategoriaCreateManyEstablecimientoInputEnvelope
    set?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
    disconnect?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
    delete?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
    connect?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
    update?: CategoriaUpdateWithWhereUniqueWithoutEstablecimientoInput | CategoriaUpdateWithWhereUniqueWithoutEstablecimientoInput[]
    updateMany?: CategoriaUpdateManyWithWhereWithoutEstablecimientoInput | CategoriaUpdateManyWithWhereWithoutEstablecimientoInput[]
    deleteMany?: CategoriaScalarWhereInput | CategoriaScalarWhereInput[]
  }

  export type UsuarioUpdateOneWithoutAdministraNestedInput = {
    create?: XOR<UsuarioCreateWithoutAdministraInput, UsuarioUncheckedCreateWithoutAdministraInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutAdministraInput
    upsert?: UsuarioUpsertWithoutAdministraInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutAdministraInput, UsuarioUpdateWithoutAdministraInput>, UsuarioUncheckedUpdateWithoutAdministraInput>
  }

  export type PedidoUpdateManyWithoutEstablecimientoNestedInput = {
    create?: XOR<PedidoCreateWithoutEstablecimientoInput, PedidoUncheckedCreateWithoutEstablecimientoInput> | PedidoCreateWithoutEstablecimientoInput[] | PedidoUncheckedCreateWithoutEstablecimientoInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutEstablecimientoInput | PedidoCreateOrConnectWithoutEstablecimientoInput[]
    upsert?: PedidoUpsertWithWhereUniqueWithoutEstablecimientoInput | PedidoUpsertWithWhereUniqueWithoutEstablecimientoInput[]
    createMany?: PedidoCreateManyEstablecimientoInputEnvelope
    set?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    disconnect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    delete?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    update?: PedidoUpdateWithWhereUniqueWithoutEstablecimientoInput | PedidoUpdateWithWhereUniqueWithoutEstablecimientoInput[]
    updateMany?: PedidoUpdateManyWithWhereWithoutEstablecimientoInput | PedidoUpdateManyWithWhereWithoutEstablecimientoInput[]
    deleteMany?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
  }

  export type ProductoUpdateManyWithoutEstablecimientoNestedInput = {
    create?: XOR<ProductoCreateWithoutEstablecimientoInput, ProductoUncheckedCreateWithoutEstablecimientoInput> | ProductoCreateWithoutEstablecimientoInput[] | ProductoUncheckedCreateWithoutEstablecimientoInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutEstablecimientoInput | ProductoCreateOrConnectWithoutEstablecimientoInput[]
    upsert?: ProductoUpsertWithWhereUniqueWithoutEstablecimientoInput | ProductoUpsertWithWhereUniqueWithoutEstablecimientoInput[]
    createMany?: ProductoCreateManyEstablecimientoInputEnvelope
    set?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    disconnect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    delete?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    update?: ProductoUpdateWithWhereUniqueWithoutEstablecimientoInput | ProductoUpdateWithWhereUniqueWithoutEstablecimientoInput[]
    updateMany?: ProductoUpdateManyWithWhereWithoutEstablecimientoInput | ProductoUpdateManyWithWhereWithoutEstablecimientoInput[]
    deleteMany?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
  }

  export type UsuarioUpdateManyWithoutEstablecimientoNestedInput = {
    create?: XOR<UsuarioCreateWithoutEstablecimientoInput, UsuarioUncheckedCreateWithoutEstablecimientoInput> | UsuarioCreateWithoutEstablecimientoInput[] | UsuarioUncheckedCreateWithoutEstablecimientoInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutEstablecimientoInput | UsuarioCreateOrConnectWithoutEstablecimientoInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutEstablecimientoInput | UsuarioUpsertWithWhereUniqueWithoutEstablecimientoInput[]
    createMany?: UsuarioCreateManyEstablecimientoInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutEstablecimientoInput | UsuarioUpdateWithWhereUniqueWithoutEstablecimientoInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutEstablecimientoInput | UsuarioUpdateManyWithWhereWithoutEstablecimientoInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type CategoriaUncheckedUpdateManyWithoutEstablecimientoNestedInput = {
    create?: XOR<CategoriaCreateWithoutEstablecimientoInput, CategoriaUncheckedCreateWithoutEstablecimientoInput> | CategoriaCreateWithoutEstablecimientoInput[] | CategoriaUncheckedCreateWithoutEstablecimientoInput[]
    connectOrCreate?: CategoriaCreateOrConnectWithoutEstablecimientoInput | CategoriaCreateOrConnectWithoutEstablecimientoInput[]
    upsert?: CategoriaUpsertWithWhereUniqueWithoutEstablecimientoInput | CategoriaUpsertWithWhereUniqueWithoutEstablecimientoInput[]
    createMany?: CategoriaCreateManyEstablecimientoInputEnvelope
    set?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
    disconnect?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
    delete?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
    connect?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
    update?: CategoriaUpdateWithWhereUniqueWithoutEstablecimientoInput | CategoriaUpdateWithWhereUniqueWithoutEstablecimientoInput[]
    updateMany?: CategoriaUpdateManyWithWhereWithoutEstablecimientoInput | CategoriaUpdateManyWithWhereWithoutEstablecimientoInput[]
    deleteMany?: CategoriaScalarWhereInput | CategoriaScalarWhereInput[]
  }

  export type PedidoUncheckedUpdateManyWithoutEstablecimientoNestedInput = {
    create?: XOR<PedidoCreateWithoutEstablecimientoInput, PedidoUncheckedCreateWithoutEstablecimientoInput> | PedidoCreateWithoutEstablecimientoInput[] | PedidoUncheckedCreateWithoutEstablecimientoInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutEstablecimientoInput | PedidoCreateOrConnectWithoutEstablecimientoInput[]
    upsert?: PedidoUpsertWithWhereUniqueWithoutEstablecimientoInput | PedidoUpsertWithWhereUniqueWithoutEstablecimientoInput[]
    createMany?: PedidoCreateManyEstablecimientoInputEnvelope
    set?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    disconnect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    delete?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    update?: PedidoUpdateWithWhereUniqueWithoutEstablecimientoInput | PedidoUpdateWithWhereUniqueWithoutEstablecimientoInput[]
    updateMany?: PedidoUpdateManyWithWhereWithoutEstablecimientoInput | PedidoUpdateManyWithWhereWithoutEstablecimientoInput[]
    deleteMany?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
  }

  export type ProductoUncheckedUpdateManyWithoutEstablecimientoNestedInput = {
    create?: XOR<ProductoCreateWithoutEstablecimientoInput, ProductoUncheckedCreateWithoutEstablecimientoInput> | ProductoCreateWithoutEstablecimientoInput[] | ProductoUncheckedCreateWithoutEstablecimientoInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutEstablecimientoInput | ProductoCreateOrConnectWithoutEstablecimientoInput[]
    upsert?: ProductoUpsertWithWhereUniqueWithoutEstablecimientoInput | ProductoUpsertWithWhereUniqueWithoutEstablecimientoInput[]
    createMany?: ProductoCreateManyEstablecimientoInputEnvelope
    set?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    disconnect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    delete?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    update?: ProductoUpdateWithWhereUniqueWithoutEstablecimientoInput | ProductoUpdateWithWhereUniqueWithoutEstablecimientoInput[]
    updateMany?: ProductoUpdateManyWithWhereWithoutEstablecimientoInput | ProductoUpdateManyWithWhereWithoutEstablecimientoInput[]
    deleteMany?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
  }

  export type UsuarioUncheckedUpdateManyWithoutEstablecimientoNestedInput = {
    create?: XOR<UsuarioCreateWithoutEstablecimientoInput, UsuarioUncheckedCreateWithoutEstablecimientoInput> | UsuarioCreateWithoutEstablecimientoInput[] | UsuarioUncheckedCreateWithoutEstablecimientoInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutEstablecimientoInput | UsuarioCreateOrConnectWithoutEstablecimientoInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutEstablecimientoInput | UsuarioUpsertWithWhereUniqueWithoutEstablecimientoInput[]
    createMany?: UsuarioCreateManyEstablecimientoInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutEstablecimientoInput | UsuarioUpdateWithWhereUniqueWithoutEstablecimientoInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutEstablecimientoInput | UsuarioUpdateManyWithWhereWithoutEstablecimientoInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type EstablecimientoCreateNestedOneWithoutCategoriasInput = {
    create?: XOR<EstablecimientoCreateWithoutCategoriasInput, EstablecimientoUncheckedCreateWithoutCategoriasInput>
    connectOrCreate?: EstablecimientoCreateOrConnectWithoutCategoriasInput
    connect?: EstablecimientoWhereUniqueInput
  }

  export type CategoriaTraduccionCreateNestedManyWithoutCategoriaInput = {
    create?: XOR<CategoriaTraduccionCreateWithoutCategoriaInput, CategoriaTraduccionUncheckedCreateWithoutCategoriaInput> | CategoriaTraduccionCreateWithoutCategoriaInput[] | CategoriaTraduccionUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: CategoriaTraduccionCreateOrConnectWithoutCategoriaInput | CategoriaTraduccionCreateOrConnectWithoutCategoriaInput[]
    createMany?: CategoriaTraduccionCreateManyCategoriaInputEnvelope
    connect?: CategoriaTraduccionWhereUniqueInput | CategoriaTraduccionWhereUniqueInput[]
  }

  export type ProductoCreateNestedManyWithoutCategoriaInput = {
    create?: XOR<ProductoCreateWithoutCategoriaInput, ProductoUncheckedCreateWithoutCategoriaInput> | ProductoCreateWithoutCategoriaInput[] | ProductoUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutCategoriaInput | ProductoCreateOrConnectWithoutCategoriaInput[]
    createMany?: ProductoCreateManyCategoriaInputEnvelope
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
  }

  export type CategoriaTraduccionUncheckedCreateNestedManyWithoutCategoriaInput = {
    create?: XOR<CategoriaTraduccionCreateWithoutCategoriaInput, CategoriaTraduccionUncheckedCreateWithoutCategoriaInput> | CategoriaTraduccionCreateWithoutCategoriaInput[] | CategoriaTraduccionUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: CategoriaTraduccionCreateOrConnectWithoutCategoriaInput | CategoriaTraduccionCreateOrConnectWithoutCategoriaInput[]
    createMany?: CategoriaTraduccionCreateManyCategoriaInputEnvelope
    connect?: CategoriaTraduccionWhereUniqueInput | CategoriaTraduccionWhereUniqueInput[]
  }

  export type ProductoUncheckedCreateNestedManyWithoutCategoriaInput = {
    create?: XOR<ProductoCreateWithoutCategoriaInput, ProductoUncheckedCreateWithoutCategoriaInput> | ProductoCreateWithoutCategoriaInput[] | ProductoUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutCategoriaInput | ProductoCreateOrConnectWithoutCategoriaInput[]
    createMany?: ProductoCreateManyCategoriaInputEnvelope
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
  }

  export type EstablecimientoUpdateOneRequiredWithoutCategoriasNestedInput = {
    create?: XOR<EstablecimientoCreateWithoutCategoriasInput, EstablecimientoUncheckedCreateWithoutCategoriasInput>
    connectOrCreate?: EstablecimientoCreateOrConnectWithoutCategoriasInput
    upsert?: EstablecimientoUpsertWithoutCategoriasInput
    connect?: EstablecimientoWhereUniqueInput
    update?: XOR<XOR<EstablecimientoUpdateToOneWithWhereWithoutCategoriasInput, EstablecimientoUpdateWithoutCategoriasInput>, EstablecimientoUncheckedUpdateWithoutCategoriasInput>
  }

  export type CategoriaTraduccionUpdateManyWithoutCategoriaNestedInput = {
    create?: XOR<CategoriaTraduccionCreateWithoutCategoriaInput, CategoriaTraduccionUncheckedCreateWithoutCategoriaInput> | CategoriaTraduccionCreateWithoutCategoriaInput[] | CategoriaTraduccionUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: CategoriaTraduccionCreateOrConnectWithoutCategoriaInput | CategoriaTraduccionCreateOrConnectWithoutCategoriaInput[]
    upsert?: CategoriaTraduccionUpsertWithWhereUniqueWithoutCategoriaInput | CategoriaTraduccionUpsertWithWhereUniqueWithoutCategoriaInput[]
    createMany?: CategoriaTraduccionCreateManyCategoriaInputEnvelope
    set?: CategoriaTraduccionWhereUniqueInput | CategoriaTraduccionWhereUniqueInput[]
    disconnect?: CategoriaTraduccionWhereUniqueInput | CategoriaTraduccionWhereUniqueInput[]
    delete?: CategoriaTraduccionWhereUniqueInput | CategoriaTraduccionWhereUniqueInput[]
    connect?: CategoriaTraduccionWhereUniqueInput | CategoriaTraduccionWhereUniqueInput[]
    update?: CategoriaTraduccionUpdateWithWhereUniqueWithoutCategoriaInput | CategoriaTraduccionUpdateWithWhereUniqueWithoutCategoriaInput[]
    updateMany?: CategoriaTraduccionUpdateManyWithWhereWithoutCategoriaInput | CategoriaTraduccionUpdateManyWithWhereWithoutCategoriaInput[]
    deleteMany?: CategoriaTraduccionScalarWhereInput | CategoriaTraduccionScalarWhereInput[]
  }

  export type ProductoUpdateManyWithoutCategoriaNestedInput = {
    create?: XOR<ProductoCreateWithoutCategoriaInput, ProductoUncheckedCreateWithoutCategoriaInput> | ProductoCreateWithoutCategoriaInput[] | ProductoUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutCategoriaInput | ProductoCreateOrConnectWithoutCategoriaInput[]
    upsert?: ProductoUpsertWithWhereUniqueWithoutCategoriaInput | ProductoUpsertWithWhereUniqueWithoutCategoriaInput[]
    createMany?: ProductoCreateManyCategoriaInputEnvelope
    set?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    disconnect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    delete?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    update?: ProductoUpdateWithWhereUniqueWithoutCategoriaInput | ProductoUpdateWithWhereUniqueWithoutCategoriaInput[]
    updateMany?: ProductoUpdateManyWithWhereWithoutCategoriaInput | ProductoUpdateManyWithWhereWithoutCategoriaInput[]
    deleteMany?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
  }

  export type CategoriaTraduccionUncheckedUpdateManyWithoutCategoriaNestedInput = {
    create?: XOR<CategoriaTraduccionCreateWithoutCategoriaInput, CategoriaTraduccionUncheckedCreateWithoutCategoriaInput> | CategoriaTraduccionCreateWithoutCategoriaInput[] | CategoriaTraduccionUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: CategoriaTraduccionCreateOrConnectWithoutCategoriaInput | CategoriaTraduccionCreateOrConnectWithoutCategoriaInput[]
    upsert?: CategoriaTraduccionUpsertWithWhereUniqueWithoutCategoriaInput | CategoriaTraduccionUpsertWithWhereUniqueWithoutCategoriaInput[]
    createMany?: CategoriaTraduccionCreateManyCategoriaInputEnvelope
    set?: CategoriaTraduccionWhereUniqueInput | CategoriaTraduccionWhereUniqueInput[]
    disconnect?: CategoriaTraduccionWhereUniqueInput | CategoriaTraduccionWhereUniqueInput[]
    delete?: CategoriaTraduccionWhereUniqueInput | CategoriaTraduccionWhereUniqueInput[]
    connect?: CategoriaTraduccionWhereUniqueInput | CategoriaTraduccionWhereUniqueInput[]
    update?: CategoriaTraduccionUpdateWithWhereUniqueWithoutCategoriaInput | CategoriaTraduccionUpdateWithWhereUniqueWithoutCategoriaInput[]
    updateMany?: CategoriaTraduccionUpdateManyWithWhereWithoutCategoriaInput | CategoriaTraduccionUpdateManyWithWhereWithoutCategoriaInput[]
    deleteMany?: CategoriaTraduccionScalarWhereInput | CategoriaTraduccionScalarWhereInput[]
  }

  export type ProductoUncheckedUpdateManyWithoutCategoriaNestedInput = {
    create?: XOR<ProductoCreateWithoutCategoriaInput, ProductoUncheckedCreateWithoutCategoriaInput> | ProductoCreateWithoutCategoriaInput[] | ProductoUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutCategoriaInput | ProductoCreateOrConnectWithoutCategoriaInput[]
    upsert?: ProductoUpsertWithWhereUniqueWithoutCategoriaInput | ProductoUpsertWithWhereUniqueWithoutCategoriaInput[]
    createMany?: ProductoCreateManyCategoriaInputEnvelope
    set?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    disconnect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    delete?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    update?: ProductoUpdateWithWhereUniqueWithoutCategoriaInput | ProductoUpdateWithWhereUniqueWithoutCategoriaInput[]
    updateMany?: ProductoUpdateManyWithWhereWithoutCategoriaInput | ProductoUpdateManyWithWhereWithoutCategoriaInput[]
    deleteMany?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
  }

  export type CategoriaCreateNestedOneWithoutCategoriaTraduccionInput = {
    create?: XOR<CategoriaCreateWithoutCategoriaTraduccionInput, CategoriaUncheckedCreateWithoutCategoriaTraduccionInput>
    connectOrCreate?: CategoriaCreateOrConnectWithoutCategoriaTraduccionInput
    connect?: CategoriaWhereUniqueInput
  }

  export type CategoriaUpdateOneRequiredWithoutCategoriaTraduccionNestedInput = {
    create?: XOR<CategoriaCreateWithoutCategoriaTraduccionInput, CategoriaUncheckedCreateWithoutCategoriaTraduccionInput>
    connectOrCreate?: CategoriaCreateOrConnectWithoutCategoriaTraduccionInput
    upsert?: CategoriaUpsertWithoutCategoriaTraduccionInput
    connect?: CategoriaWhereUniqueInput
    update?: XOR<XOR<CategoriaUpdateToOneWithWhereWithoutCategoriaTraduccionInput, CategoriaUpdateWithoutCategoriaTraduccionInput>, CategoriaUncheckedUpdateWithoutCategoriaTraduccionInput>
  }

  export type DetallePedidoCreateNestedManyWithoutProductoInput = {
    create?: XOR<DetallePedidoCreateWithoutProductoInput, DetallePedidoUncheckedCreateWithoutProductoInput> | DetallePedidoCreateWithoutProductoInput[] | DetallePedidoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: DetallePedidoCreateOrConnectWithoutProductoInput | DetallePedidoCreateOrConnectWithoutProductoInput[]
    createMany?: DetallePedidoCreateManyProductoInputEnvelope
    connect?: DetallePedidoWhereUniqueInput | DetallePedidoWhereUniqueInput[]
  }

  export type CategoriaCreateNestedOneWithoutProductosInput = {
    create?: XOR<CategoriaCreateWithoutProductosInput, CategoriaUncheckedCreateWithoutProductosInput>
    connectOrCreate?: CategoriaCreateOrConnectWithoutProductosInput
    connect?: CategoriaWhereUniqueInput
  }

  export type EstablecimientoCreateNestedOneWithoutProductosInput = {
    create?: XOR<EstablecimientoCreateWithoutProductosInput, EstablecimientoUncheckedCreateWithoutProductosInput>
    connectOrCreate?: EstablecimientoCreateOrConnectWithoutProductosInput
    connect?: EstablecimientoWhereUniqueInput
  }

  export type ProductoTraduccionCreateNestedManyWithoutProductoInput = {
    create?: XOR<ProductoTraduccionCreateWithoutProductoInput, ProductoTraduccionUncheckedCreateWithoutProductoInput> | ProductoTraduccionCreateWithoutProductoInput[] | ProductoTraduccionUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: ProductoTraduccionCreateOrConnectWithoutProductoInput | ProductoTraduccionCreateOrConnectWithoutProductoInput[]
    createMany?: ProductoTraduccionCreateManyProductoInputEnvelope
    connect?: ProductoTraduccionWhereUniqueInput | ProductoTraduccionWhereUniqueInput[]
  }

  export type DetallePedidoUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<DetallePedidoCreateWithoutProductoInput, DetallePedidoUncheckedCreateWithoutProductoInput> | DetallePedidoCreateWithoutProductoInput[] | DetallePedidoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: DetallePedidoCreateOrConnectWithoutProductoInput | DetallePedidoCreateOrConnectWithoutProductoInput[]
    createMany?: DetallePedidoCreateManyProductoInputEnvelope
    connect?: DetallePedidoWhereUniqueInput | DetallePedidoWhereUniqueInput[]
  }

  export type ProductoTraduccionUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<ProductoTraduccionCreateWithoutProductoInput, ProductoTraduccionUncheckedCreateWithoutProductoInput> | ProductoTraduccionCreateWithoutProductoInput[] | ProductoTraduccionUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: ProductoTraduccionCreateOrConnectWithoutProductoInput | ProductoTraduccionCreateOrConnectWithoutProductoInput[]
    createMany?: ProductoTraduccionCreateManyProductoInputEnvelope
    connect?: ProductoTraduccionWhereUniqueInput | ProductoTraduccionWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type DetallePedidoUpdateManyWithoutProductoNestedInput = {
    create?: XOR<DetallePedidoCreateWithoutProductoInput, DetallePedidoUncheckedCreateWithoutProductoInput> | DetallePedidoCreateWithoutProductoInput[] | DetallePedidoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: DetallePedidoCreateOrConnectWithoutProductoInput | DetallePedidoCreateOrConnectWithoutProductoInput[]
    upsert?: DetallePedidoUpsertWithWhereUniqueWithoutProductoInput | DetallePedidoUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: DetallePedidoCreateManyProductoInputEnvelope
    set?: DetallePedidoWhereUniqueInput | DetallePedidoWhereUniqueInput[]
    disconnect?: DetallePedidoWhereUniqueInput | DetallePedidoWhereUniqueInput[]
    delete?: DetallePedidoWhereUniqueInput | DetallePedidoWhereUniqueInput[]
    connect?: DetallePedidoWhereUniqueInput | DetallePedidoWhereUniqueInput[]
    update?: DetallePedidoUpdateWithWhereUniqueWithoutProductoInput | DetallePedidoUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: DetallePedidoUpdateManyWithWhereWithoutProductoInput | DetallePedidoUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: DetallePedidoScalarWhereInput | DetallePedidoScalarWhereInput[]
  }

  export type CategoriaUpdateOneRequiredWithoutProductosNestedInput = {
    create?: XOR<CategoriaCreateWithoutProductosInput, CategoriaUncheckedCreateWithoutProductosInput>
    connectOrCreate?: CategoriaCreateOrConnectWithoutProductosInput
    upsert?: CategoriaUpsertWithoutProductosInput
    connect?: CategoriaWhereUniqueInput
    update?: XOR<XOR<CategoriaUpdateToOneWithWhereWithoutProductosInput, CategoriaUpdateWithoutProductosInput>, CategoriaUncheckedUpdateWithoutProductosInput>
  }

  export type EstablecimientoUpdateOneRequiredWithoutProductosNestedInput = {
    create?: XOR<EstablecimientoCreateWithoutProductosInput, EstablecimientoUncheckedCreateWithoutProductosInput>
    connectOrCreate?: EstablecimientoCreateOrConnectWithoutProductosInput
    upsert?: EstablecimientoUpsertWithoutProductosInput
    connect?: EstablecimientoWhereUniqueInput
    update?: XOR<XOR<EstablecimientoUpdateToOneWithWhereWithoutProductosInput, EstablecimientoUpdateWithoutProductosInput>, EstablecimientoUncheckedUpdateWithoutProductosInput>
  }

  export type ProductoTraduccionUpdateManyWithoutProductoNestedInput = {
    create?: XOR<ProductoTraduccionCreateWithoutProductoInput, ProductoTraduccionUncheckedCreateWithoutProductoInput> | ProductoTraduccionCreateWithoutProductoInput[] | ProductoTraduccionUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: ProductoTraduccionCreateOrConnectWithoutProductoInput | ProductoTraduccionCreateOrConnectWithoutProductoInput[]
    upsert?: ProductoTraduccionUpsertWithWhereUniqueWithoutProductoInput | ProductoTraduccionUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: ProductoTraduccionCreateManyProductoInputEnvelope
    set?: ProductoTraduccionWhereUniqueInput | ProductoTraduccionWhereUniqueInput[]
    disconnect?: ProductoTraduccionWhereUniqueInput | ProductoTraduccionWhereUniqueInput[]
    delete?: ProductoTraduccionWhereUniqueInput | ProductoTraduccionWhereUniqueInput[]
    connect?: ProductoTraduccionWhereUniqueInput | ProductoTraduccionWhereUniqueInput[]
    update?: ProductoTraduccionUpdateWithWhereUniqueWithoutProductoInput | ProductoTraduccionUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: ProductoTraduccionUpdateManyWithWhereWithoutProductoInput | ProductoTraduccionUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: ProductoTraduccionScalarWhereInput | ProductoTraduccionScalarWhereInput[]
  }

  export type DetallePedidoUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<DetallePedidoCreateWithoutProductoInput, DetallePedidoUncheckedCreateWithoutProductoInput> | DetallePedidoCreateWithoutProductoInput[] | DetallePedidoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: DetallePedidoCreateOrConnectWithoutProductoInput | DetallePedidoCreateOrConnectWithoutProductoInput[]
    upsert?: DetallePedidoUpsertWithWhereUniqueWithoutProductoInput | DetallePedidoUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: DetallePedidoCreateManyProductoInputEnvelope
    set?: DetallePedidoWhereUniqueInput | DetallePedidoWhereUniqueInput[]
    disconnect?: DetallePedidoWhereUniqueInput | DetallePedidoWhereUniqueInput[]
    delete?: DetallePedidoWhereUniqueInput | DetallePedidoWhereUniqueInput[]
    connect?: DetallePedidoWhereUniqueInput | DetallePedidoWhereUniqueInput[]
    update?: DetallePedidoUpdateWithWhereUniqueWithoutProductoInput | DetallePedidoUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: DetallePedidoUpdateManyWithWhereWithoutProductoInput | DetallePedidoUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: DetallePedidoScalarWhereInput | DetallePedidoScalarWhereInput[]
  }

  export type ProductoTraduccionUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<ProductoTraduccionCreateWithoutProductoInput, ProductoTraduccionUncheckedCreateWithoutProductoInput> | ProductoTraduccionCreateWithoutProductoInput[] | ProductoTraduccionUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: ProductoTraduccionCreateOrConnectWithoutProductoInput | ProductoTraduccionCreateOrConnectWithoutProductoInput[]
    upsert?: ProductoTraduccionUpsertWithWhereUniqueWithoutProductoInput | ProductoTraduccionUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: ProductoTraduccionCreateManyProductoInputEnvelope
    set?: ProductoTraduccionWhereUniqueInput | ProductoTraduccionWhereUniqueInput[]
    disconnect?: ProductoTraduccionWhereUniqueInput | ProductoTraduccionWhereUniqueInput[]
    delete?: ProductoTraduccionWhereUniqueInput | ProductoTraduccionWhereUniqueInput[]
    connect?: ProductoTraduccionWhereUniqueInput | ProductoTraduccionWhereUniqueInput[]
    update?: ProductoTraduccionUpdateWithWhereUniqueWithoutProductoInput | ProductoTraduccionUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: ProductoTraduccionUpdateManyWithWhereWithoutProductoInput | ProductoTraduccionUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: ProductoTraduccionScalarWhereInput | ProductoTraduccionScalarWhereInput[]
  }

  export type ProductoCreateNestedOneWithoutProductoTraduccionInput = {
    create?: XOR<ProductoCreateWithoutProductoTraduccionInput, ProductoUncheckedCreateWithoutProductoTraduccionInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutProductoTraduccionInput
    connect?: ProductoWhereUniqueInput
  }

  export type ProductoUpdateOneRequiredWithoutProductoTraduccionNestedInput = {
    create?: XOR<ProductoCreateWithoutProductoTraduccionInput, ProductoUncheckedCreateWithoutProductoTraduccionInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutProductoTraduccionInput
    upsert?: ProductoUpsertWithoutProductoTraduccionInput
    connect?: ProductoWhereUniqueInput
    update?: XOR<XOR<ProductoUpdateToOneWithWhereWithoutProductoTraduccionInput, ProductoUpdateWithoutProductoTraduccionInput>, ProductoUncheckedUpdateWithoutProductoTraduccionInput>
  }

  export type DetallePedidoCreateNestedManyWithoutPedidoInput = {
    create?: XOR<DetallePedidoCreateWithoutPedidoInput, DetallePedidoUncheckedCreateWithoutPedidoInput> | DetallePedidoCreateWithoutPedidoInput[] | DetallePedidoUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: DetallePedidoCreateOrConnectWithoutPedidoInput | DetallePedidoCreateOrConnectWithoutPedidoInput[]
    createMany?: DetallePedidoCreateManyPedidoInputEnvelope
    connect?: DetallePedidoWhereUniqueInput | DetallePedidoWhereUniqueInput[]
  }

  export type EstadoPedidoCreateNestedManyWithoutPedidoInput = {
    create?: XOR<EstadoPedidoCreateWithoutPedidoInput, EstadoPedidoUncheckedCreateWithoutPedidoInput> | EstadoPedidoCreateWithoutPedidoInput[] | EstadoPedidoUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: EstadoPedidoCreateOrConnectWithoutPedidoInput | EstadoPedidoCreateOrConnectWithoutPedidoInput[]
    createMany?: EstadoPedidoCreateManyPedidoInputEnvelope
    connect?: EstadoPedidoWhereUniqueInput | EstadoPedidoWhereUniqueInput[]
  }

  export type UsuarioCreateNestedOneWithoutPedidosInput = {
    create?: XOR<UsuarioCreateWithoutPedidosInput, UsuarioUncheckedCreateWithoutPedidosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutPedidosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type EstablecimientoCreateNestedOneWithoutPedidosInput = {
    create?: XOR<EstablecimientoCreateWithoutPedidosInput, EstablecimientoUncheckedCreateWithoutPedidosInput>
    connectOrCreate?: EstablecimientoCreateOrConnectWithoutPedidosInput
    connect?: EstablecimientoWhereUniqueInput
  }

  export type DetallePedidoUncheckedCreateNestedManyWithoutPedidoInput = {
    create?: XOR<DetallePedidoCreateWithoutPedidoInput, DetallePedidoUncheckedCreateWithoutPedidoInput> | DetallePedidoCreateWithoutPedidoInput[] | DetallePedidoUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: DetallePedidoCreateOrConnectWithoutPedidoInput | DetallePedidoCreateOrConnectWithoutPedidoInput[]
    createMany?: DetallePedidoCreateManyPedidoInputEnvelope
    connect?: DetallePedidoWhereUniqueInput | DetallePedidoWhereUniqueInput[]
  }

  export type EstadoPedidoUncheckedCreateNestedManyWithoutPedidoInput = {
    create?: XOR<EstadoPedidoCreateWithoutPedidoInput, EstadoPedidoUncheckedCreateWithoutPedidoInput> | EstadoPedidoCreateWithoutPedidoInput[] | EstadoPedidoUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: EstadoPedidoCreateOrConnectWithoutPedidoInput | EstadoPedidoCreateOrConnectWithoutPedidoInput[]
    createMany?: EstadoPedidoCreateManyPedidoInputEnvelope
    connect?: EstadoPedidoWhereUniqueInput | EstadoPedidoWhereUniqueInput[]
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableEnumEstadoPedidoGeneralFieldUpdateOperationsInput = {
    set?: $Enums.EstadoPedidoGeneral | null
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type DetallePedidoUpdateManyWithoutPedidoNestedInput = {
    create?: XOR<DetallePedidoCreateWithoutPedidoInput, DetallePedidoUncheckedCreateWithoutPedidoInput> | DetallePedidoCreateWithoutPedidoInput[] | DetallePedidoUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: DetallePedidoCreateOrConnectWithoutPedidoInput | DetallePedidoCreateOrConnectWithoutPedidoInput[]
    upsert?: DetallePedidoUpsertWithWhereUniqueWithoutPedidoInput | DetallePedidoUpsertWithWhereUniqueWithoutPedidoInput[]
    createMany?: DetallePedidoCreateManyPedidoInputEnvelope
    set?: DetallePedidoWhereUniqueInput | DetallePedidoWhereUniqueInput[]
    disconnect?: DetallePedidoWhereUniqueInput | DetallePedidoWhereUniqueInput[]
    delete?: DetallePedidoWhereUniqueInput | DetallePedidoWhereUniqueInput[]
    connect?: DetallePedidoWhereUniqueInput | DetallePedidoWhereUniqueInput[]
    update?: DetallePedidoUpdateWithWhereUniqueWithoutPedidoInput | DetallePedidoUpdateWithWhereUniqueWithoutPedidoInput[]
    updateMany?: DetallePedidoUpdateManyWithWhereWithoutPedidoInput | DetallePedidoUpdateManyWithWhereWithoutPedidoInput[]
    deleteMany?: DetallePedidoScalarWhereInput | DetallePedidoScalarWhereInput[]
  }

  export type EstadoPedidoUpdateManyWithoutPedidoNestedInput = {
    create?: XOR<EstadoPedidoCreateWithoutPedidoInput, EstadoPedidoUncheckedCreateWithoutPedidoInput> | EstadoPedidoCreateWithoutPedidoInput[] | EstadoPedidoUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: EstadoPedidoCreateOrConnectWithoutPedidoInput | EstadoPedidoCreateOrConnectWithoutPedidoInput[]
    upsert?: EstadoPedidoUpsertWithWhereUniqueWithoutPedidoInput | EstadoPedidoUpsertWithWhereUniqueWithoutPedidoInput[]
    createMany?: EstadoPedidoCreateManyPedidoInputEnvelope
    set?: EstadoPedidoWhereUniqueInput | EstadoPedidoWhereUniqueInput[]
    disconnect?: EstadoPedidoWhereUniqueInput | EstadoPedidoWhereUniqueInput[]
    delete?: EstadoPedidoWhereUniqueInput | EstadoPedidoWhereUniqueInput[]
    connect?: EstadoPedidoWhereUniqueInput | EstadoPedidoWhereUniqueInput[]
    update?: EstadoPedidoUpdateWithWhereUniqueWithoutPedidoInput | EstadoPedidoUpdateWithWhereUniqueWithoutPedidoInput[]
    updateMany?: EstadoPedidoUpdateManyWithWhereWithoutPedidoInput | EstadoPedidoUpdateManyWithWhereWithoutPedidoInput[]
    deleteMany?: EstadoPedidoScalarWhereInput | EstadoPedidoScalarWhereInput[]
  }

  export type UsuarioUpdateOneWithoutPedidosNestedInput = {
    create?: XOR<UsuarioCreateWithoutPedidosInput, UsuarioUncheckedCreateWithoutPedidosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutPedidosInput
    upsert?: UsuarioUpsertWithoutPedidosInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutPedidosInput, UsuarioUpdateWithoutPedidosInput>, UsuarioUncheckedUpdateWithoutPedidosInput>
  }

  export type EstablecimientoUpdateOneRequiredWithoutPedidosNestedInput = {
    create?: XOR<EstablecimientoCreateWithoutPedidosInput, EstablecimientoUncheckedCreateWithoutPedidosInput>
    connectOrCreate?: EstablecimientoCreateOrConnectWithoutPedidosInput
    upsert?: EstablecimientoUpsertWithoutPedidosInput
    connect?: EstablecimientoWhereUniqueInput
    update?: XOR<XOR<EstablecimientoUpdateToOneWithWhereWithoutPedidosInput, EstablecimientoUpdateWithoutPedidosInput>, EstablecimientoUncheckedUpdateWithoutPedidosInput>
  }

  export type DetallePedidoUncheckedUpdateManyWithoutPedidoNestedInput = {
    create?: XOR<DetallePedidoCreateWithoutPedidoInput, DetallePedidoUncheckedCreateWithoutPedidoInput> | DetallePedidoCreateWithoutPedidoInput[] | DetallePedidoUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: DetallePedidoCreateOrConnectWithoutPedidoInput | DetallePedidoCreateOrConnectWithoutPedidoInput[]
    upsert?: DetallePedidoUpsertWithWhereUniqueWithoutPedidoInput | DetallePedidoUpsertWithWhereUniqueWithoutPedidoInput[]
    createMany?: DetallePedidoCreateManyPedidoInputEnvelope
    set?: DetallePedidoWhereUniqueInput | DetallePedidoWhereUniqueInput[]
    disconnect?: DetallePedidoWhereUniqueInput | DetallePedidoWhereUniqueInput[]
    delete?: DetallePedidoWhereUniqueInput | DetallePedidoWhereUniqueInput[]
    connect?: DetallePedidoWhereUniqueInput | DetallePedidoWhereUniqueInput[]
    update?: DetallePedidoUpdateWithWhereUniqueWithoutPedidoInput | DetallePedidoUpdateWithWhereUniqueWithoutPedidoInput[]
    updateMany?: DetallePedidoUpdateManyWithWhereWithoutPedidoInput | DetallePedidoUpdateManyWithWhereWithoutPedidoInput[]
    deleteMany?: DetallePedidoScalarWhereInput | DetallePedidoScalarWhereInput[]
  }

  export type EstadoPedidoUncheckedUpdateManyWithoutPedidoNestedInput = {
    create?: XOR<EstadoPedidoCreateWithoutPedidoInput, EstadoPedidoUncheckedCreateWithoutPedidoInput> | EstadoPedidoCreateWithoutPedidoInput[] | EstadoPedidoUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: EstadoPedidoCreateOrConnectWithoutPedidoInput | EstadoPedidoCreateOrConnectWithoutPedidoInput[]
    upsert?: EstadoPedidoUpsertWithWhereUniqueWithoutPedidoInput | EstadoPedidoUpsertWithWhereUniqueWithoutPedidoInput[]
    createMany?: EstadoPedidoCreateManyPedidoInputEnvelope
    set?: EstadoPedidoWhereUniqueInput | EstadoPedidoWhereUniqueInput[]
    disconnect?: EstadoPedidoWhereUniqueInput | EstadoPedidoWhereUniqueInput[]
    delete?: EstadoPedidoWhereUniqueInput | EstadoPedidoWhereUniqueInput[]
    connect?: EstadoPedidoWhereUniqueInput | EstadoPedidoWhereUniqueInput[]
    update?: EstadoPedidoUpdateWithWhereUniqueWithoutPedidoInput | EstadoPedidoUpdateWithWhereUniqueWithoutPedidoInput[]
    updateMany?: EstadoPedidoUpdateManyWithWhereWithoutPedidoInput | EstadoPedidoUpdateManyWithWhereWithoutPedidoInput[]
    deleteMany?: EstadoPedidoScalarWhereInput | EstadoPedidoScalarWhereInput[]
  }

  export type PedidoCreateNestedOneWithoutDetallesInput = {
    create?: XOR<PedidoCreateWithoutDetallesInput, PedidoUncheckedCreateWithoutDetallesInput>
    connectOrCreate?: PedidoCreateOrConnectWithoutDetallesInput
    connect?: PedidoWhereUniqueInput
  }

  export type ProductoCreateNestedOneWithoutDetallesPedidoInput = {
    create?: XOR<ProductoCreateWithoutDetallesPedidoInput, ProductoUncheckedCreateWithoutDetallesPedidoInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutDetallesPedidoInput
    connect?: ProductoWhereUniqueInput
  }

  export type NullableEnumEstadoItemPedidoFieldUpdateOperationsInput = {
    set?: $Enums.EstadoItemPedido | null
  }

  export type PedidoUpdateOneRequiredWithoutDetallesNestedInput = {
    create?: XOR<PedidoCreateWithoutDetallesInput, PedidoUncheckedCreateWithoutDetallesInput>
    connectOrCreate?: PedidoCreateOrConnectWithoutDetallesInput
    upsert?: PedidoUpsertWithoutDetallesInput
    connect?: PedidoWhereUniqueInput
    update?: XOR<XOR<PedidoUpdateToOneWithWhereWithoutDetallesInput, PedidoUpdateWithoutDetallesInput>, PedidoUncheckedUpdateWithoutDetallesInput>
  }

  export type ProductoUpdateOneRequiredWithoutDetallesPedidoNestedInput = {
    create?: XOR<ProductoCreateWithoutDetallesPedidoInput, ProductoUncheckedCreateWithoutDetallesPedidoInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutDetallesPedidoInput
    upsert?: ProductoUpsertWithoutDetallesPedidoInput
    connect?: ProductoWhereUniqueInput
    update?: XOR<XOR<ProductoUpdateToOneWithWhereWithoutDetallesPedidoInput, ProductoUpdateWithoutDetallesPedidoInput>, ProductoUncheckedUpdateWithoutDetallesPedidoInput>
  }

  export type PedidoCreateNestedOneWithoutEstadosPedidoInput = {
    create?: XOR<PedidoCreateWithoutEstadosPedidoInput, PedidoUncheckedCreateWithoutEstadosPedidoInput>
    connectOrCreate?: PedidoCreateOrConnectWithoutEstadosPedidoInput
    connect?: PedidoWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutEstadosPedidoInput = {
    create?: XOR<UsuarioCreateWithoutEstadosPedidoInput, UsuarioUncheckedCreateWithoutEstadosPedidoInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutEstadosPedidoInput
    connect?: UsuarioWhereUniqueInput
  }

  export type EnumEstadoPedidoGeneralFieldUpdateOperationsInput = {
    set?: $Enums.EstadoPedidoGeneral
  }

  export type PedidoUpdateOneRequiredWithoutEstadosPedidoNestedInput = {
    create?: XOR<PedidoCreateWithoutEstadosPedidoInput, PedidoUncheckedCreateWithoutEstadosPedidoInput>
    connectOrCreate?: PedidoCreateOrConnectWithoutEstadosPedidoInput
    upsert?: PedidoUpsertWithoutEstadosPedidoInput
    connect?: PedidoWhereUniqueInput
    update?: XOR<XOR<PedidoUpdateToOneWithWhereWithoutEstadosPedidoInput, PedidoUpdateWithoutEstadosPedidoInput>, PedidoUncheckedUpdateWithoutEstadosPedidoInput>
  }

  export type UsuarioUpdateOneWithoutEstadosPedidoNestedInput = {
    create?: XOR<UsuarioCreateWithoutEstadosPedidoInput, UsuarioUncheckedCreateWithoutEstadosPedidoInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutEstadosPedidoInput
    upsert?: UsuarioUpsertWithoutEstadosPedidoInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutEstadosPedidoInput, UsuarioUpdateWithoutEstadosPedidoInput>, UsuarioUncheckedUpdateWithoutEstadosPedidoInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedEnumRolUsuarioFilter<$PrismaModel = never> = {
    equals?: $Enums.RolUsuario | EnumRolUsuarioFieldRefInput<$PrismaModel>
    in?: $Enums.RolUsuario[] | ListEnumRolUsuarioFieldRefInput<$PrismaModel>
    notIn?: $Enums.RolUsuario[] | ListEnumRolUsuarioFieldRefInput<$PrismaModel>
    not?: NestedEnumRolUsuarioFilter<$PrismaModel> | $Enums.RolUsuario
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedEnumRolUsuarioWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RolUsuario | EnumRolUsuarioFieldRefInput<$PrismaModel>
    in?: $Enums.RolUsuario[] | ListEnumRolUsuarioFieldRefInput<$PrismaModel>
    notIn?: $Enums.RolUsuario[] | ListEnumRolUsuarioFieldRefInput<$PrismaModel>
    not?: NestedEnumRolUsuarioWithAggregatesFilter<$PrismaModel> | $Enums.RolUsuario
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRolUsuarioFilter<$PrismaModel>
    _max?: NestedEnumRolUsuarioFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedEnumEstadoPedidoGeneralNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoPedidoGeneral | EnumEstadoPedidoGeneralFieldRefInput<$PrismaModel> | null
    in?: $Enums.EstadoPedidoGeneral[] | ListEnumEstadoPedidoGeneralFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.EstadoPedidoGeneral[] | ListEnumEstadoPedidoGeneralFieldRefInput<$PrismaModel> | null
    not?: NestedEnumEstadoPedidoGeneralNullableFilter<$PrismaModel> | $Enums.EstadoPedidoGeneral | null
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumEstadoPedidoGeneralNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoPedidoGeneral | EnumEstadoPedidoGeneralFieldRefInput<$PrismaModel> | null
    in?: $Enums.EstadoPedidoGeneral[] | ListEnumEstadoPedidoGeneralFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.EstadoPedidoGeneral[] | ListEnumEstadoPedidoGeneralFieldRefInput<$PrismaModel> | null
    not?: NestedEnumEstadoPedidoGeneralNullableWithAggregatesFilter<$PrismaModel> | $Enums.EstadoPedidoGeneral | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumEstadoPedidoGeneralNullableFilter<$PrismaModel>
    _max?: NestedEnumEstadoPedidoGeneralNullableFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedEnumEstadoItemPedidoNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoItemPedido | EnumEstadoItemPedidoFieldRefInput<$PrismaModel> | null
    in?: $Enums.EstadoItemPedido[] | ListEnumEstadoItemPedidoFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.EstadoItemPedido[] | ListEnumEstadoItemPedidoFieldRefInput<$PrismaModel> | null
    not?: NestedEnumEstadoItemPedidoNullableFilter<$PrismaModel> | $Enums.EstadoItemPedido | null
  }

  export type NestedEnumEstadoItemPedidoNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoItemPedido | EnumEstadoItemPedidoFieldRefInput<$PrismaModel> | null
    in?: $Enums.EstadoItemPedido[] | ListEnumEstadoItemPedidoFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.EstadoItemPedido[] | ListEnumEstadoItemPedidoFieldRefInput<$PrismaModel> | null
    not?: NestedEnumEstadoItemPedidoNullableWithAggregatesFilter<$PrismaModel> | $Enums.EstadoItemPedido | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumEstadoItemPedidoNullableFilter<$PrismaModel>
    _max?: NestedEnumEstadoItemPedidoNullableFilter<$PrismaModel>
  }

  export type NestedEnumEstadoPedidoGeneralFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoPedidoGeneral | EnumEstadoPedidoGeneralFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoPedidoGeneral[] | ListEnumEstadoPedidoGeneralFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoPedidoGeneral[] | ListEnumEstadoPedidoGeneralFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoPedidoGeneralFilter<$PrismaModel> | $Enums.EstadoPedidoGeneral
  }

  export type NestedEnumEstadoPedidoGeneralWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoPedidoGeneral | EnumEstadoPedidoGeneralFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoPedidoGeneral[] | ListEnumEstadoPedidoGeneralFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoPedidoGeneral[] | ListEnumEstadoPedidoGeneralFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoPedidoGeneralWithAggregatesFilter<$PrismaModel> | $Enums.EstadoPedidoGeneral
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoPedidoGeneralFilter<$PrismaModel>
    _max?: NestedEnumEstadoPedidoGeneralFilter<$PrismaModel>
  }

  export type EstablecimientoCreateWithoutAdministradorInput = {
    nombre: string
    cif?: string | null
    direccion?: string | null
    cp?: string | null
    ciudad?: string | null
    telefono1?: string | null
    telefono2?: string | null
    datos_bancarios_cobro?: string | null
    datos_bancarios_pago?: string | null
    contacto?: string | null
    categorias?: CategoriaCreateNestedManyWithoutEstablecimientoInput
    pedidos?: PedidoCreateNestedManyWithoutEstablecimientoInput
    productos?: ProductoCreateNestedManyWithoutEstablecimientoInput
    empleados?: UsuarioCreateNestedManyWithoutEstablecimientoInput
  }

  export type EstablecimientoUncheckedCreateWithoutAdministradorInput = {
    id_establecimiento?: number
    nombre: string
    cif?: string | null
    direccion?: string | null
    cp?: string | null
    ciudad?: string | null
    telefono1?: string | null
    telefono2?: string | null
    datos_bancarios_cobro?: string | null
    datos_bancarios_pago?: string | null
    contacto?: string | null
    categorias?: CategoriaUncheckedCreateNestedManyWithoutEstablecimientoInput
    pedidos?: PedidoUncheckedCreateNestedManyWithoutEstablecimientoInput
    productos?: ProductoUncheckedCreateNestedManyWithoutEstablecimientoInput
    empleados?: UsuarioUncheckedCreateNestedManyWithoutEstablecimientoInput
  }

  export type EstablecimientoCreateOrConnectWithoutAdministradorInput = {
    where: EstablecimientoWhereUniqueInput
    create: XOR<EstablecimientoCreateWithoutAdministradorInput, EstablecimientoUncheckedCreateWithoutAdministradorInput>
  }

  export type EstadoPedidoCreateWithoutUsuarioInput = {
    estado: $Enums.EstadoPedidoGeneral
    fecha_hora?: Date | string
    pedido: PedidoCreateNestedOneWithoutEstadosPedidoInput
  }

  export type EstadoPedidoUncheckedCreateWithoutUsuarioInput = {
    id_estado_pedido?: number
    id_pedido: number
    estado: $Enums.EstadoPedidoGeneral
    fecha_hora?: Date | string
  }

  export type EstadoPedidoCreateOrConnectWithoutUsuarioInput = {
    where: EstadoPedidoWhereUniqueInput
    create: XOR<EstadoPedidoCreateWithoutUsuarioInput, EstadoPedidoUncheckedCreateWithoutUsuarioInput>
  }

  export type EstadoPedidoCreateManyUsuarioInputEnvelope = {
    data: EstadoPedidoCreateManyUsuarioInput | EstadoPedidoCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type PedidoCreateWithoutClienteInput = {
    fecha_hora?: Date | string
    estado?: $Enums.EstadoPedidoGeneral | null
    total?: Decimal | DecimalJsLike | number | string | null
    metodo_pago?: string | null
    detalles?: DetallePedidoCreateNestedManyWithoutPedidoInput
    estadosPedido?: EstadoPedidoCreateNestedManyWithoutPedidoInput
    establecimiento: EstablecimientoCreateNestedOneWithoutPedidosInput
  }

  export type PedidoUncheckedCreateWithoutClienteInput = {
    id_pedido?: number
    id_establecimiento: number
    fecha_hora?: Date | string
    estado?: $Enums.EstadoPedidoGeneral | null
    total?: Decimal | DecimalJsLike | number | string | null
    metodo_pago?: string | null
    detalles?: DetallePedidoUncheckedCreateNestedManyWithoutPedidoInput
    estadosPedido?: EstadoPedidoUncheckedCreateNestedManyWithoutPedidoInput
  }

  export type PedidoCreateOrConnectWithoutClienteInput = {
    where: PedidoWhereUniqueInput
    create: XOR<PedidoCreateWithoutClienteInput, PedidoUncheckedCreateWithoutClienteInput>
  }

  export type PedidoCreateManyClienteInputEnvelope = {
    data: PedidoCreateManyClienteInput | PedidoCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type EstablecimientoCreateWithoutEmpleadosInput = {
    nombre: string
    cif?: string | null
    direccion?: string | null
    cp?: string | null
    ciudad?: string | null
    telefono1?: string | null
    telefono2?: string | null
    datos_bancarios_cobro?: string | null
    datos_bancarios_pago?: string | null
    contacto?: string | null
    categorias?: CategoriaCreateNestedManyWithoutEstablecimientoInput
    administrador?: UsuarioCreateNestedOneWithoutAdministraInput
    pedidos?: PedidoCreateNestedManyWithoutEstablecimientoInput
    productos?: ProductoCreateNestedManyWithoutEstablecimientoInput
  }

  export type EstablecimientoUncheckedCreateWithoutEmpleadosInput = {
    id_establecimiento?: number
    nombre: string
    cif?: string | null
    direccion?: string | null
    cp?: string | null
    ciudad?: string | null
    telefono1?: string | null
    telefono2?: string | null
    datos_bancarios_cobro?: string | null
    datos_bancarios_pago?: string | null
    contacto?: string | null
    id_administrador_establecimiento?: number | null
    categorias?: CategoriaUncheckedCreateNestedManyWithoutEstablecimientoInput
    pedidos?: PedidoUncheckedCreateNestedManyWithoutEstablecimientoInput
    productos?: ProductoUncheckedCreateNestedManyWithoutEstablecimientoInput
  }

  export type EstablecimientoCreateOrConnectWithoutEmpleadosInput = {
    where: EstablecimientoWhereUniqueInput
    create: XOR<EstablecimientoCreateWithoutEmpleadosInput, EstablecimientoUncheckedCreateWithoutEmpleadosInput>
  }

  export type EstablecimientoUpsertWithoutAdministradorInput = {
    update: XOR<EstablecimientoUpdateWithoutAdministradorInput, EstablecimientoUncheckedUpdateWithoutAdministradorInput>
    create: XOR<EstablecimientoCreateWithoutAdministradorInput, EstablecimientoUncheckedCreateWithoutAdministradorInput>
    where?: EstablecimientoWhereInput
  }

  export type EstablecimientoUpdateToOneWithWhereWithoutAdministradorInput = {
    where?: EstablecimientoWhereInput
    data: XOR<EstablecimientoUpdateWithoutAdministradorInput, EstablecimientoUncheckedUpdateWithoutAdministradorInput>
  }

  export type EstablecimientoUpdateWithoutAdministradorInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    cp?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    telefono1?: NullableStringFieldUpdateOperationsInput | string | null
    telefono2?: NullableStringFieldUpdateOperationsInput | string | null
    datos_bancarios_cobro?: NullableStringFieldUpdateOperationsInput | string | null
    datos_bancarios_pago?: NullableStringFieldUpdateOperationsInput | string | null
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    categorias?: CategoriaUpdateManyWithoutEstablecimientoNestedInput
    pedidos?: PedidoUpdateManyWithoutEstablecimientoNestedInput
    productos?: ProductoUpdateManyWithoutEstablecimientoNestedInput
    empleados?: UsuarioUpdateManyWithoutEstablecimientoNestedInput
  }

  export type EstablecimientoUncheckedUpdateWithoutAdministradorInput = {
    id_establecimiento?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    cp?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    telefono1?: NullableStringFieldUpdateOperationsInput | string | null
    telefono2?: NullableStringFieldUpdateOperationsInput | string | null
    datos_bancarios_cobro?: NullableStringFieldUpdateOperationsInput | string | null
    datos_bancarios_pago?: NullableStringFieldUpdateOperationsInput | string | null
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    categorias?: CategoriaUncheckedUpdateManyWithoutEstablecimientoNestedInput
    pedidos?: PedidoUncheckedUpdateManyWithoutEstablecimientoNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutEstablecimientoNestedInput
    empleados?: UsuarioUncheckedUpdateManyWithoutEstablecimientoNestedInput
  }

  export type EstadoPedidoUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: EstadoPedidoWhereUniqueInput
    update: XOR<EstadoPedidoUpdateWithoutUsuarioInput, EstadoPedidoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<EstadoPedidoCreateWithoutUsuarioInput, EstadoPedidoUncheckedCreateWithoutUsuarioInput>
  }

  export type EstadoPedidoUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: EstadoPedidoWhereUniqueInput
    data: XOR<EstadoPedidoUpdateWithoutUsuarioInput, EstadoPedidoUncheckedUpdateWithoutUsuarioInput>
  }

  export type EstadoPedidoUpdateManyWithWhereWithoutUsuarioInput = {
    where: EstadoPedidoScalarWhereInput
    data: XOR<EstadoPedidoUpdateManyMutationInput, EstadoPedidoUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type EstadoPedidoScalarWhereInput = {
    AND?: EstadoPedidoScalarWhereInput | EstadoPedidoScalarWhereInput[]
    OR?: EstadoPedidoScalarWhereInput[]
    NOT?: EstadoPedidoScalarWhereInput | EstadoPedidoScalarWhereInput[]
    id_estado_pedido?: IntFilter<"EstadoPedido"> | number
    id_pedido?: IntFilter<"EstadoPedido"> | number
    id_usuario?: IntNullableFilter<"EstadoPedido"> | number | null
    estado?: EnumEstadoPedidoGeneralFilter<"EstadoPedido"> | $Enums.EstadoPedidoGeneral
    fecha_hora?: DateTimeFilter<"EstadoPedido"> | Date | string
  }

  export type PedidoUpsertWithWhereUniqueWithoutClienteInput = {
    where: PedidoWhereUniqueInput
    update: XOR<PedidoUpdateWithoutClienteInput, PedidoUncheckedUpdateWithoutClienteInput>
    create: XOR<PedidoCreateWithoutClienteInput, PedidoUncheckedCreateWithoutClienteInput>
  }

  export type PedidoUpdateWithWhereUniqueWithoutClienteInput = {
    where: PedidoWhereUniqueInput
    data: XOR<PedidoUpdateWithoutClienteInput, PedidoUncheckedUpdateWithoutClienteInput>
  }

  export type PedidoUpdateManyWithWhereWithoutClienteInput = {
    where: PedidoScalarWhereInput
    data: XOR<PedidoUpdateManyMutationInput, PedidoUncheckedUpdateManyWithoutClienteInput>
  }

  export type PedidoScalarWhereInput = {
    AND?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
    OR?: PedidoScalarWhereInput[]
    NOT?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
    id_pedido?: IntFilter<"Pedido"> | number
    id_cliente?: IntNullableFilter<"Pedido"> | number | null
    id_establecimiento?: IntFilter<"Pedido"> | number
    fecha_hora?: DateTimeFilter<"Pedido"> | Date | string
    estado?: EnumEstadoPedidoGeneralNullableFilter<"Pedido"> | $Enums.EstadoPedidoGeneral | null
    total?: DecimalNullableFilter<"Pedido"> | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: StringNullableFilter<"Pedido"> | string | null
  }

  export type EstablecimientoUpsertWithoutEmpleadosInput = {
    update: XOR<EstablecimientoUpdateWithoutEmpleadosInput, EstablecimientoUncheckedUpdateWithoutEmpleadosInput>
    create: XOR<EstablecimientoCreateWithoutEmpleadosInput, EstablecimientoUncheckedCreateWithoutEmpleadosInput>
    where?: EstablecimientoWhereInput
  }

  export type EstablecimientoUpdateToOneWithWhereWithoutEmpleadosInput = {
    where?: EstablecimientoWhereInput
    data: XOR<EstablecimientoUpdateWithoutEmpleadosInput, EstablecimientoUncheckedUpdateWithoutEmpleadosInput>
  }

  export type EstablecimientoUpdateWithoutEmpleadosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    cp?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    telefono1?: NullableStringFieldUpdateOperationsInput | string | null
    telefono2?: NullableStringFieldUpdateOperationsInput | string | null
    datos_bancarios_cobro?: NullableStringFieldUpdateOperationsInput | string | null
    datos_bancarios_pago?: NullableStringFieldUpdateOperationsInput | string | null
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    categorias?: CategoriaUpdateManyWithoutEstablecimientoNestedInput
    administrador?: UsuarioUpdateOneWithoutAdministraNestedInput
    pedidos?: PedidoUpdateManyWithoutEstablecimientoNestedInput
    productos?: ProductoUpdateManyWithoutEstablecimientoNestedInput
  }

  export type EstablecimientoUncheckedUpdateWithoutEmpleadosInput = {
    id_establecimiento?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    cp?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    telefono1?: NullableStringFieldUpdateOperationsInput | string | null
    telefono2?: NullableStringFieldUpdateOperationsInput | string | null
    datos_bancarios_cobro?: NullableStringFieldUpdateOperationsInput | string | null
    datos_bancarios_pago?: NullableStringFieldUpdateOperationsInput | string | null
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    id_administrador_establecimiento?: NullableIntFieldUpdateOperationsInput | number | null
    categorias?: CategoriaUncheckedUpdateManyWithoutEstablecimientoNestedInput
    pedidos?: PedidoUncheckedUpdateManyWithoutEstablecimientoNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutEstablecimientoNestedInput
  }

  export type CategoriaCreateWithoutEstablecimientoInput = {
    nombre: string
    imagen_url?: string | null
    orden?: number | null
    CategoriaTraduccion?: CategoriaTraduccionCreateNestedManyWithoutCategoriaInput
    productos?: ProductoCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaUncheckedCreateWithoutEstablecimientoInput = {
    id_categoria?: number
    nombre: string
    imagen_url?: string | null
    orden?: number | null
    CategoriaTraduccion?: CategoriaTraduccionUncheckedCreateNestedManyWithoutCategoriaInput
    productos?: ProductoUncheckedCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaCreateOrConnectWithoutEstablecimientoInput = {
    where: CategoriaWhereUniqueInput
    create: XOR<CategoriaCreateWithoutEstablecimientoInput, CategoriaUncheckedCreateWithoutEstablecimientoInput>
  }

  export type CategoriaCreateManyEstablecimientoInputEnvelope = {
    data: CategoriaCreateManyEstablecimientoInput | CategoriaCreateManyEstablecimientoInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioCreateWithoutAdministraInput = {
    rol: $Enums.RolUsuario
    nombre?: string | null
    email?: string | null
    contrasena?: string | null
    estadosPedido?: EstadoPedidoCreateNestedManyWithoutUsuarioInput
    pedidos?: PedidoCreateNestedManyWithoutClienteInput
    establecimiento?: EstablecimientoCreateNestedOneWithoutEmpleadosInput
  }

  export type UsuarioUncheckedCreateWithoutAdministraInput = {
    id_usuario?: number
    rol: $Enums.RolUsuario
    nombre?: string | null
    email?: string | null
    contrasena?: string | null
    id_establecimiento?: number | null
    estadosPedido?: EstadoPedidoUncheckedCreateNestedManyWithoutUsuarioInput
    pedidos?: PedidoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type UsuarioCreateOrConnectWithoutAdministraInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutAdministraInput, UsuarioUncheckedCreateWithoutAdministraInput>
  }

  export type PedidoCreateWithoutEstablecimientoInput = {
    fecha_hora?: Date | string
    estado?: $Enums.EstadoPedidoGeneral | null
    total?: Decimal | DecimalJsLike | number | string | null
    metodo_pago?: string | null
    detalles?: DetallePedidoCreateNestedManyWithoutPedidoInput
    estadosPedido?: EstadoPedidoCreateNestedManyWithoutPedidoInput
    cliente?: UsuarioCreateNestedOneWithoutPedidosInput
  }

  export type PedidoUncheckedCreateWithoutEstablecimientoInput = {
    id_pedido?: number
    id_cliente?: number | null
    fecha_hora?: Date | string
    estado?: $Enums.EstadoPedidoGeneral | null
    total?: Decimal | DecimalJsLike | number | string | null
    metodo_pago?: string | null
    detalles?: DetallePedidoUncheckedCreateNestedManyWithoutPedidoInput
    estadosPedido?: EstadoPedidoUncheckedCreateNestedManyWithoutPedidoInput
  }

  export type PedidoCreateOrConnectWithoutEstablecimientoInput = {
    where: PedidoWhereUniqueInput
    create: XOR<PedidoCreateWithoutEstablecimientoInput, PedidoUncheckedCreateWithoutEstablecimientoInput>
  }

  export type PedidoCreateManyEstablecimientoInputEnvelope = {
    data: PedidoCreateManyEstablecimientoInput | PedidoCreateManyEstablecimientoInput[]
    skipDuplicates?: boolean
  }

  export type ProductoCreateWithoutEstablecimientoInput = {
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    imagen_url?: string | null
    orden?: number | null
    detallesPedido?: DetallePedidoCreateNestedManyWithoutProductoInput
    categoria: CategoriaCreateNestedOneWithoutProductosInput
    ProductoTraduccion?: ProductoTraduccionCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutEstablecimientoInput = {
    id_producto?: number
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    imagen_url?: string | null
    id_categoria: number
    orden?: number | null
    detallesPedido?: DetallePedidoUncheckedCreateNestedManyWithoutProductoInput
    ProductoTraduccion?: ProductoTraduccionUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutEstablecimientoInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutEstablecimientoInput, ProductoUncheckedCreateWithoutEstablecimientoInput>
  }

  export type ProductoCreateManyEstablecimientoInputEnvelope = {
    data: ProductoCreateManyEstablecimientoInput | ProductoCreateManyEstablecimientoInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioCreateWithoutEstablecimientoInput = {
    rol: $Enums.RolUsuario
    nombre?: string | null
    email?: string | null
    contrasena?: string | null
    administra?: EstablecimientoCreateNestedOneWithoutAdministradorInput
    estadosPedido?: EstadoPedidoCreateNestedManyWithoutUsuarioInput
    pedidos?: PedidoCreateNestedManyWithoutClienteInput
  }

  export type UsuarioUncheckedCreateWithoutEstablecimientoInput = {
    id_usuario?: number
    rol: $Enums.RolUsuario
    nombre?: string | null
    email?: string | null
    contrasena?: string | null
    administra?: EstablecimientoUncheckedCreateNestedOneWithoutAdministradorInput
    estadosPedido?: EstadoPedidoUncheckedCreateNestedManyWithoutUsuarioInput
    pedidos?: PedidoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type UsuarioCreateOrConnectWithoutEstablecimientoInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutEstablecimientoInput, UsuarioUncheckedCreateWithoutEstablecimientoInput>
  }

  export type UsuarioCreateManyEstablecimientoInputEnvelope = {
    data: UsuarioCreateManyEstablecimientoInput | UsuarioCreateManyEstablecimientoInput[]
    skipDuplicates?: boolean
  }

  export type CategoriaUpsertWithWhereUniqueWithoutEstablecimientoInput = {
    where: CategoriaWhereUniqueInput
    update: XOR<CategoriaUpdateWithoutEstablecimientoInput, CategoriaUncheckedUpdateWithoutEstablecimientoInput>
    create: XOR<CategoriaCreateWithoutEstablecimientoInput, CategoriaUncheckedCreateWithoutEstablecimientoInput>
  }

  export type CategoriaUpdateWithWhereUniqueWithoutEstablecimientoInput = {
    where: CategoriaWhereUniqueInput
    data: XOR<CategoriaUpdateWithoutEstablecimientoInput, CategoriaUncheckedUpdateWithoutEstablecimientoInput>
  }

  export type CategoriaUpdateManyWithWhereWithoutEstablecimientoInput = {
    where: CategoriaScalarWhereInput
    data: XOR<CategoriaUpdateManyMutationInput, CategoriaUncheckedUpdateManyWithoutEstablecimientoInput>
  }

  export type CategoriaScalarWhereInput = {
    AND?: CategoriaScalarWhereInput | CategoriaScalarWhereInput[]
    OR?: CategoriaScalarWhereInput[]
    NOT?: CategoriaScalarWhereInput | CategoriaScalarWhereInput[]
    id_categoria?: IntFilter<"Categoria"> | number
    nombre?: StringFilter<"Categoria"> | string
    imagen_url?: StringNullableFilter<"Categoria"> | string | null
    id_establecimiento?: IntFilter<"Categoria"> | number
    orden?: IntNullableFilter<"Categoria"> | number | null
  }

  export type UsuarioUpsertWithoutAdministraInput = {
    update: XOR<UsuarioUpdateWithoutAdministraInput, UsuarioUncheckedUpdateWithoutAdministraInput>
    create: XOR<UsuarioCreateWithoutAdministraInput, UsuarioUncheckedCreateWithoutAdministraInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutAdministraInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutAdministraInput, UsuarioUncheckedUpdateWithoutAdministraInput>
  }

  export type UsuarioUpdateWithoutAdministraInput = {
    rol?: EnumRolUsuarioFieldUpdateOperationsInput | $Enums.RolUsuario
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estadosPedido?: EstadoPedidoUpdateManyWithoutUsuarioNestedInput
    pedidos?: PedidoUpdateManyWithoutClienteNestedInput
    establecimiento?: EstablecimientoUpdateOneWithoutEmpleadosNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutAdministraInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    rol?: EnumRolUsuarioFieldUpdateOperationsInput | $Enums.RolUsuario
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    id_establecimiento?: NullableIntFieldUpdateOperationsInput | number | null
    estadosPedido?: EstadoPedidoUncheckedUpdateManyWithoutUsuarioNestedInput
    pedidos?: PedidoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type PedidoUpsertWithWhereUniqueWithoutEstablecimientoInput = {
    where: PedidoWhereUniqueInput
    update: XOR<PedidoUpdateWithoutEstablecimientoInput, PedidoUncheckedUpdateWithoutEstablecimientoInput>
    create: XOR<PedidoCreateWithoutEstablecimientoInput, PedidoUncheckedCreateWithoutEstablecimientoInput>
  }

  export type PedidoUpdateWithWhereUniqueWithoutEstablecimientoInput = {
    where: PedidoWhereUniqueInput
    data: XOR<PedidoUpdateWithoutEstablecimientoInput, PedidoUncheckedUpdateWithoutEstablecimientoInput>
  }

  export type PedidoUpdateManyWithWhereWithoutEstablecimientoInput = {
    where: PedidoScalarWhereInput
    data: XOR<PedidoUpdateManyMutationInput, PedidoUncheckedUpdateManyWithoutEstablecimientoInput>
  }

  export type ProductoUpsertWithWhereUniqueWithoutEstablecimientoInput = {
    where: ProductoWhereUniqueInput
    update: XOR<ProductoUpdateWithoutEstablecimientoInput, ProductoUncheckedUpdateWithoutEstablecimientoInput>
    create: XOR<ProductoCreateWithoutEstablecimientoInput, ProductoUncheckedCreateWithoutEstablecimientoInput>
  }

  export type ProductoUpdateWithWhereUniqueWithoutEstablecimientoInput = {
    where: ProductoWhereUniqueInput
    data: XOR<ProductoUpdateWithoutEstablecimientoInput, ProductoUncheckedUpdateWithoutEstablecimientoInput>
  }

  export type ProductoUpdateManyWithWhereWithoutEstablecimientoInput = {
    where: ProductoScalarWhereInput
    data: XOR<ProductoUpdateManyMutationInput, ProductoUncheckedUpdateManyWithoutEstablecimientoInput>
  }

  export type ProductoScalarWhereInput = {
    AND?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
    OR?: ProductoScalarWhereInput[]
    NOT?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
    id_producto?: IntFilter<"Producto"> | number
    nombre?: StringFilter<"Producto"> | string
    descripcion?: StringNullableFilter<"Producto"> | string | null
    precio?: DecimalFilter<"Producto"> | Decimal | DecimalJsLike | number | string
    imagen_url?: StringNullableFilter<"Producto"> | string | null
    id_categoria?: IntFilter<"Producto"> | number
    id_establecimiento?: IntFilter<"Producto"> | number
    orden?: IntNullableFilter<"Producto"> | number | null
  }

  export type UsuarioUpsertWithWhereUniqueWithoutEstablecimientoInput = {
    where: UsuarioWhereUniqueInput
    update: XOR<UsuarioUpdateWithoutEstablecimientoInput, UsuarioUncheckedUpdateWithoutEstablecimientoInput>
    create: XOR<UsuarioCreateWithoutEstablecimientoInput, UsuarioUncheckedCreateWithoutEstablecimientoInput>
  }

  export type UsuarioUpdateWithWhereUniqueWithoutEstablecimientoInput = {
    where: UsuarioWhereUniqueInput
    data: XOR<UsuarioUpdateWithoutEstablecimientoInput, UsuarioUncheckedUpdateWithoutEstablecimientoInput>
  }

  export type UsuarioUpdateManyWithWhereWithoutEstablecimientoInput = {
    where: UsuarioScalarWhereInput
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyWithoutEstablecimientoInput>
  }

  export type UsuarioScalarWhereInput = {
    AND?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
    OR?: UsuarioScalarWhereInput[]
    NOT?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
    id_usuario?: IntFilter<"Usuario"> | number
    rol?: EnumRolUsuarioFilter<"Usuario"> | $Enums.RolUsuario
    nombre?: StringNullableFilter<"Usuario"> | string | null
    email?: StringNullableFilter<"Usuario"> | string | null
    contrasena?: StringNullableFilter<"Usuario"> | string | null
    id_establecimiento?: IntNullableFilter<"Usuario"> | number | null
  }

  export type EstablecimientoCreateWithoutCategoriasInput = {
    nombre: string
    cif?: string | null
    direccion?: string | null
    cp?: string | null
    ciudad?: string | null
    telefono1?: string | null
    telefono2?: string | null
    datos_bancarios_cobro?: string | null
    datos_bancarios_pago?: string | null
    contacto?: string | null
    administrador?: UsuarioCreateNestedOneWithoutAdministraInput
    pedidos?: PedidoCreateNestedManyWithoutEstablecimientoInput
    productos?: ProductoCreateNestedManyWithoutEstablecimientoInput
    empleados?: UsuarioCreateNestedManyWithoutEstablecimientoInput
  }

  export type EstablecimientoUncheckedCreateWithoutCategoriasInput = {
    id_establecimiento?: number
    nombre: string
    cif?: string | null
    direccion?: string | null
    cp?: string | null
    ciudad?: string | null
    telefono1?: string | null
    telefono2?: string | null
    datos_bancarios_cobro?: string | null
    datos_bancarios_pago?: string | null
    contacto?: string | null
    id_administrador_establecimiento?: number | null
    pedidos?: PedidoUncheckedCreateNestedManyWithoutEstablecimientoInput
    productos?: ProductoUncheckedCreateNestedManyWithoutEstablecimientoInput
    empleados?: UsuarioUncheckedCreateNestedManyWithoutEstablecimientoInput
  }

  export type EstablecimientoCreateOrConnectWithoutCategoriasInput = {
    where: EstablecimientoWhereUniqueInput
    create: XOR<EstablecimientoCreateWithoutCategoriasInput, EstablecimientoUncheckedCreateWithoutCategoriasInput>
  }

  export type CategoriaTraduccionCreateWithoutCategoriaInput = {
    idioma: string
    nombre: string
  }

  export type CategoriaTraduccionUncheckedCreateWithoutCategoriaInput = {
    id_traduccion?: number
    idioma: string
    nombre: string
  }

  export type CategoriaTraduccionCreateOrConnectWithoutCategoriaInput = {
    where: CategoriaTraduccionWhereUniqueInput
    create: XOR<CategoriaTraduccionCreateWithoutCategoriaInput, CategoriaTraduccionUncheckedCreateWithoutCategoriaInput>
  }

  export type CategoriaTraduccionCreateManyCategoriaInputEnvelope = {
    data: CategoriaTraduccionCreateManyCategoriaInput | CategoriaTraduccionCreateManyCategoriaInput[]
    skipDuplicates?: boolean
  }

  export type ProductoCreateWithoutCategoriaInput = {
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    imagen_url?: string | null
    orden?: number | null
    detallesPedido?: DetallePedidoCreateNestedManyWithoutProductoInput
    establecimiento: EstablecimientoCreateNestedOneWithoutProductosInput
    ProductoTraduccion?: ProductoTraduccionCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutCategoriaInput = {
    id_producto?: number
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    imagen_url?: string | null
    id_establecimiento: number
    orden?: number | null
    detallesPedido?: DetallePedidoUncheckedCreateNestedManyWithoutProductoInput
    ProductoTraduccion?: ProductoTraduccionUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutCategoriaInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutCategoriaInput, ProductoUncheckedCreateWithoutCategoriaInput>
  }

  export type ProductoCreateManyCategoriaInputEnvelope = {
    data: ProductoCreateManyCategoriaInput | ProductoCreateManyCategoriaInput[]
    skipDuplicates?: boolean
  }

  export type EstablecimientoUpsertWithoutCategoriasInput = {
    update: XOR<EstablecimientoUpdateWithoutCategoriasInput, EstablecimientoUncheckedUpdateWithoutCategoriasInput>
    create: XOR<EstablecimientoCreateWithoutCategoriasInput, EstablecimientoUncheckedCreateWithoutCategoriasInput>
    where?: EstablecimientoWhereInput
  }

  export type EstablecimientoUpdateToOneWithWhereWithoutCategoriasInput = {
    where?: EstablecimientoWhereInput
    data: XOR<EstablecimientoUpdateWithoutCategoriasInput, EstablecimientoUncheckedUpdateWithoutCategoriasInput>
  }

  export type EstablecimientoUpdateWithoutCategoriasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    cp?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    telefono1?: NullableStringFieldUpdateOperationsInput | string | null
    telefono2?: NullableStringFieldUpdateOperationsInput | string | null
    datos_bancarios_cobro?: NullableStringFieldUpdateOperationsInput | string | null
    datos_bancarios_pago?: NullableStringFieldUpdateOperationsInput | string | null
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    administrador?: UsuarioUpdateOneWithoutAdministraNestedInput
    pedidos?: PedidoUpdateManyWithoutEstablecimientoNestedInput
    productos?: ProductoUpdateManyWithoutEstablecimientoNestedInput
    empleados?: UsuarioUpdateManyWithoutEstablecimientoNestedInput
  }

  export type EstablecimientoUncheckedUpdateWithoutCategoriasInput = {
    id_establecimiento?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    cp?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    telefono1?: NullableStringFieldUpdateOperationsInput | string | null
    telefono2?: NullableStringFieldUpdateOperationsInput | string | null
    datos_bancarios_cobro?: NullableStringFieldUpdateOperationsInput | string | null
    datos_bancarios_pago?: NullableStringFieldUpdateOperationsInput | string | null
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    id_administrador_establecimiento?: NullableIntFieldUpdateOperationsInput | number | null
    pedidos?: PedidoUncheckedUpdateManyWithoutEstablecimientoNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutEstablecimientoNestedInput
    empleados?: UsuarioUncheckedUpdateManyWithoutEstablecimientoNestedInput
  }

  export type CategoriaTraduccionUpsertWithWhereUniqueWithoutCategoriaInput = {
    where: CategoriaTraduccionWhereUniqueInput
    update: XOR<CategoriaTraduccionUpdateWithoutCategoriaInput, CategoriaTraduccionUncheckedUpdateWithoutCategoriaInput>
    create: XOR<CategoriaTraduccionCreateWithoutCategoriaInput, CategoriaTraduccionUncheckedCreateWithoutCategoriaInput>
  }

  export type CategoriaTraduccionUpdateWithWhereUniqueWithoutCategoriaInput = {
    where: CategoriaTraduccionWhereUniqueInput
    data: XOR<CategoriaTraduccionUpdateWithoutCategoriaInput, CategoriaTraduccionUncheckedUpdateWithoutCategoriaInput>
  }

  export type CategoriaTraduccionUpdateManyWithWhereWithoutCategoriaInput = {
    where: CategoriaTraduccionScalarWhereInput
    data: XOR<CategoriaTraduccionUpdateManyMutationInput, CategoriaTraduccionUncheckedUpdateManyWithoutCategoriaInput>
  }

  export type CategoriaTraduccionScalarWhereInput = {
    AND?: CategoriaTraduccionScalarWhereInput | CategoriaTraduccionScalarWhereInput[]
    OR?: CategoriaTraduccionScalarWhereInput[]
    NOT?: CategoriaTraduccionScalarWhereInput | CategoriaTraduccionScalarWhereInput[]
    id_traduccion?: IntFilter<"CategoriaTraduccion"> | number
    id_categoria?: IntFilter<"CategoriaTraduccion"> | number
    idioma?: StringFilter<"CategoriaTraduccion"> | string
    nombre?: StringFilter<"CategoriaTraduccion"> | string
  }

  export type ProductoUpsertWithWhereUniqueWithoutCategoriaInput = {
    where: ProductoWhereUniqueInput
    update: XOR<ProductoUpdateWithoutCategoriaInput, ProductoUncheckedUpdateWithoutCategoriaInput>
    create: XOR<ProductoCreateWithoutCategoriaInput, ProductoUncheckedCreateWithoutCategoriaInput>
  }

  export type ProductoUpdateWithWhereUniqueWithoutCategoriaInput = {
    where: ProductoWhereUniqueInput
    data: XOR<ProductoUpdateWithoutCategoriaInput, ProductoUncheckedUpdateWithoutCategoriaInput>
  }

  export type ProductoUpdateManyWithWhereWithoutCategoriaInput = {
    where: ProductoScalarWhereInput
    data: XOR<ProductoUpdateManyMutationInput, ProductoUncheckedUpdateManyWithoutCategoriaInput>
  }

  export type CategoriaCreateWithoutCategoriaTraduccionInput = {
    nombre: string
    imagen_url?: string | null
    orden?: number | null
    establecimiento: EstablecimientoCreateNestedOneWithoutCategoriasInput
    productos?: ProductoCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaUncheckedCreateWithoutCategoriaTraduccionInput = {
    id_categoria?: number
    nombre: string
    imagen_url?: string | null
    id_establecimiento: number
    orden?: number | null
    productos?: ProductoUncheckedCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaCreateOrConnectWithoutCategoriaTraduccionInput = {
    where: CategoriaWhereUniqueInput
    create: XOR<CategoriaCreateWithoutCategoriaTraduccionInput, CategoriaUncheckedCreateWithoutCategoriaTraduccionInput>
  }

  export type CategoriaUpsertWithoutCategoriaTraduccionInput = {
    update: XOR<CategoriaUpdateWithoutCategoriaTraduccionInput, CategoriaUncheckedUpdateWithoutCategoriaTraduccionInput>
    create: XOR<CategoriaCreateWithoutCategoriaTraduccionInput, CategoriaUncheckedCreateWithoutCategoriaTraduccionInput>
    where?: CategoriaWhereInput
  }

  export type CategoriaUpdateToOneWithWhereWithoutCategoriaTraduccionInput = {
    where?: CategoriaWhereInput
    data: XOR<CategoriaUpdateWithoutCategoriaTraduccionInput, CategoriaUncheckedUpdateWithoutCategoriaTraduccionInput>
  }

  export type CategoriaUpdateWithoutCategoriaTraduccionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    orden?: NullableIntFieldUpdateOperationsInput | number | null
    establecimiento?: EstablecimientoUpdateOneRequiredWithoutCategoriasNestedInput
    productos?: ProductoUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaUncheckedUpdateWithoutCategoriaTraduccionInput = {
    id_categoria?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    id_establecimiento?: IntFieldUpdateOperationsInput | number
    orden?: NullableIntFieldUpdateOperationsInput | number | null
    productos?: ProductoUncheckedUpdateManyWithoutCategoriaNestedInput
  }

  export type DetallePedidoCreateWithoutProductoInput = {
    cantidad?: number
    especialidades?: string | null
    estado?: $Enums.EstadoItemPedido | null
    pedido: PedidoCreateNestedOneWithoutDetallesInput
  }

  export type DetallePedidoUncheckedCreateWithoutProductoInput = {
    id_detalle_pedido?: number
    id_pedido: number
    cantidad?: number
    especialidades?: string | null
    estado?: $Enums.EstadoItemPedido | null
  }

  export type DetallePedidoCreateOrConnectWithoutProductoInput = {
    where: DetallePedidoWhereUniqueInput
    create: XOR<DetallePedidoCreateWithoutProductoInput, DetallePedidoUncheckedCreateWithoutProductoInput>
  }

  export type DetallePedidoCreateManyProductoInputEnvelope = {
    data: DetallePedidoCreateManyProductoInput | DetallePedidoCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type CategoriaCreateWithoutProductosInput = {
    nombre: string
    imagen_url?: string | null
    orden?: number | null
    establecimiento: EstablecimientoCreateNestedOneWithoutCategoriasInput
    CategoriaTraduccion?: CategoriaTraduccionCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaUncheckedCreateWithoutProductosInput = {
    id_categoria?: number
    nombre: string
    imagen_url?: string | null
    id_establecimiento: number
    orden?: number | null
    CategoriaTraduccion?: CategoriaTraduccionUncheckedCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaCreateOrConnectWithoutProductosInput = {
    where: CategoriaWhereUniqueInput
    create: XOR<CategoriaCreateWithoutProductosInput, CategoriaUncheckedCreateWithoutProductosInput>
  }

  export type EstablecimientoCreateWithoutProductosInput = {
    nombre: string
    cif?: string | null
    direccion?: string | null
    cp?: string | null
    ciudad?: string | null
    telefono1?: string | null
    telefono2?: string | null
    datos_bancarios_cobro?: string | null
    datos_bancarios_pago?: string | null
    contacto?: string | null
    categorias?: CategoriaCreateNestedManyWithoutEstablecimientoInput
    administrador?: UsuarioCreateNestedOneWithoutAdministraInput
    pedidos?: PedidoCreateNestedManyWithoutEstablecimientoInput
    empleados?: UsuarioCreateNestedManyWithoutEstablecimientoInput
  }

  export type EstablecimientoUncheckedCreateWithoutProductosInput = {
    id_establecimiento?: number
    nombre: string
    cif?: string | null
    direccion?: string | null
    cp?: string | null
    ciudad?: string | null
    telefono1?: string | null
    telefono2?: string | null
    datos_bancarios_cobro?: string | null
    datos_bancarios_pago?: string | null
    contacto?: string | null
    id_administrador_establecimiento?: number | null
    categorias?: CategoriaUncheckedCreateNestedManyWithoutEstablecimientoInput
    pedidos?: PedidoUncheckedCreateNestedManyWithoutEstablecimientoInput
    empleados?: UsuarioUncheckedCreateNestedManyWithoutEstablecimientoInput
  }

  export type EstablecimientoCreateOrConnectWithoutProductosInput = {
    where: EstablecimientoWhereUniqueInput
    create: XOR<EstablecimientoCreateWithoutProductosInput, EstablecimientoUncheckedCreateWithoutProductosInput>
  }

  export type ProductoTraduccionCreateWithoutProductoInput = {
    idioma: string
    nombre: string
    descripcion?: string | null
  }

  export type ProductoTraduccionUncheckedCreateWithoutProductoInput = {
    id_traduccion?: number
    idioma: string
    nombre: string
    descripcion?: string | null
  }

  export type ProductoTraduccionCreateOrConnectWithoutProductoInput = {
    where: ProductoTraduccionWhereUniqueInput
    create: XOR<ProductoTraduccionCreateWithoutProductoInput, ProductoTraduccionUncheckedCreateWithoutProductoInput>
  }

  export type ProductoTraduccionCreateManyProductoInputEnvelope = {
    data: ProductoTraduccionCreateManyProductoInput | ProductoTraduccionCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type DetallePedidoUpsertWithWhereUniqueWithoutProductoInput = {
    where: DetallePedidoWhereUniqueInput
    update: XOR<DetallePedidoUpdateWithoutProductoInput, DetallePedidoUncheckedUpdateWithoutProductoInput>
    create: XOR<DetallePedidoCreateWithoutProductoInput, DetallePedidoUncheckedCreateWithoutProductoInput>
  }

  export type DetallePedidoUpdateWithWhereUniqueWithoutProductoInput = {
    where: DetallePedidoWhereUniqueInput
    data: XOR<DetallePedidoUpdateWithoutProductoInput, DetallePedidoUncheckedUpdateWithoutProductoInput>
  }

  export type DetallePedidoUpdateManyWithWhereWithoutProductoInput = {
    where: DetallePedidoScalarWhereInput
    data: XOR<DetallePedidoUpdateManyMutationInput, DetallePedidoUncheckedUpdateManyWithoutProductoInput>
  }

  export type DetallePedidoScalarWhereInput = {
    AND?: DetallePedidoScalarWhereInput | DetallePedidoScalarWhereInput[]
    OR?: DetallePedidoScalarWhereInput[]
    NOT?: DetallePedidoScalarWhereInput | DetallePedidoScalarWhereInput[]
    id_detalle_pedido?: IntFilter<"DetallePedido"> | number
    id_pedido?: IntFilter<"DetallePedido"> | number
    id_producto?: IntFilter<"DetallePedido"> | number
    cantidad?: IntFilter<"DetallePedido"> | number
    especialidades?: StringNullableFilter<"DetallePedido"> | string | null
    estado?: EnumEstadoItemPedidoNullableFilter<"DetallePedido"> | $Enums.EstadoItemPedido | null
  }

  export type CategoriaUpsertWithoutProductosInput = {
    update: XOR<CategoriaUpdateWithoutProductosInput, CategoriaUncheckedUpdateWithoutProductosInput>
    create: XOR<CategoriaCreateWithoutProductosInput, CategoriaUncheckedCreateWithoutProductosInput>
    where?: CategoriaWhereInput
  }

  export type CategoriaUpdateToOneWithWhereWithoutProductosInput = {
    where?: CategoriaWhereInput
    data: XOR<CategoriaUpdateWithoutProductosInput, CategoriaUncheckedUpdateWithoutProductosInput>
  }

  export type CategoriaUpdateWithoutProductosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    orden?: NullableIntFieldUpdateOperationsInput | number | null
    establecimiento?: EstablecimientoUpdateOneRequiredWithoutCategoriasNestedInput
    CategoriaTraduccion?: CategoriaTraduccionUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaUncheckedUpdateWithoutProductosInput = {
    id_categoria?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    id_establecimiento?: IntFieldUpdateOperationsInput | number
    orden?: NullableIntFieldUpdateOperationsInput | number | null
    CategoriaTraduccion?: CategoriaTraduccionUncheckedUpdateManyWithoutCategoriaNestedInput
  }

  export type EstablecimientoUpsertWithoutProductosInput = {
    update: XOR<EstablecimientoUpdateWithoutProductosInput, EstablecimientoUncheckedUpdateWithoutProductosInput>
    create: XOR<EstablecimientoCreateWithoutProductosInput, EstablecimientoUncheckedCreateWithoutProductosInput>
    where?: EstablecimientoWhereInput
  }

  export type EstablecimientoUpdateToOneWithWhereWithoutProductosInput = {
    where?: EstablecimientoWhereInput
    data: XOR<EstablecimientoUpdateWithoutProductosInput, EstablecimientoUncheckedUpdateWithoutProductosInput>
  }

  export type EstablecimientoUpdateWithoutProductosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    cp?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    telefono1?: NullableStringFieldUpdateOperationsInput | string | null
    telefono2?: NullableStringFieldUpdateOperationsInput | string | null
    datos_bancarios_cobro?: NullableStringFieldUpdateOperationsInput | string | null
    datos_bancarios_pago?: NullableStringFieldUpdateOperationsInput | string | null
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    categorias?: CategoriaUpdateManyWithoutEstablecimientoNestedInput
    administrador?: UsuarioUpdateOneWithoutAdministraNestedInput
    pedidos?: PedidoUpdateManyWithoutEstablecimientoNestedInput
    empleados?: UsuarioUpdateManyWithoutEstablecimientoNestedInput
  }

  export type EstablecimientoUncheckedUpdateWithoutProductosInput = {
    id_establecimiento?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    cp?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    telefono1?: NullableStringFieldUpdateOperationsInput | string | null
    telefono2?: NullableStringFieldUpdateOperationsInput | string | null
    datos_bancarios_cobro?: NullableStringFieldUpdateOperationsInput | string | null
    datos_bancarios_pago?: NullableStringFieldUpdateOperationsInput | string | null
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    id_administrador_establecimiento?: NullableIntFieldUpdateOperationsInput | number | null
    categorias?: CategoriaUncheckedUpdateManyWithoutEstablecimientoNestedInput
    pedidos?: PedidoUncheckedUpdateManyWithoutEstablecimientoNestedInput
    empleados?: UsuarioUncheckedUpdateManyWithoutEstablecimientoNestedInput
  }

  export type ProductoTraduccionUpsertWithWhereUniqueWithoutProductoInput = {
    where: ProductoTraduccionWhereUniqueInput
    update: XOR<ProductoTraduccionUpdateWithoutProductoInput, ProductoTraduccionUncheckedUpdateWithoutProductoInput>
    create: XOR<ProductoTraduccionCreateWithoutProductoInput, ProductoTraduccionUncheckedCreateWithoutProductoInput>
  }

  export type ProductoTraduccionUpdateWithWhereUniqueWithoutProductoInput = {
    where: ProductoTraduccionWhereUniqueInput
    data: XOR<ProductoTraduccionUpdateWithoutProductoInput, ProductoTraduccionUncheckedUpdateWithoutProductoInput>
  }

  export type ProductoTraduccionUpdateManyWithWhereWithoutProductoInput = {
    where: ProductoTraduccionScalarWhereInput
    data: XOR<ProductoTraduccionUpdateManyMutationInput, ProductoTraduccionUncheckedUpdateManyWithoutProductoInput>
  }

  export type ProductoTraduccionScalarWhereInput = {
    AND?: ProductoTraduccionScalarWhereInput | ProductoTraduccionScalarWhereInput[]
    OR?: ProductoTraduccionScalarWhereInput[]
    NOT?: ProductoTraduccionScalarWhereInput | ProductoTraduccionScalarWhereInput[]
    id_traduccion?: IntFilter<"ProductoTraduccion"> | number
    id_producto?: IntFilter<"ProductoTraduccion"> | number
    idioma?: StringFilter<"ProductoTraduccion"> | string
    nombre?: StringFilter<"ProductoTraduccion"> | string
    descripcion?: StringNullableFilter<"ProductoTraduccion"> | string | null
  }

  export type ProductoCreateWithoutProductoTraduccionInput = {
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    imagen_url?: string | null
    orden?: number | null
    detallesPedido?: DetallePedidoCreateNestedManyWithoutProductoInput
    categoria: CategoriaCreateNestedOneWithoutProductosInput
    establecimiento: EstablecimientoCreateNestedOneWithoutProductosInput
  }

  export type ProductoUncheckedCreateWithoutProductoTraduccionInput = {
    id_producto?: number
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    imagen_url?: string | null
    id_categoria: number
    id_establecimiento: number
    orden?: number | null
    detallesPedido?: DetallePedidoUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutProductoTraduccionInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutProductoTraduccionInput, ProductoUncheckedCreateWithoutProductoTraduccionInput>
  }

  export type ProductoUpsertWithoutProductoTraduccionInput = {
    update: XOR<ProductoUpdateWithoutProductoTraduccionInput, ProductoUncheckedUpdateWithoutProductoTraduccionInput>
    create: XOR<ProductoCreateWithoutProductoTraduccionInput, ProductoUncheckedCreateWithoutProductoTraduccionInput>
    where?: ProductoWhereInput
  }

  export type ProductoUpdateToOneWithWhereWithoutProductoTraduccionInput = {
    where?: ProductoWhereInput
    data: XOR<ProductoUpdateWithoutProductoTraduccionInput, ProductoUncheckedUpdateWithoutProductoTraduccionInput>
  }

  export type ProductoUpdateWithoutProductoTraduccionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    orden?: NullableIntFieldUpdateOperationsInput | number | null
    detallesPedido?: DetallePedidoUpdateManyWithoutProductoNestedInput
    categoria?: CategoriaUpdateOneRequiredWithoutProductosNestedInput
    establecimiento?: EstablecimientoUpdateOneRequiredWithoutProductosNestedInput
  }

  export type ProductoUncheckedUpdateWithoutProductoTraduccionInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    id_categoria?: IntFieldUpdateOperationsInput | number
    id_establecimiento?: IntFieldUpdateOperationsInput | number
    orden?: NullableIntFieldUpdateOperationsInput | number | null
    detallesPedido?: DetallePedidoUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type DetallePedidoCreateWithoutPedidoInput = {
    cantidad?: number
    especialidades?: string | null
    estado?: $Enums.EstadoItemPedido | null
    producto: ProductoCreateNestedOneWithoutDetallesPedidoInput
  }

  export type DetallePedidoUncheckedCreateWithoutPedidoInput = {
    id_detalle_pedido?: number
    id_producto: number
    cantidad?: number
    especialidades?: string | null
    estado?: $Enums.EstadoItemPedido | null
  }

  export type DetallePedidoCreateOrConnectWithoutPedidoInput = {
    where: DetallePedidoWhereUniqueInput
    create: XOR<DetallePedidoCreateWithoutPedidoInput, DetallePedidoUncheckedCreateWithoutPedidoInput>
  }

  export type DetallePedidoCreateManyPedidoInputEnvelope = {
    data: DetallePedidoCreateManyPedidoInput | DetallePedidoCreateManyPedidoInput[]
    skipDuplicates?: boolean
  }

  export type EstadoPedidoCreateWithoutPedidoInput = {
    estado: $Enums.EstadoPedidoGeneral
    fecha_hora?: Date | string
    usuario?: UsuarioCreateNestedOneWithoutEstadosPedidoInput
  }

  export type EstadoPedidoUncheckedCreateWithoutPedidoInput = {
    id_estado_pedido?: number
    id_usuario?: number | null
    estado: $Enums.EstadoPedidoGeneral
    fecha_hora?: Date | string
  }

  export type EstadoPedidoCreateOrConnectWithoutPedidoInput = {
    where: EstadoPedidoWhereUniqueInput
    create: XOR<EstadoPedidoCreateWithoutPedidoInput, EstadoPedidoUncheckedCreateWithoutPedidoInput>
  }

  export type EstadoPedidoCreateManyPedidoInputEnvelope = {
    data: EstadoPedidoCreateManyPedidoInput | EstadoPedidoCreateManyPedidoInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioCreateWithoutPedidosInput = {
    rol: $Enums.RolUsuario
    nombre?: string | null
    email?: string | null
    contrasena?: string | null
    administra?: EstablecimientoCreateNestedOneWithoutAdministradorInput
    estadosPedido?: EstadoPedidoCreateNestedManyWithoutUsuarioInput
    establecimiento?: EstablecimientoCreateNestedOneWithoutEmpleadosInput
  }

  export type UsuarioUncheckedCreateWithoutPedidosInput = {
    id_usuario?: number
    rol: $Enums.RolUsuario
    nombre?: string | null
    email?: string | null
    contrasena?: string | null
    id_establecimiento?: number | null
    administra?: EstablecimientoUncheckedCreateNestedOneWithoutAdministradorInput
    estadosPedido?: EstadoPedidoUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutPedidosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutPedidosInput, UsuarioUncheckedCreateWithoutPedidosInput>
  }

  export type EstablecimientoCreateWithoutPedidosInput = {
    nombre: string
    cif?: string | null
    direccion?: string | null
    cp?: string | null
    ciudad?: string | null
    telefono1?: string | null
    telefono2?: string | null
    datos_bancarios_cobro?: string | null
    datos_bancarios_pago?: string | null
    contacto?: string | null
    categorias?: CategoriaCreateNestedManyWithoutEstablecimientoInput
    administrador?: UsuarioCreateNestedOneWithoutAdministraInput
    productos?: ProductoCreateNestedManyWithoutEstablecimientoInput
    empleados?: UsuarioCreateNestedManyWithoutEstablecimientoInput
  }

  export type EstablecimientoUncheckedCreateWithoutPedidosInput = {
    id_establecimiento?: number
    nombre: string
    cif?: string | null
    direccion?: string | null
    cp?: string | null
    ciudad?: string | null
    telefono1?: string | null
    telefono2?: string | null
    datos_bancarios_cobro?: string | null
    datos_bancarios_pago?: string | null
    contacto?: string | null
    id_administrador_establecimiento?: number | null
    categorias?: CategoriaUncheckedCreateNestedManyWithoutEstablecimientoInput
    productos?: ProductoUncheckedCreateNestedManyWithoutEstablecimientoInput
    empleados?: UsuarioUncheckedCreateNestedManyWithoutEstablecimientoInput
  }

  export type EstablecimientoCreateOrConnectWithoutPedidosInput = {
    where: EstablecimientoWhereUniqueInput
    create: XOR<EstablecimientoCreateWithoutPedidosInput, EstablecimientoUncheckedCreateWithoutPedidosInput>
  }

  export type DetallePedidoUpsertWithWhereUniqueWithoutPedidoInput = {
    where: DetallePedidoWhereUniqueInput
    update: XOR<DetallePedidoUpdateWithoutPedidoInput, DetallePedidoUncheckedUpdateWithoutPedidoInput>
    create: XOR<DetallePedidoCreateWithoutPedidoInput, DetallePedidoUncheckedCreateWithoutPedidoInput>
  }

  export type DetallePedidoUpdateWithWhereUniqueWithoutPedidoInput = {
    where: DetallePedidoWhereUniqueInput
    data: XOR<DetallePedidoUpdateWithoutPedidoInput, DetallePedidoUncheckedUpdateWithoutPedidoInput>
  }

  export type DetallePedidoUpdateManyWithWhereWithoutPedidoInput = {
    where: DetallePedidoScalarWhereInput
    data: XOR<DetallePedidoUpdateManyMutationInput, DetallePedidoUncheckedUpdateManyWithoutPedidoInput>
  }

  export type EstadoPedidoUpsertWithWhereUniqueWithoutPedidoInput = {
    where: EstadoPedidoWhereUniqueInput
    update: XOR<EstadoPedidoUpdateWithoutPedidoInput, EstadoPedidoUncheckedUpdateWithoutPedidoInput>
    create: XOR<EstadoPedidoCreateWithoutPedidoInput, EstadoPedidoUncheckedCreateWithoutPedidoInput>
  }

  export type EstadoPedidoUpdateWithWhereUniqueWithoutPedidoInput = {
    where: EstadoPedidoWhereUniqueInput
    data: XOR<EstadoPedidoUpdateWithoutPedidoInput, EstadoPedidoUncheckedUpdateWithoutPedidoInput>
  }

  export type EstadoPedidoUpdateManyWithWhereWithoutPedidoInput = {
    where: EstadoPedidoScalarWhereInput
    data: XOR<EstadoPedidoUpdateManyMutationInput, EstadoPedidoUncheckedUpdateManyWithoutPedidoInput>
  }

  export type UsuarioUpsertWithoutPedidosInput = {
    update: XOR<UsuarioUpdateWithoutPedidosInput, UsuarioUncheckedUpdateWithoutPedidosInput>
    create: XOR<UsuarioCreateWithoutPedidosInput, UsuarioUncheckedCreateWithoutPedidosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutPedidosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutPedidosInput, UsuarioUncheckedUpdateWithoutPedidosInput>
  }

  export type UsuarioUpdateWithoutPedidosInput = {
    rol?: EnumRolUsuarioFieldUpdateOperationsInput | $Enums.RolUsuario
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    administra?: EstablecimientoUpdateOneWithoutAdministradorNestedInput
    estadosPedido?: EstadoPedidoUpdateManyWithoutUsuarioNestedInput
    establecimiento?: EstablecimientoUpdateOneWithoutEmpleadosNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutPedidosInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    rol?: EnumRolUsuarioFieldUpdateOperationsInput | $Enums.RolUsuario
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    id_establecimiento?: NullableIntFieldUpdateOperationsInput | number | null
    administra?: EstablecimientoUncheckedUpdateOneWithoutAdministradorNestedInput
    estadosPedido?: EstadoPedidoUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type EstablecimientoUpsertWithoutPedidosInput = {
    update: XOR<EstablecimientoUpdateWithoutPedidosInput, EstablecimientoUncheckedUpdateWithoutPedidosInput>
    create: XOR<EstablecimientoCreateWithoutPedidosInput, EstablecimientoUncheckedCreateWithoutPedidosInput>
    where?: EstablecimientoWhereInput
  }

  export type EstablecimientoUpdateToOneWithWhereWithoutPedidosInput = {
    where?: EstablecimientoWhereInput
    data: XOR<EstablecimientoUpdateWithoutPedidosInput, EstablecimientoUncheckedUpdateWithoutPedidosInput>
  }

  export type EstablecimientoUpdateWithoutPedidosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    cp?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    telefono1?: NullableStringFieldUpdateOperationsInput | string | null
    telefono2?: NullableStringFieldUpdateOperationsInput | string | null
    datos_bancarios_cobro?: NullableStringFieldUpdateOperationsInput | string | null
    datos_bancarios_pago?: NullableStringFieldUpdateOperationsInput | string | null
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    categorias?: CategoriaUpdateManyWithoutEstablecimientoNestedInput
    administrador?: UsuarioUpdateOneWithoutAdministraNestedInput
    productos?: ProductoUpdateManyWithoutEstablecimientoNestedInput
    empleados?: UsuarioUpdateManyWithoutEstablecimientoNestedInput
  }

  export type EstablecimientoUncheckedUpdateWithoutPedidosInput = {
    id_establecimiento?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    cp?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    telefono1?: NullableStringFieldUpdateOperationsInput | string | null
    telefono2?: NullableStringFieldUpdateOperationsInput | string | null
    datos_bancarios_cobro?: NullableStringFieldUpdateOperationsInput | string | null
    datos_bancarios_pago?: NullableStringFieldUpdateOperationsInput | string | null
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    id_administrador_establecimiento?: NullableIntFieldUpdateOperationsInput | number | null
    categorias?: CategoriaUncheckedUpdateManyWithoutEstablecimientoNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutEstablecimientoNestedInput
    empleados?: UsuarioUncheckedUpdateManyWithoutEstablecimientoNestedInput
  }

  export type PedidoCreateWithoutDetallesInput = {
    fecha_hora?: Date | string
    estado?: $Enums.EstadoPedidoGeneral | null
    total?: Decimal | DecimalJsLike | number | string | null
    metodo_pago?: string | null
    estadosPedido?: EstadoPedidoCreateNestedManyWithoutPedidoInput
    cliente?: UsuarioCreateNestedOneWithoutPedidosInput
    establecimiento: EstablecimientoCreateNestedOneWithoutPedidosInput
  }

  export type PedidoUncheckedCreateWithoutDetallesInput = {
    id_pedido?: number
    id_cliente?: number | null
    id_establecimiento: number
    fecha_hora?: Date | string
    estado?: $Enums.EstadoPedidoGeneral | null
    total?: Decimal | DecimalJsLike | number | string | null
    metodo_pago?: string | null
    estadosPedido?: EstadoPedidoUncheckedCreateNestedManyWithoutPedidoInput
  }

  export type PedidoCreateOrConnectWithoutDetallesInput = {
    where: PedidoWhereUniqueInput
    create: XOR<PedidoCreateWithoutDetallesInput, PedidoUncheckedCreateWithoutDetallesInput>
  }

  export type ProductoCreateWithoutDetallesPedidoInput = {
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    imagen_url?: string | null
    orden?: number | null
    categoria: CategoriaCreateNestedOneWithoutProductosInput
    establecimiento: EstablecimientoCreateNestedOneWithoutProductosInput
    ProductoTraduccion?: ProductoTraduccionCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutDetallesPedidoInput = {
    id_producto?: number
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    imagen_url?: string | null
    id_categoria: number
    id_establecimiento: number
    orden?: number | null
    ProductoTraduccion?: ProductoTraduccionUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutDetallesPedidoInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutDetallesPedidoInput, ProductoUncheckedCreateWithoutDetallesPedidoInput>
  }

  export type PedidoUpsertWithoutDetallesInput = {
    update: XOR<PedidoUpdateWithoutDetallesInput, PedidoUncheckedUpdateWithoutDetallesInput>
    create: XOR<PedidoCreateWithoutDetallesInput, PedidoUncheckedCreateWithoutDetallesInput>
    where?: PedidoWhereInput
  }

  export type PedidoUpdateToOneWithWhereWithoutDetallesInput = {
    where?: PedidoWhereInput
    data: XOR<PedidoUpdateWithoutDetallesInput, PedidoUncheckedUpdateWithoutDetallesInput>
  }

  export type PedidoUpdateWithoutDetallesInput = {
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: NullableEnumEstadoPedidoGeneralFieldUpdateOperationsInput | $Enums.EstadoPedidoGeneral | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
    estadosPedido?: EstadoPedidoUpdateManyWithoutPedidoNestedInput
    cliente?: UsuarioUpdateOneWithoutPedidosNestedInput
    establecimiento?: EstablecimientoUpdateOneRequiredWithoutPedidosNestedInput
  }

  export type PedidoUncheckedUpdateWithoutDetallesInput = {
    id_pedido?: IntFieldUpdateOperationsInput | number
    id_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    id_establecimiento?: IntFieldUpdateOperationsInput | number
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: NullableEnumEstadoPedidoGeneralFieldUpdateOperationsInput | $Enums.EstadoPedidoGeneral | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
    estadosPedido?: EstadoPedidoUncheckedUpdateManyWithoutPedidoNestedInput
  }

  export type ProductoUpsertWithoutDetallesPedidoInput = {
    update: XOR<ProductoUpdateWithoutDetallesPedidoInput, ProductoUncheckedUpdateWithoutDetallesPedidoInput>
    create: XOR<ProductoCreateWithoutDetallesPedidoInput, ProductoUncheckedCreateWithoutDetallesPedidoInput>
    where?: ProductoWhereInput
  }

  export type ProductoUpdateToOneWithWhereWithoutDetallesPedidoInput = {
    where?: ProductoWhereInput
    data: XOR<ProductoUpdateWithoutDetallesPedidoInput, ProductoUncheckedUpdateWithoutDetallesPedidoInput>
  }

  export type ProductoUpdateWithoutDetallesPedidoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    orden?: NullableIntFieldUpdateOperationsInput | number | null
    categoria?: CategoriaUpdateOneRequiredWithoutProductosNestedInput
    establecimiento?: EstablecimientoUpdateOneRequiredWithoutProductosNestedInput
    ProductoTraduccion?: ProductoTraduccionUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutDetallesPedidoInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    id_categoria?: IntFieldUpdateOperationsInput | number
    id_establecimiento?: IntFieldUpdateOperationsInput | number
    orden?: NullableIntFieldUpdateOperationsInput | number | null
    ProductoTraduccion?: ProductoTraduccionUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type PedidoCreateWithoutEstadosPedidoInput = {
    fecha_hora?: Date | string
    estado?: $Enums.EstadoPedidoGeneral | null
    total?: Decimal | DecimalJsLike | number | string | null
    metodo_pago?: string | null
    detalles?: DetallePedidoCreateNestedManyWithoutPedidoInput
    cliente?: UsuarioCreateNestedOneWithoutPedidosInput
    establecimiento: EstablecimientoCreateNestedOneWithoutPedidosInput
  }

  export type PedidoUncheckedCreateWithoutEstadosPedidoInput = {
    id_pedido?: number
    id_cliente?: number | null
    id_establecimiento: number
    fecha_hora?: Date | string
    estado?: $Enums.EstadoPedidoGeneral | null
    total?: Decimal | DecimalJsLike | number | string | null
    metodo_pago?: string | null
    detalles?: DetallePedidoUncheckedCreateNestedManyWithoutPedidoInput
  }

  export type PedidoCreateOrConnectWithoutEstadosPedidoInput = {
    where: PedidoWhereUniqueInput
    create: XOR<PedidoCreateWithoutEstadosPedidoInput, PedidoUncheckedCreateWithoutEstadosPedidoInput>
  }

  export type UsuarioCreateWithoutEstadosPedidoInput = {
    rol: $Enums.RolUsuario
    nombre?: string | null
    email?: string | null
    contrasena?: string | null
    administra?: EstablecimientoCreateNestedOneWithoutAdministradorInput
    pedidos?: PedidoCreateNestedManyWithoutClienteInput
    establecimiento?: EstablecimientoCreateNestedOneWithoutEmpleadosInput
  }

  export type UsuarioUncheckedCreateWithoutEstadosPedidoInput = {
    id_usuario?: number
    rol: $Enums.RolUsuario
    nombre?: string | null
    email?: string | null
    contrasena?: string | null
    id_establecimiento?: number | null
    administra?: EstablecimientoUncheckedCreateNestedOneWithoutAdministradorInput
    pedidos?: PedidoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type UsuarioCreateOrConnectWithoutEstadosPedidoInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutEstadosPedidoInput, UsuarioUncheckedCreateWithoutEstadosPedidoInput>
  }

  export type PedidoUpsertWithoutEstadosPedidoInput = {
    update: XOR<PedidoUpdateWithoutEstadosPedidoInput, PedidoUncheckedUpdateWithoutEstadosPedidoInput>
    create: XOR<PedidoCreateWithoutEstadosPedidoInput, PedidoUncheckedCreateWithoutEstadosPedidoInput>
    where?: PedidoWhereInput
  }

  export type PedidoUpdateToOneWithWhereWithoutEstadosPedidoInput = {
    where?: PedidoWhereInput
    data: XOR<PedidoUpdateWithoutEstadosPedidoInput, PedidoUncheckedUpdateWithoutEstadosPedidoInput>
  }

  export type PedidoUpdateWithoutEstadosPedidoInput = {
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: NullableEnumEstadoPedidoGeneralFieldUpdateOperationsInput | $Enums.EstadoPedidoGeneral | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
    detalles?: DetallePedidoUpdateManyWithoutPedidoNestedInput
    cliente?: UsuarioUpdateOneWithoutPedidosNestedInput
    establecimiento?: EstablecimientoUpdateOneRequiredWithoutPedidosNestedInput
  }

  export type PedidoUncheckedUpdateWithoutEstadosPedidoInput = {
    id_pedido?: IntFieldUpdateOperationsInput | number
    id_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    id_establecimiento?: IntFieldUpdateOperationsInput | number
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: NullableEnumEstadoPedidoGeneralFieldUpdateOperationsInput | $Enums.EstadoPedidoGeneral | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
    detalles?: DetallePedidoUncheckedUpdateManyWithoutPedidoNestedInput
  }

  export type UsuarioUpsertWithoutEstadosPedidoInput = {
    update: XOR<UsuarioUpdateWithoutEstadosPedidoInput, UsuarioUncheckedUpdateWithoutEstadosPedidoInput>
    create: XOR<UsuarioCreateWithoutEstadosPedidoInput, UsuarioUncheckedCreateWithoutEstadosPedidoInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutEstadosPedidoInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutEstadosPedidoInput, UsuarioUncheckedUpdateWithoutEstadosPedidoInput>
  }

  export type UsuarioUpdateWithoutEstadosPedidoInput = {
    rol?: EnumRolUsuarioFieldUpdateOperationsInput | $Enums.RolUsuario
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    administra?: EstablecimientoUpdateOneWithoutAdministradorNestedInput
    pedidos?: PedidoUpdateManyWithoutClienteNestedInput
    establecimiento?: EstablecimientoUpdateOneWithoutEmpleadosNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutEstadosPedidoInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    rol?: EnumRolUsuarioFieldUpdateOperationsInput | $Enums.RolUsuario
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    id_establecimiento?: NullableIntFieldUpdateOperationsInput | number | null
    administra?: EstablecimientoUncheckedUpdateOneWithoutAdministradorNestedInput
    pedidos?: PedidoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type EstadoPedidoCreateManyUsuarioInput = {
    id_estado_pedido?: number
    id_pedido: number
    estado: $Enums.EstadoPedidoGeneral
    fecha_hora?: Date | string
  }

  export type PedidoCreateManyClienteInput = {
    id_pedido?: number
    id_establecimiento: number
    fecha_hora?: Date | string
    estado?: $Enums.EstadoPedidoGeneral | null
    total?: Decimal | DecimalJsLike | number | string | null
    metodo_pago?: string | null
  }

  export type EstadoPedidoUpdateWithoutUsuarioInput = {
    estado?: EnumEstadoPedidoGeneralFieldUpdateOperationsInput | $Enums.EstadoPedidoGeneral
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
    pedido?: PedidoUpdateOneRequiredWithoutEstadosPedidoNestedInput
  }

  export type EstadoPedidoUncheckedUpdateWithoutUsuarioInput = {
    id_estado_pedido?: IntFieldUpdateOperationsInput | number
    id_pedido?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoPedidoGeneralFieldUpdateOperationsInput | $Enums.EstadoPedidoGeneral
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EstadoPedidoUncheckedUpdateManyWithoutUsuarioInput = {
    id_estado_pedido?: IntFieldUpdateOperationsInput | number
    id_pedido?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoPedidoGeneralFieldUpdateOperationsInput | $Enums.EstadoPedidoGeneral
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PedidoUpdateWithoutClienteInput = {
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: NullableEnumEstadoPedidoGeneralFieldUpdateOperationsInput | $Enums.EstadoPedidoGeneral | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
    detalles?: DetallePedidoUpdateManyWithoutPedidoNestedInput
    estadosPedido?: EstadoPedidoUpdateManyWithoutPedidoNestedInput
    establecimiento?: EstablecimientoUpdateOneRequiredWithoutPedidosNestedInput
  }

  export type PedidoUncheckedUpdateWithoutClienteInput = {
    id_pedido?: IntFieldUpdateOperationsInput | number
    id_establecimiento?: IntFieldUpdateOperationsInput | number
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: NullableEnumEstadoPedidoGeneralFieldUpdateOperationsInput | $Enums.EstadoPedidoGeneral | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
    detalles?: DetallePedidoUncheckedUpdateManyWithoutPedidoNestedInput
    estadosPedido?: EstadoPedidoUncheckedUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoUncheckedUpdateManyWithoutClienteInput = {
    id_pedido?: IntFieldUpdateOperationsInput | number
    id_establecimiento?: IntFieldUpdateOperationsInput | number
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: NullableEnumEstadoPedidoGeneralFieldUpdateOperationsInput | $Enums.EstadoPedidoGeneral | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CategoriaCreateManyEstablecimientoInput = {
    id_categoria?: number
    nombre: string
    imagen_url?: string | null
    orden?: number | null
  }

  export type PedidoCreateManyEstablecimientoInput = {
    id_pedido?: number
    id_cliente?: number | null
    fecha_hora?: Date | string
    estado?: $Enums.EstadoPedidoGeneral | null
    total?: Decimal | DecimalJsLike | number | string | null
    metodo_pago?: string | null
  }

  export type ProductoCreateManyEstablecimientoInput = {
    id_producto?: number
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    imagen_url?: string | null
    id_categoria: number
    orden?: number | null
  }

  export type UsuarioCreateManyEstablecimientoInput = {
    id_usuario?: number
    rol: $Enums.RolUsuario
    nombre?: string | null
    email?: string | null
    contrasena?: string | null
  }

  export type CategoriaUpdateWithoutEstablecimientoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    orden?: NullableIntFieldUpdateOperationsInput | number | null
    CategoriaTraduccion?: CategoriaTraduccionUpdateManyWithoutCategoriaNestedInput
    productos?: ProductoUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaUncheckedUpdateWithoutEstablecimientoInput = {
    id_categoria?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    orden?: NullableIntFieldUpdateOperationsInput | number | null
    CategoriaTraduccion?: CategoriaTraduccionUncheckedUpdateManyWithoutCategoriaNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaUncheckedUpdateManyWithoutEstablecimientoInput = {
    id_categoria?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    orden?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PedidoUpdateWithoutEstablecimientoInput = {
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: NullableEnumEstadoPedidoGeneralFieldUpdateOperationsInput | $Enums.EstadoPedidoGeneral | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
    detalles?: DetallePedidoUpdateManyWithoutPedidoNestedInput
    estadosPedido?: EstadoPedidoUpdateManyWithoutPedidoNestedInput
    cliente?: UsuarioUpdateOneWithoutPedidosNestedInput
  }

  export type PedidoUncheckedUpdateWithoutEstablecimientoInput = {
    id_pedido?: IntFieldUpdateOperationsInput | number
    id_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: NullableEnumEstadoPedidoGeneralFieldUpdateOperationsInput | $Enums.EstadoPedidoGeneral | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
    detalles?: DetallePedidoUncheckedUpdateManyWithoutPedidoNestedInput
    estadosPedido?: EstadoPedidoUncheckedUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoUncheckedUpdateManyWithoutEstablecimientoInput = {
    id_pedido?: IntFieldUpdateOperationsInput | number
    id_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: NullableEnumEstadoPedidoGeneralFieldUpdateOperationsInput | $Enums.EstadoPedidoGeneral | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductoUpdateWithoutEstablecimientoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    orden?: NullableIntFieldUpdateOperationsInput | number | null
    detallesPedido?: DetallePedidoUpdateManyWithoutProductoNestedInput
    categoria?: CategoriaUpdateOneRequiredWithoutProductosNestedInput
    ProductoTraduccion?: ProductoTraduccionUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutEstablecimientoInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    id_categoria?: IntFieldUpdateOperationsInput | number
    orden?: NullableIntFieldUpdateOperationsInput | number | null
    detallesPedido?: DetallePedidoUncheckedUpdateManyWithoutProductoNestedInput
    ProductoTraduccion?: ProductoTraduccionUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateManyWithoutEstablecimientoInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    id_categoria?: IntFieldUpdateOperationsInput | number
    orden?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type UsuarioUpdateWithoutEstablecimientoInput = {
    rol?: EnumRolUsuarioFieldUpdateOperationsInput | $Enums.RolUsuario
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    administra?: EstablecimientoUpdateOneWithoutAdministradorNestedInput
    estadosPedido?: EstadoPedidoUpdateManyWithoutUsuarioNestedInput
    pedidos?: PedidoUpdateManyWithoutClienteNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutEstablecimientoInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    rol?: EnumRolUsuarioFieldUpdateOperationsInput | $Enums.RolUsuario
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    administra?: EstablecimientoUncheckedUpdateOneWithoutAdministradorNestedInput
    estadosPedido?: EstadoPedidoUncheckedUpdateManyWithoutUsuarioNestedInput
    pedidos?: PedidoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type UsuarioUncheckedUpdateManyWithoutEstablecimientoInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    rol?: EnumRolUsuarioFieldUpdateOperationsInput | $Enums.RolUsuario
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CategoriaTraduccionCreateManyCategoriaInput = {
    id_traduccion?: number
    idioma: string
    nombre: string
  }

  export type ProductoCreateManyCategoriaInput = {
    id_producto?: number
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    imagen_url?: string | null
    id_establecimiento: number
    orden?: number | null
  }

  export type CategoriaTraduccionUpdateWithoutCategoriaInput = {
    idioma?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type CategoriaTraduccionUncheckedUpdateWithoutCategoriaInput = {
    id_traduccion?: IntFieldUpdateOperationsInput | number
    idioma?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type CategoriaTraduccionUncheckedUpdateManyWithoutCategoriaInput = {
    id_traduccion?: IntFieldUpdateOperationsInput | number
    idioma?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type ProductoUpdateWithoutCategoriaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    orden?: NullableIntFieldUpdateOperationsInput | number | null
    detallesPedido?: DetallePedidoUpdateManyWithoutProductoNestedInput
    establecimiento?: EstablecimientoUpdateOneRequiredWithoutProductosNestedInput
    ProductoTraduccion?: ProductoTraduccionUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutCategoriaInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    id_establecimiento?: IntFieldUpdateOperationsInput | number
    orden?: NullableIntFieldUpdateOperationsInput | number | null
    detallesPedido?: DetallePedidoUncheckedUpdateManyWithoutProductoNestedInput
    ProductoTraduccion?: ProductoTraduccionUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateManyWithoutCategoriaInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    id_establecimiento?: IntFieldUpdateOperationsInput | number
    orden?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DetallePedidoCreateManyProductoInput = {
    id_detalle_pedido?: number
    id_pedido: number
    cantidad?: number
    especialidades?: string | null
    estado?: $Enums.EstadoItemPedido | null
  }

  export type ProductoTraduccionCreateManyProductoInput = {
    id_traduccion?: number
    idioma: string
    nombre: string
    descripcion?: string | null
  }

  export type DetallePedidoUpdateWithoutProductoInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    especialidades?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableEnumEstadoItemPedidoFieldUpdateOperationsInput | $Enums.EstadoItemPedido | null
    pedido?: PedidoUpdateOneRequiredWithoutDetallesNestedInput
  }

  export type DetallePedidoUncheckedUpdateWithoutProductoInput = {
    id_detalle_pedido?: IntFieldUpdateOperationsInput | number
    id_pedido?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    especialidades?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableEnumEstadoItemPedidoFieldUpdateOperationsInput | $Enums.EstadoItemPedido | null
  }

  export type DetallePedidoUncheckedUpdateManyWithoutProductoInput = {
    id_detalle_pedido?: IntFieldUpdateOperationsInput | number
    id_pedido?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    especialidades?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableEnumEstadoItemPedidoFieldUpdateOperationsInput | $Enums.EstadoItemPedido | null
  }

  export type ProductoTraduccionUpdateWithoutProductoInput = {
    idioma?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductoTraduccionUncheckedUpdateWithoutProductoInput = {
    id_traduccion?: IntFieldUpdateOperationsInput | number
    idioma?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductoTraduccionUncheckedUpdateManyWithoutProductoInput = {
    id_traduccion?: IntFieldUpdateOperationsInput | number
    idioma?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DetallePedidoCreateManyPedidoInput = {
    id_detalle_pedido?: number
    id_producto: number
    cantidad?: number
    especialidades?: string | null
    estado?: $Enums.EstadoItemPedido | null
  }

  export type EstadoPedidoCreateManyPedidoInput = {
    id_estado_pedido?: number
    id_usuario?: number | null
    estado: $Enums.EstadoPedidoGeneral
    fecha_hora?: Date | string
  }

  export type DetallePedidoUpdateWithoutPedidoInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    especialidades?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableEnumEstadoItemPedidoFieldUpdateOperationsInput | $Enums.EstadoItemPedido | null
    producto?: ProductoUpdateOneRequiredWithoutDetallesPedidoNestedInput
  }

  export type DetallePedidoUncheckedUpdateWithoutPedidoInput = {
    id_detalle_pedido?: IntFieldUpdateOperationsInput | number
    id_producto?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    especialidades?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableEnumEstadoItemPedidoFieldUpdateOperationsInput | $Enums.EstadoItemPedido | null
  }

  export type DetallePedidoUncheckedUpdateManyWithoutPedidoInput = {
    id_detalle_pedido?: IntFieldUpdateOperationsInput | number
    id_producto?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    especialidades?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableEnumEstadoItemPedidoFieldUpdateOperationsInput | $Enums.EstadoItemPedido | null
  }

  export type EstadoPedidoUpdateWithoutPedidoInput = {
    estado?: EnumEstadoPedidoGeneralFieldUpdateOperationsInput | $Enums.EstadoPedidoGeneral
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneWithoutEstadosPedidoNestedInput
  }

  export type EstadoPedidoUncheckedUpdateWithoutPedidoInput = {
    id_estado_pedido?: IntFieldUpdateOperationsInput | number
    id_usuario?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumEstadoPedidoGeneralFieldUpdateOperationsInput | $Enums.EstadoPedidoGeneral
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EstadoPedidoUncheckedUpdateManyWithoutPedidoInput = {
    id_estado_pedido?: IntFieldUpdateOperationsInput | number
    id_usuario?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumEstadoPedidoGeneralFieldUpdateOperationsInput | $Enums.EstadoPedidoGeneral
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}